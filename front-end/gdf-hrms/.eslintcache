[{"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\index.js":"1","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\App.js":"2","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Layout.js":"3","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileLayout.js":"4","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\searchpage.js":"5","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryLayout.js":"6","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeAddressForm.js":"7","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeInformation.js":"8","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeContactForm.js":"9","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeePIForm.js":"10","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeOfficialInfoForm.js":"11","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\AddressForm.js":"12","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\PersonalInformationForm.js":"13","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\OfficialInformationForm.js":"14","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\ContactForm.js":"15","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByRegimentNumberForm.js":"16","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByOtherCriteriaForm.js":"17","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchResultsTable.js":"18","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryForm.js":"19","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryTable.js":"20","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\ViewCareerHistory.js":"21","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeInformation.js":"22","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Home.js":"23","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\axios.js":"24","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeContactForm.js":"25","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeePIForm.js":"26","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeOfficialInfoForm.js":"27"},{"size":535,"mtime":1617667704324,"results":"28","hashOfConfig":"29"},{"size":1892,"mtime":1619039928637,"results":"30","hashOfConfig":"29"},{"size":6064,"mtime":1618163409565,"results":"31","hashOfConfig":"29"},{"size":9553,"mtime":1619046232860,"results":"32","hashOfConfig":"29"},{"size":2765,"mtime":1617667704322,"results":"33","hashOfConfig":"29"},{"size":1940,"mtime":1619039993571,"results":"34","hashOfConfig":"29"},{"size":5208,"mtime":1618163302369,"results":"35","hashOfConfig":"29"},{"size":10304,"mtime":1618142155058,"results":"36","hashOfConfig":"29"},{"size":4353,"mtime":1618142155038,"results":"37","hashOfConfig":"29"},{"size":9174,"mtime":1618142155047,"results":"38","hashOfConfig":"29"},{"size":5866,"mtime":1617667704309,"results":"39","hashOfConfig":"29"},{"size":5503,"mtime":1618142155069,"results":"40","hashOfConfig":"29"},{"size":2853,"mtime":1618142155087,"results":"41","hashOfConfig":"29"},{"size":2138,"mtime":1618142155077,"results":"42","hashOfConfig":"29"},{"size":1933,"mtime":1617667704315,"results":"43","hashOfConfig":"29"},{"size":2187,"mtime":1617667704319,"results":"44","hashOfConfig":"29"},{"size":2756,"mtime":1617667704318,"results":"45","hashOfConfig":"29"},{"size":3955,"mtime":1617667704320,"results":"46","hashOfConfig":"29"},{"size":2056,"mtime":1619044217470,"results":"47","hashOfConfig":"29"},{"size":2481,"mtime":1619039928660,"results":"48","hashOfConfig":"29"},{"size":2311,"mtime":1619039928666,"results":"49","hashOfConfig":"29"},{"size":9912,"mtime":1618142155130,"results":"50","hashOfConfig":"29"},{"size":1171,"mtime":1618142155098,"results":"51","hashOfConfig":"29"},{"size":146,"mtime":1618142155120,"results":"52","hashOfConfig":"29"},{"size":4378,"mtime":1618142155116,"results":"53","hashOfConfig":"29"},{"size":7097,"mtime":1618142155119,"results":"54","hashOfConfig":"29"},{"size":5866,"mtime":1618142155118,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"zr70hf",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\index.js",[],["114","115"],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\App.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Layout.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileLayout.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\searchpage.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryLayout.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeAddressForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeInformation.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeContactForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeePIForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeOfficialInfoForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\AddressForm.js",[],["116","117"],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\PersonalInformationForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\OfficialInformationForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\ContactForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByRegimentNumberForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByOtherCriteriaForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchResultsTable.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryForm.js",["118","119","120","121","122"],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryTable.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\ViewCareerHistory.js",["123","124"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useParams } from 'react-router-dom';\r\nimport CareerHistoryTable from './CareerHistoryTable';\r\nimport Axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function ViewCareerHistory(props) {\r\n  const classes = useStyles();\r\n  const params = useParams();  \r\n  const [empData, setEmpData] = useState();\r\n  const [employeeInfo, setEmployeeInfo] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [newCareer, setNewCareer] = useState({});\r\n  const [rank, setRank] = useState();\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState();\r\n\r\n  const handleRankChange = (event) => {\r\n    setRank(event.target.value);\r\n  }\r\n\r\n  const handleDepartmentChange = (event) => {\r\n    setDepartment(event.target.value);\r\n  }\r\n\r\n  const handleStartDateChange = (event) => {\r\n    setStartDate(event.target.value);\r\n  }\r\n\r\n  const handleEndDateChange = (event) => {\r\n    setEndDate(event.target.value);\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    let Career = {\r\n      rank: rank,\r\n      department: department,\r\n      startDate: startDate,\r\n      endDate: endDate,\r\n      eId: empId,\r\n    };\r\n\r\n    \r\n    console.log(Career);\r\n    setOpen(false);\r\n  };\r\n \r\n  //Results from View Career History\r\n  let eId = params.empId;\r\n  let empId;\r\n\r\n  useEffect(() => {    \r\n    const getEmpCH = async () => {\r\n      if(eId){\r\n        const info = await Axios.get(\"EmployeeInfo/GetEmployeeCareerHistoryByTheirId?employeeId=\" + eId);\r\n        setEmpData(info.data);\r\n      }\r\n    };\r\n    const getEmpInfo = async () => {\r\n      if(eId){\r\n        const info = await Axios.get(\"EmployeeInfo/id/\" + eId);\r\n        setEmployeeInfo(info.data);\r\n      }\r\n    };\r\n    getEmpCH();\r\n    getEmpInfo();\r\n  }, [eId]);\r\n\r\n\r\n\r\n  const showInfo = () => {\r\n    if(employeeInfo != null) {\r\n      return(\r\n        <div>\r\n          <h2>Career History for {employeeInfo.firstName} {employeeInfo.lastName} ({employeeInfo.regimentNumber})</h2>\r\n        </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6}>  \r\n        <h1>Career History Page</h1>\r\n          {/* <h2>Career History for {employeeInfo.firstName} {employeeInfo.lastName} ({employeeInfo.regimentNumber})</h2> */}\r\n          {/* <h2>Career History</h2> */}\r\n          {showInfo()}\r\n\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n                <h1>\r\n                  <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Add Career History\r\n                  </Button> \r\n                  <div>\r\n                  <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                  <DialogTitle id=\"form-dialog-title\">Add Career History</DialogTitle>\r\n                  <DialogContent>\r\n                      <TextField margin=\"dense\" id=\"rank\" label=\"Rank\" type=\"text\" fullWidth value={rank} onChange={handleRankChange}/>\r\n                      <TextField margin=\"dense\" id=\"department\" label=\"Department\" type=\"text\" fullWidth value={department} onChange={handleDepartmentChange}/>\r\n                      <TextField margin=\"dense\" id=\"startDate\" label=\"Start Date\" type=\"text\" fullWidth value={startDate} onChange={handleStartDateChange}/>\r\n                      <TextField margin=\"dense\" id=\"endDate\" label=\"End Date\" type=\"text\" fullWidth value={endDate} onChange={handleEndDateChange}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose} color=\"primary\"> Cancel </Button>\r\n                  <Button onClick={handleSave} color=\"primary\"> Add Career</Button>\r\n                </DialogActions>\r\n                </Dialog>\r\n               </div>\r\n                </h1>\r\n                  </Grid>\r\n       \r\n        <Grid container item xs={12} spacing={3}>\r\n          <React.Fragment>\r\n            <div>\r\n              <Grid container spacing={3}>                \r\n                <Grid item xs={12}>\r\n                  <CareerHistoryTable data={empData}></CareerHistoryTable>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </React.Fragment>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeInformation.js",["125","126"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios';\r\nimport axios from './UpdateEmployeeComponents/axios'\r\n\r\nimport UpdateEmployeePIForm from './UpdateEmployeeComponents/UpdateEmployeePIForm';\r\n//import UpdateEmployeeAddressForm from './UpdateEmployeeComponents/UpdateEmployeeAddressForm';\r\nimport UpdateEmployeeContactForm from './UpdateEmployeeComponents/UpdateEmployeeContactForm';\r\nimport UpdateEmployeeOfficialInfoForm from './UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  \r\n   careerButton: {\r\n     marginLeft: '20px,'\r\n   }\r\n\r\n}));\r\n\r\nexport default function UpdateEmployeeInformation() {\r\n  const classes = useStyles();  \r\n  const [employeeInfo, setEmployeeInfo] = useState({});\r\n  const [empInfoGet, setEmpInfoGet] = useState({});\r\n  const [employeeAddress, setEmployeeAddress] = useState({});\r\n  const regNumber = 123456;\r\n\r\n  useEffect(() => {\r\n    const getEmpInfo = async () => {\r\n      if(regNumber){\r\n        const info = await Axios.get(\"GetInfo/RegimentNumber/\" + regNumber);    \r\n        setEmpInfoGet(info.data);  \r\n        console.log(info.data);      \r\n      }\r\n    };\r\n    const getEmpAddress = async () => {\r\n      if(regNumber){\r\n        const addressInfo = await Axios.get(\"EmployeeInfo/GetEmployeeAddressByTheirId?employeeId=1\");\r\n        setEmployeeAddress(addressInfo.data);\r\n      }\r\n    };\r\n    getEmpInfo();\r\n    getEmpAddress();\r\n  }, [regNumber]);\r\n\r\n  // AddEmployeePIForm INFORMATION\r\n  const [firstName, setFirstName] = useState();\r\n  const [lastName, setLastName] = useState();\r\n  const [otherName, setOtherName] = useState(\"\");\r\n  const [otherNameTwo, setOtherNameTwo] = useState(\"\");\r\n  const [maritalStatus, setMaritalStatus] = useState(\"\");\r\n  const [religion, setReligion] = useState(\"\");\r\n  const [ethnicity, setEthnicity] = useState(0);\r\n  const [sex, setSex] = useState(\"\");\r\n  const [dateOfBirth, setDateOfBirth] = useState();\r\n  const [nationality, setNationality] = useState(\"\");\r\n\r\n\r\n\r\n  const handleFirstNameChange = (event) => {\r\n    setFirstName(event.target.value);\r\n  };\r\n\r\n  const handleLastNameChange = (event) => {\r\n    setLastName(event.target.value);\r\n  };\r\n\r\n  const handleOtherNameChange = (event) => {\r\n    setOtherName(event.target.value);\r\n  };\r\n\r\n  const handleOtherNameTwoChange = (event) => {\r\n    setOtherNameTwo(event.target.value);\r\n  };\r\n\r\n  const handleMaritalStatusChange = (event) => {\r\n    setMaritalStatus(event.target.value);\r\n  };\r\n\r\n  const handleReligionChange = (event) => {\r\n    setReligion(event.target.value);\r\n  };\r\n\r\n  const handleEthnicityChange = (event) => {\r\n    setEthnicity(event.target.value);\r\n  };\r\n\r\n  // DON'T LAUGH TOO MUCH, YOU MIGHT POP A VEIN\r\n  const handleSexChange = (event) => {\r\n    setSex(event.target.value);\r\n  }\r\n\r\n  const handleDoBChange = (event) => {\r\n    setDateOfBirth(event.target.value);\r\n  }\r\n\r\n  const handleNationalityChange = (event) => {\r\n    setNationality(event.target.value);\r\n  }\r\n\r\n  // AddEmployeeContactForm Information\r\n  const [homeNumber, setHomeNumber] = useState();\r\n  const [cellNumber, setCellNumber] = useState();\r\n  const [workNumber, setWorkNumber] = useState();\r\n  const [email, setEmail] = useState();\r\n\r\n  const handleHomeNumChange = (event) => {      \r\n    setHomeNumber(event.target.value);\r\n  }\r\n\r\n  const handleCellNumChange = (event) => {    \r\n    setCellNumber(event.target.value);\r\n  }\r\n\r\n  const handleWorkNumChange = (event) => {       \r\n    setWorkNumber(event.target.value); \r\n  }\r\n\r\n  const handleEmailChange = (event) => {    \r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  // AddEmployeeOfficialInfoForm Information\r\n  const [regimentNumber, setRegimentNumber] = useState();\r\n  const [nationalIdNumber, setNationalIdNumber] = useState();\r\n  const [passportNumber, setPassportNumber] = useState();\r\n  const [passportExpirationDate, setPassportExpirationDate] = useState();\r\n  const [tinNumber, setTinNumber] = useState();\r\n\r\n  const handleRegNumChange = (event) => {    \r\n    setRegimentNumber(event.target.value);\r\n  }\r\n\r\n  const handleNationalIdNumChange = (event) => {    \r\n    setNationalIdNumber(event.target.value);\r\n  }\r\n\r\n  const handlePassportNumChange = (event) => {    \r\n    setPassportNumber(event.target.value); \r\n  }\r\n\r\n  const handlePassportExpDateChange = (event) => {\r\n    setPassportExpirationDate(event.target.value);\r\n  }\r\n\r\n  const handleTinNumChange = (event) => {\r\n    setTinNumber(event.target.value);\r\n  }\r\n\r\n  const postDataHandler = () => {    \r\n    setEmployeeInfo({\r\n      nationalityId: nationality,\r\n      religionId: religion,\r\n      ethnicityId: ethnicity,\r\n      maritalStatusId: maritalStatus,\r\n      homeNumber: parseInt(homeNumber, 10),\r\n      cellNumber: parseInt(cellNumber, 10),\r\n      workNumber: parseInt(workNumber, 10),\r\n      email: email,\r\n      title: '',\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      otherName: otherName,\r\n      regimentNumber: parseInt(regimentNumber, 10),\r\n      dateOfBirth: dateOfBirth,\r\n      sex: sex,\r\n      nationalIdNumber: parseInt(nationalIdNumber, 10),\r\n      passportNumber: passportNumber,\r\n      passportExpirationDate: passportExpirationDate,\r\n      tinNumber: parseInt(tinNumber, 10),\r\n    });\r\n    //console.log(employeeInfo);\r\n    axios.post('PostInfo/AddAnEmployee', employeeInfo)\r\n      .then(response => console.log(response))\r\n      .catch(error => console.log(error))\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1} >\r\n        <Grid item xs={6}>\r\n         <h1>Update Employee Profile</h1>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <h1>\r\n            <Button variant=\"outlined\" color=\"primary\">\r\n            <Link to={'/employee-history/'}>Update Career History</Link>\r\n            </Button>\r\n          </h1>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <div>\r\n            <Grid container spacing={3}>          \r\n              <Grid item xs={12}>\r\n                <UpdateEmployeePIForm \r\n                  firstName={firstName}\r\n                  lastName={lastName}\r\n                  otherName={otherName}\r\n                  otherNameTwo={otherNameTwo}\r\n                  maritalStatus={maritalStatus} \r\n                  religion={religion}\r\n                  ethnicity={ethnicity}\r\n                  sex={sex}\r\n                  dateOfBirth={dateOfBirth}\r\n                  nationality={nationality}\r\n                  handleFirstNameChange={handleFirstNameChange}\r\n                  handleLastNameChange={handleLastNameChange}\r\n                  handleOtherNameChange={handleOtherNameChange}\r\n                  handleOtherNameTwoChange={handleOtherNameTwoChange}\r\n                  handleMaritalStatusChange={handleMaritalStatusChange}\r\n                  handleReligionChange={handleReligionChange}\r\n                  handleEthnicityChange={handleEthnicityChange}\r\n                  handleSexChange={handleSexChange}\r\n                  handleDoBChange={handleDoBChange}\r\n                  handleNationalityChange={handleNationalityChange}>                    \r\n                </UpdateEmployeePIForm>\r\n              </Grid>\r\n\r\n              {/*<Grid item xs={12}>\r\n                <AddEmployeeAddressForm \r\n                  lot={lot}\r\n                  street={street}\r\n                  area={area}\r\n                  village={village}\r\n                  region={region}\r\n                  country={country}\r\n                  handleLotChange={handleLotChange}\r\n                  handleStreetChange={handleStreetChange}\r\n                  handleAreaChange={handleAreaChange}\r\n                  handleVillageChange={handleVillageChange}\r\n                  handleRegionChange={handleRegionChange}\r\n                  handleCountryChange={handleCountryChange}></AddEmployeeAddressForm>\r\n              </Grid>*/}\r\n\r\n              <Grid item xs={12}>\r\n                <UpdateEmployeeContactForm \r\n                  homeNumber={homeNumber}\r\n                  cellNumber={cellNumber}\r\n                  workNumber={workNumber}\r\n                  email={email}\r\n                  handleHomeNumChange={handleHomeNumChange}\r\n                  handleCellNumChange={handleCellNumChange}\r\n                  handleWorkNumChange={handleWorkNumChange}\r\n                  handleEmailChange={handleEmailChange}>\r\n                </UpdateEmployeeContactForm>\r\n              </Grid >\r\n\r\n              <Grid item xs={12}>\r\n                <UpdateEmployeeOfficialInfoForm \r\n                  regimentNumber={regimentNumber}\r\n                  nationalIdNumber={nationalIdNumber}\r\n                  passportNumber={passportNumber}\r\n                  passportExpirationDate={passportExpirationDate}\r\n                  tinNumber={tinNumber}\r\n                  handleRegNumChange={handleRegNumChange}\r\n                  handleNationalIdNumChange={handleNationalIdNumChange}\r\n                  handlePassportNumChange={handlePassportNumChange}\r\n                  handlePassportExpDateChange={handlePassportExpDateChange}\r\n                  handleTinNumChange={handleTinNumChange}>\r\n                </UpdateEmployeeOfficialInfoForm>\r\n              </Grid >\r\n\r\n              <Grid item xs={12}>\r\n                <Button type=\"submit\" onClick={postDataHandler} variant=\"outlined\" color=\"primary\"> Add Employee </Button>\r\n              </Grid >\r\n            </Grid>           \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Home.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\axios.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeContactForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeePIForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeOfficialInfoForm.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":3,"column":17,"nodeType":"135","messageId":"136","endLine":3,"endColumn":25},{"ruleId":"133","severity":1,"message":"137","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":20},{"ruleId":"133","severity":1,"message":"138","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":19},{"ruleId":"133","severity":1,"message":"139","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":13},{"ruleId":"133","severity":1,"message":"140","line":12,"column":7,"nodeType":"135","messageId":"136","endLine":12,"endColumn":20},{"ruleId":"133","severity":1,"message":"141","line":38,"column":10,"nodeType":"135","messageId":"136","endLine":38,"endColumn":19},{"ruleId":"133","severity":1,"message":"142","line":38,"column":21,"nodeType":"135","messageId":"136","endLine":38,"endColumn":33},{"ruleId":"133","severity":1,"message":"143","line":38,"column":10,"nodeType":"135","messageId":"136","endLine":38,"endColumn":20},{"ruleId":"133","severity":1,"message":"144","line":39,"column":10,"nodeType":"135","messageId":"136","endLine":39,"endColumn":25},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'useParams' is defined but never used.","'axios' is defined but never used.","'defaultValues' is assigned a value but never used.","'newCareer' is assigned a value but never used.","'setNewCareer' is assigned a value but never used.","'empInfoGet' is assigned a value but never used.","'employeeAddress' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]