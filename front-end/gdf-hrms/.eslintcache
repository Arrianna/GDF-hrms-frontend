[{"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\index.js":"1","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\App.js":"2","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Layout.js":"3","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryLayout.js":"4","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\searchpage.js":"5","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeInformation.js":"6","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeInformation.js":"7","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Home.js":"8","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\ViewCareerHistory.js":"9","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeAddressForm.js":"10","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileLayout.js":"11","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryForm.js":"12","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryTable.js":"13","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeContactForm.js":"14","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeOfficialInfoForm.js":"15","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeePIForm.js":"16","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByRegimentNumberForm.js":"17","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByOtherCriteriaForm.js":"18","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchResultsTable.js":"19","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\axios.js":"20","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeContactForm.js":"21","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeOfficialInfoForm.js":"22","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeePIForm.js":"23","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\AddressForm.js":"24","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\ContactForm.js":"25","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\OfficialInformationForm.js":"26","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\PersonalInformationForm.js":"27","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\Controls\\FormComponent.js":"28","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\Controls\\DialogComponent.js":"29","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Notification.js":"30"},{"size":951,"mtime":1620241077558,"results":"31","hashOfConfig":"32"},{"size":1877,"mtime":1620241077523,"results":"33","hashOfConfig":"32"},{"size":6064,"mtime":1619814286695,"results":"34","hashOfConfig":"32"},{"size":1938,"mtime":1619814286686,"results":"35","hashOfConfig":"32"},{"size":3277,"mtime":1620241077557,"results":"36","hashOfConfig":"32"},{"size":5178,"mtime":1620241077526,"results":"37","hashOfConfig":"32"},{"size":12367,"mtime":1619814286705,"results":"38","hashOfConfig":"32"},{"size":1171,"mtime":1619814286694,"results":"39","hashOfConfig":"32"},{"size":10589,"mtime":1620310826544,"results":"40","hashOfConfig":"32"},{"size":5440,"mtime":1619814286678,"results":"41","hashOfConfig":"32"},{"size":15787,"mtime":1620241077529,"results":"42","hashOfConfig":"32"},{"size":2830,"mtime":1619976416551,"results":"43","hashOfConfig":"32"},{"size":11729,"mtime":1620071714675,"results":"44","hashOfConfig":"32"},{"size":4740,"mtime":1619814286679,"results":"45","hashOfConfig":"32"},{"size":5980,"mtime":1620241077525,"results":"46","hashOfConfig":"32"},{"size":9595,"mtime":1619814286680,"results":"47","hashOfConfig":"32"},{"size":2472,"mtime":1620241077545,"results":"48","hashOfConfig":"32"},{"size":4496,"mtime":1620241077533,"results":"49","hashOfConfig":"32"},{"size":3937,"mtime":1620241077552,"results":"50","hashOfConfig":"32"},{"size":155,"mtime":1619814286704,"results":"51","hashOfConfig":"32"},{"size":4597,"mtime":1619814286701,"results":"52","hashOfConfig":"32"},{"size":6044,"mtime":1619814286702,"results":"53","hashOfConfig":"32"},{"size":7328,"mtime":1619814286703,"results":"54","hashOfConfig":"32"},{"size":3657,"mtime":1620241077528,"results":"55","hashOfConfig":"32"},{"size":1933,"mtime":1619814286689,"results":"56","hashOfConfig":"32"},{"size":2197,"mtime":1619814286691,"results":"57","hashOfConfig":"32"},{"size":3230,"mtime":1619814286692,"results":"58","hashOfConfig":"32"},{"size":3575,"mtime":1620082677578,"results":"59","hashOfConfig":"32"},{"size":1069,"mtime":1620066192837,"results":"60","hashOfConfig":"32"},{"size":1000,"mtime":1620241077531,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bbjimq",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\index.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\App.js",[],["127","128"],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Layout.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryLayout.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\searchpage.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeInformation.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeInformation.js",["129","130","131","132"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Axios from 'axios';\r\nimport axios from './UpdateEmployeeComponents/axios';\r\n\r\n\r\nimport UpdateEmployeePIForm from './UpdateEmployeeComponents/UpdateEmployeePIForm';\r\n//import UpdateEmployeeAddressForm from './UpdateEmployeeComponents/UpdateEmployeeAddressForm';\r\nimport UpdateEmployeeContactForm from './UpdateEmployeeComponents/UpdateEmployeeContactForm';\r\nimport UpdateEmployeeOfficialInfoForm from './UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  \r\n   careerButton: {\r\n     marginLeft: '20px,'\r\n   }\r\n\r\n}));\r\n\r\nexport default function UpdateEmployeeInformation() {\r\n  const classes = useStyles();  \r\n  const [empInfoGet, setEmpInfoGet] = useState({});\r\n  const [error, setError] = useState();\r\n // const [employeeAddress, setEmployeeAddress] = useState({});\r\n\r\n  const params = useParams();\r\n  const eId = params.empId;\r\n\r\n  // AddEmployeePIForm INFORMATION\r\n  const [firstName, setFirstName] = useState(null);\r\n  const [lastName, setLastName] = useState(null);\r\n  const [otherName, setOtherName] = useState(null);\r\n  const [otherNameTwo, setOtherNameTwo] = useState(null);\r\n  const [maritalStatus, setMaritalStatus] = useState(\"\");\r\n  const [religion, setReligion] = useState(\"\");\r\n  const [ethnicity, setEthnicity] = useState(\"\");\r\n  const [sex, setSex] = useState(\"\");\r\n  const [dateOfBirth, setDateOfBirth] = useState(null);\r\n  const [nationality, setNationality] = useState(\"\");\r\n\r\n  // AddEmployeeContactForm Information\r\n  const [homeNumber, setHomeNumber] = useState(null);\r\n  const [cellNumber, setCellNumber] = useState(null);\r\n  const [workNumber, setWorkNumber] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n\r\n    // AddEmployeeOfficialInfoForm Information\r\n  const [regimentNumber, setRegimentNumber] = useState(null);\r\n  const [nationalIdNumber, setNationalIdNumber] = useState(null);\r\n  const [passportNumber, setPassportNumber] = useState(null);\r\n  const [passportExpirationDate, setPassportExpirationDate] = useState(null);\r\n  const [tinNumber, setTinNumber] = useState(null);\r\n\r\n\r\n  useEffect(() => {   \r\n   const getEmpInfo = async () => {\r\n        if(eId){\r\n          const info = await Axios.get(\"EmployeeInfo/Id/\" + eId);\r\n          setEmpInfoGet(info.data);\r\n        }\r\n   /* const getEmpAddress = async () => {\r\n      if(regNumber){\r\n        const addressInfo = await Axios.get(\"EmployeeInfo/GetEmployeeAddressByTheirId?employeeId=1\");\r\n        setEmployeeAddress(addressInfo.data);\r\n      } */\r\n    };\r\n    getEmpInfo();\r\n\r\n    setFirstName(empInfoGet.firstName);\r\n    setLastName(empInfoGet.lastName);\r\n    setOtherName(empInfoGet.otherName);\r\n    setOtherNameTwo(empInfoGet.otherNameTwo);\r\n    setMaritalStatus(empInfoGet.maritalStatus);\r\n    setEthnicity(empInfoGet.ethnicity);\r\n    setReligion(empInfoGet.religion);\r\n    setSex(empInfoGet.sex);\r\n    setDateOfBirth(empInfoGet.dateOfBirth);\r\n    setNationality(empInfoGet.nationality);\r\n    setHomeNumber(empInfoGet.homeNumber);\r\n    setCellNumber(empInfoGet.cellNumber);\r\n    setWorkNumber(empInfoGet.workNumber);\r\n    setEmail(empInfoGet.email);\r\n    setRegimentNumber(empInfoGet.regimentNumber);\r\n    setNationalIdNumber(empInfoGet.nationalIdNumber);\r\n    setPassportNumber(empInfoGet.passportNumber);\r\n    setPassportExpirationDate(empInfoGet.passportExpirationDate);\r\n    setTinNumber(empInfoGet.tinNumber);\r\n\r\n    //getEmpAddress();\r\n  }, [eId, empInfoGet.firstName, empInfoGet.lastName, empInfoGet.otherName, empInfoGet.otherNameTwo, \r\n      empInfoGet.maritalStatus, empInfoGet.ethnicity, empInfoGet.religion, empInfoGet.sex, empInfoGet.dateOfBirth,\r\n      empInfoGet.nationality, empInfoGet.homeNumber, empInfoGet.cellNumber, empInfoGet.workNumber, empInfoGet.email,\r\n      empInfoGet.regimentNumber, empInfoGet.nationalIdNumber, empInfoGet.passportNumber, empInfoGet.passportExpirationDate,\r\n      empInfoGet.tinNumber]);\r\n\r\n  //console.log(empInfoGet.firstName);\r\n  //console.log(empInfoGet);\r\n  //console.log(empInfoGet.firstName);\r\n  \r\n  // AddEmployeePIForm INFORMATION\r\n\r\n  const handleFirstNameChange = (event) => {\r\n    setFirstName(event.target.value);\r\n  };\r\n\r\n  const handleLastNameChange = (event) => {\r\n    setLastName(event.target.value);\r\n  };\r\n\r\n  const handleOtherNameChange = (event) => {\r\n    setOtherName(event.target.value);\r\n  };\r\n\r\n  const handleOtherNameTwoChange = (event) => {\r\n    setOtherNameTwo(event.target.value);\r\n  };\r\n\r\n  const handleMaritalStatusChange = (event) => {\r\n    setMaritalStatus(event.target.value);\r\n  };\r\n\r\n  const handleReligionChange = (event) => {\r\n    setReligion(event.target.value);\r\n  };\r\n\r\n  const handleEthnicityChange = (event) => {\r\n    setEthnicity(event.target.value);\r\n  };\r\n\r\n  // DON'T LAUGH TOO MUCH, YOU MIGHT POP A VEIN\r\n  const handleSexChange = (event) => {\r\n    setSex(event.target.value);\r\n  }\r\n\r\n  const handleDoBChange = (event) => {\r\n    setDateOfBirth(event.target.value);\r\n  }\r\n\r\n  const handleNationalityChange = (event) => {\r\n    setNationality(event.target.value);\r\n  }\r\n\r\n  // AddEmployeeContactForm Information\r\n  const handleHomeNumChange = (event) => {      \r\n    setHomeNumber(event.target.value);\r\n  }\r\n\r\n  const handleCellNumChange = (event) => {    \r\n    setCellNumber(event.target.value);\r\n  }\r\n\r\n  const handleWorkNumChange = (event) => {       \r\n    setWorkNumber(event.target.value); \r\n  }\r\n\r\n  const handleEmailChange = (event) => {    \r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  // AddEmployeeOfficialInfoForm Information\r\n  const handleRegNumChange = (event) => {    \r\n    setRegimentNumber(event.target.value);\r\n  }\r\n\r\n  const handleNationalIdNumChange = (event) => {    \r\n    setNationalIdNumber(event.target.value);\r\n  }\r\n\r\n  const handlePassportNumChange = (event) => {    \r\n    setPassportNumber(event.target.value); \r\n  }\r\n\r\n  const handlePassportExpDateChange = (event) => {\r\n    setPassportExpirationDate(event.target.value);\r\n  }\r\n\r\n  const handleTinNumChange = (event) => {\r\n    setTinNumber(event.target.value);\r\n  }\r\n  console.log(maritalStatus);\r\n  console.log(religion);\r\n  console.log(nationality);\r\n  console.log(ethnicity);\r\n  console.log(firstName);\r\n\r\n\r\n  const postDataHandler = () => {    \r\n  let employeeInfo = {\r\n      id: parseInt(eId),\r\n      nationalityId: nationality,\r\n      religionId: religion,\r\n      ethnicityId: ethnicity,\r\n      maritalStatusId: maritalStatus,\r\n      homeNumber: parseInt(homeNumber, 10),\r\n      cellNumber: parseInt(cellNumber, 10),\r\n      workNumber: parseInt(workNumber, 10),\r\n      email: email,\r\n      title: '',\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      otherName: otherName,\r\n      regimentNumber: parseInt(regimentNumber, 10),\r\n      dateOfBirth: dateOfBirth,\r\n      sex: sex,\r\n      nationalIdNumber: parseInt(nationalIdNumber, 10),\r\n      passportNumber: passportNumber,\r\n      passportExpirationDate: passportExpirationDate,\r\n      tinNumber: parseInt(tinNumber, 10),\r\n    };\r\n    //console.log(employeeInfo);\r\n    axios.patch('/employeePI/' + eId, employeeInfo)\r\n      .then(response => console.log(response))\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  const confirmationHandler = (error) =>{\r\n   <div>\r\n     {console.log(error)}\r\n    <Dialog\r\n    open = \"true\"\r\n    aria-labelledby=\"alert-dialog-title\"\r\n    aria-describedby=\"alert-dialog-description\">\r\n    <DialogContent>\r\n      <DialogContentText id=\"alert-dialog-description\">{error}</DialogContentText>\r\n    </DialogContent>\r\n  </Dialog>\r\n  </div>\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1} >\r\n        <Grid item xs={6}>\r\n         <h1>Update Employee Profile</h1>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <h1>\r\n            <Button variant=\"outlined\" color=\"primary\">\r\n            <Link to={'/employee-history/'}>Update Career History</Link>\r\n            </Button>\r\n          </h1>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <div>\r\n            <Grid container spacing={3}>          \r\n              <Grid item xs={12}>\r\n\r\n                <UpdateEmployeePIForm \r\n                  firstName={firstName}\r\n                  lastName={lastName}\r\n                  otherName={otherName}\r\n                  otherNameTwo={otherNameTwo}\r\n                  maritalStatus={maritalStatus} \r\n                  religion={religion}\r\n                  ethnicity={ethnicity}\r\n                  sex={sex}\r\n                  dateOfBirth={dateOfBirth}\r\n                  nationality={nationality}\r\n                  handleFirstNameChange={handleFirstNameChange}\r\n                  handleLastNameChange={handleLastNameChange}\r\n                  handleOtherNameChange={handleOtherNameChange}\r\n                  handleOtherNameTwoChange={handleOtherNameTwoChange}\r\n                  handleMaritalStatusChange={handleMaritalStatusChange}\r\n                  handleReligionChange={handleReligionChange}\r\n                  handleEthnicityChange={handleEthnicityChange}\r\n                  handleSexChange={handleSexChange}\r\n                  handleDoBChange={handleDoBChange}\r\n                  handleNationalityChange={handleNationalityChange}>                    \r\n                </UpdateEmployeePIForm>\r\n              </Grid>\r\n\r\n              {/*<Grid item xs={12}>\r\n                <AddEmployeeAddressForm \r\n                  lot={lot}\r\n                  street={street}\r\n                  area={area}\r\n                  village={village}\r\n                  region={region}\r\n                  country={country}\r\n                  handleLotChange={handleLotChange}\r\n                  handleStreetChange={handleStreetChange}\r\n                  handleAreaChange={handleAreaChange}\r\n                  handleVillageChange={handleVillageChange}\r\n                  handleRegionChange={handleRegionChange}\r\n                  handleCountryChange={handleCountryChange}></AddEmployeeAddressForm>\r\n              </Grid>*/}\r\n\r\n              <Grid item xs={12}>\r\n                <UpdateEmployeeContactForm \r\n                  homeNumber={homeNumber}\r\n                  cellNumber={cellNumber}\r\n                  workNumber={workNumber}\r\n                  email={email}\r\n                  handleHomeNumChange={handleHomeNumChange}\r\n                  handleCellNumChange={handleCellNumChange}\r\n                  handleWorkNumChange={handleWorkNumChange}\r\n                  handleEmailChange={handleEmailChange}>\r\n                </UpdateEmployeeContactForm>\r\n              </Grid >\r\n\r\n              <Grid item xs={12}>\r\n                <UpdateEmployeeOfficialInfoForm \r\n                  regimentNumber={regimentNumber}\r\n                  nationalIdNumber={nationalIdNumber}\r\n                  passportNumber={passportNumber}\r\n                  passportExpirationDate={passportExpirationDate}\r\n                  tinNumber={tinNumber}\r\n                  handleRegNumChange={handleRegNumChange}\r\n                  handleNationalIdNumChange={handleNationalIdNumChange}\r\n                  handlePassportNumChange={handlePassportNumChange}\r\n                  handlePassportExpDateChange={handlePassportExpDateChange}\r\n                  handleTinNumChange={handleTinNumChange}>\r\n                </UpdateEmployeeOfficialInfoForm>\r\n              </Grid >\r\n\r\n              <Grid item xs={12}>\r\n                <Button type=\"submit\" onClick={postDataHandler} variant=\"outlined\" color=\"primary\"> Update Employee </Button>\r\n                <p> {error} </p>\r\n              </Grid >\r\n            </Grid>           \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Home.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\ViewCareerHistory.js",["133","134","135","136","137","138","139","140","141","142","143","144"],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeAddressForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileLayout.js",["145"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport { Save, Cancel } from '@material-ui/icons';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport { MenuItem, InputLabel, FormControl, Select } from '@material-ui/core';\r\nimport Axios from 'axios';\r\n\r\nimport PersonalInformationForm from './EmployeeProfileComponents/PersonalInformationForm';\r\nimport AddressForm from './EmployeeProfileComponents/AddressForm';\r\nimport ContactForm from './EmployeeProfileComponents/ContactForm';\r\nimport OfficialInformationForm from './EmployeeProfileComponents/OfficialInformationForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  \r\n   careerButton: {\r\n     marginLeft: '20px,'\r\n   },\r\n\r\n   modal: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  },\r\n\r\n  icon:{\r\n    cursor: 'pointer'\r\n  }, \r\n\r\n  inputMaterial:{\r\n    width: '100%'\r\n  }\r\n\r\n}));\r\n\r\nexport default function EmployeeProfileLayout(props) {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const [employeeInfo, setEmployeeInfo] = useState({});\r\n  const [employeeAddress, setEmployeeAddress] = useState();  \r\n  const [open, setOpen] = useState(false);\r\n  const [lot, setLot] = useState();\r\n  const [street, setStreet] = useState();\r\n  const [area, setArea] = useState();\r\n  const [village, setVillage] = useState();\r\n  const [newRegion, setNewRegion] = useState(\"\");\r\n  const [newCountry, setNewCountry] = useState(\"\");\r\n  const [regions, setRegions] = useState();\r\n  const [countries, setCountries] = useState();\r\n\r\n  const [modalDelete, setModalDelete] = useState(false);\r\n  const [modalEdit, setModalEdit] = useState(false);\r\n\r\n  const [rowSelected, setRowSelected] = useState({\r\n    id: null,\r\n    lot:'',\r\n    street: '',\r\n    area: '',\r\n    village: '',\r\n    regionId: null,\r\n    countryId: null,\r\n    employeeId: null,\r\n  })\r\n\r\n  const handleChange = e => {\r\n    const {name, value} = e.target;\r\n    setRowSelected(prevState=>({\r\n      ...prevState,\r\n      [name]: value\r\n    }))\r\n  }\r\n\r\n  const deleteRequest = async() => {\r\n    await Axios.delete('DeleteInfo/DeleteAddress/' + rowSelected.id)\r\n    .then(response=>{\r\n      setEmployeeAddress(employeeAddress.filter(row => row.id !== rowSelected.id));\r\n      openCloseModalDelete();\r\n    })\r\n  }\r\n\r\n  const putRequest = async() => {\r\n    let editedAddress = {\r\n      id: rowSelected.id,\r\n      lot: rowSelected.lot,\r\n      street: rowSelected.street,\r\n      area: rowSelected.area,\r\n      village: rowSelected.village,\r\n      regionId: rowSelected.regionId,\r\n      countryId: rowSelected.countryId,\r\n      employeeId: rowSelected.eId,\r\n    }\r\n    await Axios.patch('UpdateInfo/update/employeePI/address/' + editedAddress.id, editedAddress)\r\n    .then(response=>{\r\n      let newData = employeeAddress;\r\n      newData.map(row => {        \r\n        if(rowSelected.id === row.id){\r\n          row.id = editedAddress.id;\r\n          row.lot = editedAddress.lot;\r\n          row.street = editedAddress.street;\r\n          row.area = editedAddress.area;\r\n          row.village = editedAddress.village;\r\n          row.regionId = editedAddress.regionId;\r\n          row.countryId = editedAddress.countryId;\r\n          row.employeeId = editedAddress.employeeId;\r\n        }\r\n      })\r\n      setEmployeeAddress(newData);\r\n      openCloseModalEdit();\r\n    })\r\n  }\r\n \r\n  const openCloseModalDelete = () => {\r\n    setModalDelete(!modalDelete);\r\n  }\r\n\r\n  const openCloseModalEdit = () => {\r\n    setModalEdit(!modalEdit);\r\n  }\r\n\r\n  const selectRow = (row, option) => {\r\n    setRowSelected(row);\r\n    (option === 'Edit') ? openCloseModalEdit() : openCloseModalDelete()\r\n  }\r\n  \r\n  const bodyDelete = (\r\n    <div className={classes.modal}>\r\n      <p>Are you sure you want to delete this address?</p>\r\n      <div align=\"right\">\r\n        <Button color=\"secondary\" onClick={() => deleteRequest()}>Yes</Button>\r\n        <Button onClick={() => openCloseModalDelete()}>No</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const handleLotChange = (event) => {\r\n    setLot(event.target.value);\r\n  }\r\n\r\n  const handleStreetChange = (event) => {\r\n    setStreet(event.target.value);\r\n  }\r\n\r\n  const handleAreaChange = (event) => {\r\n    setArea(event.target.value);\r\n  }\r\n\r\n  const handleVillageChange = (event) => {\r\n    setVillage(event.target.value);\r\n  }\r\n\r\n  const handleRegionChange = (event) => {\r\n    setNewRegion(event.target.value);\r\n  }\r\n\r\n  const handleCountryChange = (event) => {\r\n    setNewCountry(event.target.value);\r\n  }\r\n\r\n  const handleClickOpen = () => {    \r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const handleSave = () => {\r\n    let Address = {\r\n      lot: lot,\r\n      street: street,\r\n      area: area,\r\n      village: village,\r\n      reg: newRegion,\r\n      ctry: newCountry,\r\n      eId: empId,\r\n    }\r\n    if(Address){\r\n      Axios.post('PostInfo/AddAnEmployeeAddress', Address)\r\n      .then(response => console.log(response))\r\n      /* .then(response => {\r\n        setEmployeeAddress(employeeAddress.concat(response.data))\r\n      }) */\r\n      .catch(error => console.log(error))\r\n    }\r\n    setEmployeeAddress([Address, ...employeeAddress]);\r\n    setOpen(false);    \r\n  };\r\n  \r\n  let regNumber = params.regNum;\r\n  let empId;\r\n\r\n  useEffect(() => {\r\n    const getEmpInfo = async () => {\r\n      if(regNumber){\r\n        const info = await Axios.get(\"GetInfo/RegimentNumber/\" + regNumber);    \r\n        setEmployeeInfo(info.data);        \r\n      }\r\n    };\r\n\r\n    const getEmpAddress = async () => {\r\n      if(employeeInfo.id){\r\n        const addressInfo = await Axios.get(\"EmployeeInfo/GetEmployeeAddressByTheirId?employeeId=\" + employeeInfo.id);\r\n        setEmployeeAddress(addressInfo.data);\r\n      }\r\n    };\r\n\r\n    const getRegions = async () => {\r\n      const info = await Axios.get(\"GetInfo/GetAllRegions\");\r\n      if(info.data != null){\r\n        if(info.data.length > 0){\r\n          setRegions(info.data);\r\n        }\r\n      }\r\n    };\r\n\r\n    const getCountries = async () => {\r\n      const info = await Axios.get(\"GetInfo/GetAllCountries\");\r\n      if(info.data != null){\r\n        if(info.data.length > 0){\r\n          setCountries(info.data);\r\n        }\r\n      }\r\n    };\r\n\r\n    getEmpInfo();\r\n    getEmpAddress();\r\n    getRegions();\r\n    getCountries();\r\n  }, [regNumber, employeeInfo.id]);\r\n\r\n  empId = employeeInfo.id;\r\n\r\n  const bodyEdit = () => {\r\n    if(regions != null && countries != null){\r\n      if(regions.length > 0 && countries.length > 0){\r\n        return(\r\n          <div className={classes.modal}>\r\n            <h3>Edit Employee Address</h3>\r\n            <TextField name=\"lot\" className={classes.inputMaterial} label=\"Lot\" onChange={handleChange} value={rowSelected && rowSelected.lot}/>\r\n            <br />\r\n            <TextField name=\"street\" className={classes.inputMaterial} label=\"Street\" onChange={handleChange} value={rowSelected && rowSelected.street}/>\r\n            <br />\r\n            <TextField name=\"area\" className={classes.inputMaterial} label=\"Area\" onChange={handleChange} value={rowSelected && rowSelected.area}/>\r\n            <br />\r\n            <TextField name=\"village\" className={classes.inputMaterial} label=\"Village\" onChange={handleChange} value={rowSelected && rowSelected.village}/>\r\n            <br />\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"region-label\">Region</InputLabel>\r\n              <Select\r\n                labelId=\"region-label\"\r\n                id=\"region\"\r\n                name=\"regionId\"\r\n                value={rowSelected && rowSelected.regionId}\r\n                onChange={handleChange}\r\n                label=\"Region\"\r\n              >\r\n                <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                {regions.map((region) =>\r\n                  <MenuItem key={region.id} value={region.id}>{region.name}</MenuItem>\r\n                )}\r\n              </Select>\r\n            </FormControl>\r\n            <br />\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"region-label\">Country</InputLabel>\r\n              <Select\r\n                labelId=\"country-label\"\r\n                id=\"country\"\r\n                name=\"countryId\"\r\n                value={rowSelected && rowSelected.countryId}\r\n                onChange={handleChange}\r\n                label=\"Country\"\r\n              >\r\n                <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                {countries.map((country) =>\r\n                  <MenuItem key={country.id} value={country.id}>{country.name}</MenuItem>\r\n                )}                          \r\n              </Select>\r\n            </FormControl>\r\n            <br /><br />\r\n            <div align=\"right\">\r\n              <Button color=\"primary\" onClick={()=>putRequest()}>Save</Button>\r\n              <Button onClick={() => openCloseModalEdit()}>Cancel</Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const showInfo = () => {\r\n    if(regions != null && countries != null){\r\n      if(regions.length > 0 && countries.length > 0){\r\n        return (\r\n          <div className={classes.root}>\r\n            <Grid container spacing={1} >\r\n              <Grid item xs={6}>\r\n              <h1>Employee Profile Page</h1>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <h1>\r\n                  <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Add Employee Address</DialogTitle>\r\n                    <DialogContent>\r\n                      <TextField margin=\"dense\" id=\"lot\" label=\"Lot\" type=\"text\" fullWidth value={lot} onChange={handleLotChange}/>\r\n                      <TextField margin=\"dense\" id=\"street\" label=\"Street\" type=\"text\" fullWidth value={street} onChange={handleStreetChange}/>\r\n                      <TextField margin=\"dense\" id=\"area\" label=\"Area\" type=\"text\" fullWidth value={area} onChange={handleAreaChange}/>\r\n                      <TextField margin=\"dense\" id=\"village\" label=\"Village\" type=\"text\" fullWidth value={village} onChange={handleVillageChange}/>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink=\"true\" id=\"region-label\">Region</InputLabel>\r\n                        <Select\r\n                          labelId=\"region-label\"\r\n                          id=\"region\"\r\n                          value={newRegion}\r\n                          onChange={handleRegionChange}\r\n                          label=\"Region\"\r\n                        >\r\n                          <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                          {regions.map((region) =>\r\n                            <MenuItem key={region.id} value={region.id}>{region.name}</MenuItem>\r\n                          )}\r\n                        </Select>\r\n                      </FormControl>\r\n                      <br />\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink=\"true\" id=\"region-label\">Country</InputLabel>\r\n                        <Select\r\n                          labelId=\"country-label\"\r\n                          id=\"country\"\r\n                          value={newCountry}\r\n                          onChange={handleCountryChange}\r\n                          label=\"Country\"\r\n                        >\r\n                          <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                          {countries.map((country) =>\r\n                            <MenuItem key={country.id} value={country.id}>{country.name}</MenuItem>\r\n                          )}                          \r\n                        </Select>\r\n                      </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleCancel} variant=\"contained\" color=\"primary\" startIcon={<Cancel />}>Cancel</Button>\r\n                      <Button onClick={handleSave} variant=\"contained\" color=\"primary\" startIcon={<Save />}>Save Address</Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    <Link to={'/update-employee/' + empId}>Update Employee Record</Link>\r\n                  </Button>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    <Link to={'/employee-history-view/' + empId}>View Career History</Link>\r\n                  </Button>\r\n                </h1>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <div>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                      <PersonalInformationForm employeeInfo={employeeInfo}></PersonalInformationForm>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <AddressForm \r\n                        employeeInfo={employeeAddress}\r\n                        selectRow={selectRow}>\r\n                      </AddressForm>\r\n                    </Grid>\r\n                    <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={handleClickOpen}>\r\n                      Add Address\r\n                    </Button>\r\n                    <Grid item xs={12}>\r\n                      <ContactForm employeeInfo={employeeInfo}></ContactForm>\r\n                    </Grid >\r\n                    <Grid item xs={12}>\r\n                      <OfficialInformationForm employeeInfo={employeeInfo}></OfficialInformationForm>\r\n                    </Grid >\r\n                  </Grid>           \r\n                </div> \r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return(\r\n    <div>\r\n      {showInfo()}\r\n      <Modal open={modalDelete} onClose={openCloseModalDelete}>\r\n        {bodyDelete}\r\n      </Modal>\r\n\r\n      <Modal open={modalEdit} onClose={openCloseModalEdit}>\r\n        {bodyEdit()}        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryTable.js",["146","147","148","149","150","151","152","153"],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeContactForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeOfficialInfoForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeePIForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByRegimentNumberForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByOtherCriteriaForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchResultsTable.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\axios.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeContactForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeOfficialInfoForm.js",["154"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  paragraphColor: {\r\n    color: 'red'\r\n  }  \r\n}));\r\n\r\nexport default function UpdateEmployeeOfficialInfoForm(props) {\r\n  const classes = useStyles();\r\n  const { register, errors } = useForm();\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n      <h4>Official Information</h4>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <React.Fragment>\r\n            <div>\r\n              <Grid item xs={2}>\r\n                <TextField required id=\"regimentalNumber\" label=\"RegimentalNumber\" name=\"regimentalNumber\" InputLabelProps={{ shrink: true,}} value={props.regimentNumber} onChange={props.handleRegNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\r\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'required' && (<p className={classes.paragraphColor}>Regiment Number is required</p>)}\r\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\r\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\r\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid regiment number</p>)}\r\n              </Grid>\r\n            </div>\r\n            <div>\r\n              <Grid item xs={2}>\r\n                <TextField required id=\"identificationNumber\" name=\"identificationNumber\" label=\"IdentificationNumber\" InputLabelProps={{ shrink: true,}} value={props.nationalIdNumber} onChange={props.handleNationalIdNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 9, maxLength: 9, type: \"number\", pattern: /^[0-9]+$/i})}/>\r\n                {errors.identificationNumber && errors.identificationNumber.type === 'required' && (<p className={classes.paragraphColor}>National Identification Number is required</p>)}\r\n                {errors.identificationNumber && errors.identificationNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 9 numbers required</p>)}\r\n                {errors.identificationNumber && errors.identificationNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 9 numbers required</p>)}\r\n                {errors.identificationNumber && errors.identificationNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid ID Number</p>)}\r\n              </Grid>\r\n            </div>\r\n            <div>\r\n              <Grid item xs={2}>\r\n                <TextField required id=\"passportNumber\" name=\"passportNumber\" label=\"PassportNumber\" InputLabelProps={{ shrink: true,}} value={props.passportNumber} onChange={props.handlePassportNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 8, maxLength: 8, type: \"text\"})}/>\r\n                {errors.passportNumber && errors.passportNumber.type === 'required' && (<p className={classes.paragraphColor}>Passport Number is required</p>)}\r\n                {errors.passportNumber && errors.passportNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 8 characters required</p>)}\r\n                {errors.passportNumber && errors.passportNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 8 characters required</p>)}\r\n                {errors.passportNumber && errors.passportNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Passport Number</p>)}\r\n              </Grid >\r\n            </div>\r\n            <div>\r\n              <Grid item xs={2}>\r\n                <TextField required id=\"passportExpirationDate\" name=\"passportExpirationDate\" label=\"Passport Expiration Date\" InputLabelProps={{ shrink: true,}} value={props.passportExpirationDate} onChange={props.handlePassportExpDateChange} variant=\"outlined\" size=\"small\" InputLabelProps={{ shrink: true,}} type=\"date\" inputRef={register({ required: true})}/>\r\n                {errors.passportExpirationDate && errors.passportExpirationDate.type === 'required' && (<p className={classes.paragraphColor}>Passport Expiration Date is required</p>)}\r\n              </Grid >\r\n            </div>    \r\n            <div>\r\n              <Grid item xs={2}>\r\n                <TextField required id=\"tinNumber\" name=\"tinNumber\" label=\"TIN Number\" InputLabelProps={{ shrink: true,}} value={props.tinNumber} onChange={props.handleTinNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 9, maxLength: 9, type: \"number\", pattern: /^[0-9]+$/i })}/>\r\n                {errors.tinNumber && errors.tinNumber.type === 'required' && (<p className={classes.paragraphColor}>Tin Number is required</p>)}\r\n                {errors.tinNumber && errors.tinNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 9 numbers required</p>)}\r\n                {errors.tinNumber && errors.tinNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 9 numbers required</p>)}\r\n                {errors.tinNumber && errors.tinNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Tin Number</p>)}\r\n              </Grid>\r\n            </div>        \r\n          </React.Fragment>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeePIForm.js",["155"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function UpdateEmployeePIForm(props) {  \r\n  const classes = useStyles();  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <h4>Personal Information</h4>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <React.Fragment>\r\n            <div>\r\n              <Grid item xs={2}>\r\n                <TextField required name=\"FirstName\" label=\"First Name\" InputLabelProps={{ shrink: true,}} value={props.firstName} onChange={props.handleFirstNameChange} variant=\"outlined\" size=\"small\" />                \r\n                <TextField name=\"otherNameTwo\" label=\"Middle Name\" InputLabelProps={{ shrink: true,}} value={props.otherName} onChange={props.handleOtherNameChange} variant=\"outlined\" size=\"small\"  />\r\n              </Grid>\r\n            </div>\r\n            <div>\r\n              <Grid item xs={2}>\r\n                <TextField required id=\"LastName\" name=\"lastName\" label=\"Last Name\" InputLabelProps={{ shrink: true,}} value={props.lastName} onChange={props.handleLastNameChange} variant=\"outlined\" size=\"small\" />\r\n                <TextField id=\"MiddleNameTwo\" label=\"Middle Name\" InputLabelProps={{ shrink: true,}} value={props.otherNameTwo} onChange={props.handleOtherNameTwoChange} variant=\"outlined\" size=\"small\" />\r\n              </Grid >\r\n            </div> \r\n            <div>\r\n              <Grid item xs={2}>\r\n                <Grid item xs={2}>\r\n                  <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                    <InputLabel id=\"sex-label\">Sex</InputLabel>\r\n                    <Select\r\n                      labelId=\"sex-label\"\r\n                      id=\"sex\"\r\n                      value={props.sex}\r\n                      onChange={props.handleSexChange}\r\n                      label=\"Sex\"                  \r\n                    >\r\n                      <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                      <MenuItem value={\"Male\"}>Male</MenuItem>\r\n                      <MenuItem value={\"Female\"}>Female</MenuItem>\r\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <TextField id=\"dateOfBirth\" label=\"Date of Birth\" InputLabelProps={{ shrink: true,}} value={props.dateOfBirth} onChange={props.handleDoBChange} variant=\"outlined\" InputLabelProps={{ shrink: true,}} size=\"small\" type=\"date\" />\r\n                </Grid>\r\n              </Grid >\r\n            </div>\r\n            <div>\r\n              <Grid item xs={2}>\r\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                  <InputLabel id=\"ethnicity-label\">Ethnicity</InputLabel>\r\n                  <Select\r\n                    labelId=\"ethnicity-label\"\r\n                    id=\"ethnicity\"\r\n                    value={props.ethnicity}\r\n                    onChange={props.handleEthnicityChange}\r\n                    label=\"Ethnicity\"\r\n                  >\r\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                    <MenuItem value={1}>African</MenuItem>\r\n                    <MenuItem value={2}>Indian</MenuItem>\r\n                    <MenuItem value={3}>Amerindian</MenuItem>\r\n                    <MenuItem value={4}>Chinese</MenuItem>\r\n                    <MenuItem value={5}>Portuguese</MenuItem>\r\n                    <MenuItem value={6}>Mixed</MenuItem>\r\n                  </Select>\r\n                </FormControl>         \r\n              </Grid >            \r\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                  <InputLabel id=\"religion-label\">Religion</InputLabel>\r\n                  <Select\r\n                    labelId=\"religion-label\"\r\n                    id=\"religion\"\r\n                    value={props.religion}\r\n                    onChange={props.handleReligionChange}\r\n                    label=\"Religion\"\r\n                  >\r\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                    <MenuItem value={1}>Christian</MenuItem>\r\n                    <MenuItem value={2}>Muslim</MenuItem>\r\n                    <MenuItem value={3}>Hindu</MenuItem>\r\n                    <MenuItem value={4}>Other</MenuItem>                \r\n                  </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div>\r\n              <Grid item xs={2}>\r\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                  <InputLabel id=\"marital-status-label\">Marital Status</InputLabel>\r\n                  <Select\r\n                    labelId=\"marital-status-label\"\r\n                    id=\"marital-status\"\r\n                    value={props.maritalStatus}\r\n                    onChange={props.handleMaritalStatusChange}\r\n                    label=\"Marital Status\"\r\n                  >\r\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                    <MenuItem value={1}>Single</MenuItem>\r\n                    <MenuItem value={2}>Married</MenuItem>\r\n                    <MenuItem value={3}>Divorced</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                {/*<TextField id=\"Nationality\" label=\"Nationality\" value={props.nationality} onChange={props.handleNationalityChange} variant=\"outlined\" size=\"small\" />*/}\r\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\r\n                  <InputLabel id=\"nationality-label\">Nationality</InputLabel>\r\n                  <Select\r\n                    labelId=\"nationality-label\"\r\n                    id=\"Nationality\"\r\n                    InputLabelProps={{ shrink: true,}}\r\n                    value={props.nationality}\r\n                    onChange={props.handleNationalityChange}\r\n                    label=\"Nationality\"\r\n                  >\r\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                    <MenuItem value={1}>Guyanese</MenuItem>\r\n                    <MenuItem value={2}>Surinamese</MenuItem>\r\n                    <MenuItem value={3}>Brazillian</MenuItem>\r\n                    <MenuItem value={4}>Venezuelan</MenuItem>\r\n                    <MenuItem value={5}>Trinidadian</MenuItem>\r\n                    <MenuItem value={6}>Barbadian</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid >\r\n            </div>\r\n          </React.Fragment>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\AddressForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\ContactForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\OfficialInformationForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\PersonalInformationForm.js",[],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\Controls\\FormComponent.js",["156","157","158","159","160","161","162"],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\Controls\\DialogComponent.js",["163","164","165"],"C:\\Users\\Roger Nurse\\Desktop\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Notification.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":21},{"ruleId":"170","severity":1,"message":"174","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":19},{"ruleId":"170","severity":1,"message":"175","line":44,"column":17,"nodeType":"172","messageId":"173","endLine":44,"endColumn":25},{"ruleId":"170","severity":1,"message":"176","line":237,"column":9,"nodeType":"172","messageId":"173","endLine":237,"endColumn":28},{"ruleId":"170","severity":1,"message":"177","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":18},{"ruleId":"170","severity":1,"message":"178","line":11,"column":8,"nodeType":"172","messageId":"173","endLine":11,"endColumn":13},{"ruleId":"170","severity":1,"message":"179","line":12,"column":8,"nodeType":"172","messageId":"173","endLine":12,"endColumn":19},{"ruleId":"170","severity":1,"message":"180","line":13,"column":8,"nodeType":"172","messageId":"173","endLine":13,"endColumn":14},{"ruleId":"170","severity":1,"message":"181","line":19,"column":10,"nodeType":"172","messageId":"173","endLine":19,"endColumn":20},{"ruleId":"170","severity":1,"message":"182","line":19,"column":22,"nodeType":"172","messageId":"173","endLine":19,"endColumn":37},{"ruleId":"170","severity":1,"message":"183","line":22,"column":10,"nodeType":"172","messageId":"173","endLine":22,"endColumn":19},{"ruleId":"170","severity":1,"message":"184","line":24,"column":9,"nodeType":"172","messageId":"173","endLine":24,"endColumn":14},{"ruleId":"170","severity":1,"message":"185","line":87,"column":9,"nodeType":"172","messageId":"173","endLine":87,"endColumn":29},{"ruleId":"170","severity":1,"message":"186","line":91,"column":9,"nodeType":"172","messageId":"173","endLine":91,"endColumn":31},{"ruleId":"170","severity":1,"message":"187","line":95,"column":9,"nodeType":"172","messageId":"173","endLine":95,"endColumn":30},{"ruleId":"170","severity":1,"message":"188","line":99,"column":9,"nodeType":"172","messageId":"173","endLine":99,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":120,"column":23,"nodeType":"191","messageId":"192","endLine":120,"endColumn":25},{"ruleId":"170","severity":1,"message":"178","line":16,"column":8,"nodeType":"172","messageId":"173","endLine":16,"endColumn":13},{"ruleId":"170","severity":1,"message":"193","line":28,"column":21,"nodeType":"172","messageId":"173","endLine":28,"endColumn":26},{"ruleId":"170","severity":1,"message":"194","line":124,"column":9,"nodeType":"172","messageId":"173","endLine":124,"endColumn":10},{"ruleId":"189","severity":1,"message":"190","line":129,"column":34,"nodeType":"191","messageId":"192","endLine":129,"endColumn":36},{"ruleId":"195","severity":1,"message":"196","line":130,"column":26,"nodeType":"197","messageId":"198","endLine":130,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":138,"column":30,"nodeType":"191","messageId":"192","endLine":138,"endColumn":32},{"ruleId":"195","severity":1,"message":"196","line":139,"column":24,"nodeType":"197","messageId":"198","endLine":139,"endColumn":26},{"ruleId":"170","severity":1,"message":"199","line":162,"column":9,"nodeType":"172","messageId":"173","endLine":162,"endColumn":24},{"ruleId":"200","severity":1,"message":"201","line":66,"column":277,"nodeType":"202","endLine":66,"endColumn":311},{"ruleId":"200","severity":1,"message":"201","line":71,"column":182,"nodeType":"202","endLine":71,"endColumn":216},{"ruleId":"170","severity":1,"message":"203","line":2,"column":31,"nodeType":"172","messageId":"173","endLine":2,"endColumn":41},{"ruleId":"170","severity":1,"message":"177","line":2,"column":43,"nodeType":"172","messageId":"173","endLine":2,"endColumn":53},{"ruleId":"170","severity":1,"message":"179","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":19},{"ruleId":"170","severity":1,"message":"180","line":9,"column":8,"nodeType":"172","messageId":"173","endLine":9,"endColumn":14},{"ruleId":"170","severity":1,"message":"204","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":16},{"ruleId":"170","severity":1,"message":"205","line":16,"column":12,"nodeType":"172","messageId":"173","endLine":16,"endColumn":17},{"ruleId":"170","severity":1,"message":"206","line":16,"column":18,"nodeType":"172","messageId":"173","endLine":16,"endColumn":26},{"ruleId":"170","severity":1,"message":"207","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":25},{"ruleId":"170","severity":1,"message":"174","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":21},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'DialogActions' is defined but never used.","Identifier","unusedVar","'DialogTitle' is defined but never used.","'setError' is assigned a value but never used.","'confirmationHandler' is assigned a value but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'ErrorSharp' is defined but never used.","'TouchAppRounded' is defined but never used.","'useFormik' is defined but never used.","'Paper' is defined but never used.","'handlePositionChange' is assigned a value but never used.","'handleDepartmentChange' is assigned a value but never used.","'handleStartDateChange' is assigned a value but never used.","'handleEndDateChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Field' is defined but never used.","'i' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleClickOpen' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Typography' is defined but never used.","'MenuItem' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'DialogContentText' is defined but never used.","no-global-assign","no-unsafe-negation"]