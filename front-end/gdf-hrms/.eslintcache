[{"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\index.js":"1","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\App.js":"2","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Layout.js":"3","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\searchpage.js":"4","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileLayout.js":"5","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryLayout.js":"6","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByOtherCriteriaForm.js":"7","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByRegimentNumberForm.js":"8","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchResultsTable.js":"9","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\PersonalInformationForm.js":"10","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\AddressForm.js":"11","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\ContactForm.js":"12","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\OfficialInformationForm.js":"13","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryTable.js":"14","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryForm.js":"15","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeInformation.js":"16","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeAddressForm.js":"17","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeContactForm.js":"18","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeOfficialInfoForm.js":"19","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeePIForm.js":"20","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\axios.js":"21","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Home.js":"22","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\ViewCareerHistory.js":"23","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeInformation.js":"24","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\axios.js":"25","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeePIForm.js":"26","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeContactForm.js":"27","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeOfficialInfoForm.js":"28"},{"size":535,"mtime":1617372128052,"results":"29","hashOfConfig":"30"},{"size":1899,"mtime":1619191313883,"results":"31","hashOfConfig":"30"},{"size":6064,"mtime":1617674050855,"results":"32","hashOfConfig":"30"},{"size":3041,"mtime":1618883961964,"results":"33","hashOfConfig":"30"},{"size":14783,"mtime":1619542059517,"results":"34","hashOfConfig":"30"},{"size":1938,"mtime":1619191314019,"results":"35","hashOfConfig":"30"},{"size":4674,"mtime":1618278405616,"results":"36","hashOfConfig":"30"},{"size":2187,"mtime":1616431553700,"results":"37","hashOfConfig":"30"},{"size":3943,"mtime":1618836183774,"results":"38","hashOfConfig":"30"},{"size":3230,"mtime":1619542059427,"results":"39","hashOfConfig":"30"},{"size":3916,"mtime":1619314874736,"results":"40","hashOfConfig":"30"},{"size":1933,"mtime":1616293436041,"results":"41","hashOfConfig":"30"},{"size":2197,"mtime":1618266732103,"results":"42","hashOfConfig":"30"},{"size":2964,"mtime":1619542059356,"results":"43","hashOfConfig":"30"},{"size":2056,"mtime":1619191313971,"results":"44","hashOfConfig":"30"},{"size":10827,"mtime":1619533920039,"results":"45","hashOfConfig":"30"},{"size":5257,"mtime":1619542060101,"results":"46","hashOfConfig":"30"},{"size":4515,"mtime":1619191313939,"results":"47","hashOfConfig":"30"},{"size":5866,"mtime":1617841615514,"results":"48","hashOfConfig":"30"},{"size":9549,"mtime":1618755728505,"results":"49","hashOfConfig":"30"},{"size":146,"mtime":1617205194331,"results":"50","hashOfConfig":"30"},{"size":1171,"mtime":1617673193105,"results":"51","hashOfConfig":"30"},{"size":9510,"mtime":1619542059389,"results":"52","hashOfConfig":"30"},{"size":12367,"mtime":1619191314208,"results":"53","hashOfConfig":"30"},{"size":155,"mtime":1619191314177,"results":"54","hashOfConfig":"30"},{"size":7328,"mtime":1619191314153,"results":"55","hashOfConfig":"30"},{"size":4597,"mtime":1619191314080,"results":"56","hashOfConfig":"30"},{"size":6044,"mtime":1619191314132,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"8aj3nr",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\index.js",[],["118","119"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\App.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Layout.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\searchpage.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileLayout.js",["120"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport { Save, Cancel } from '@material-ui/icons';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport { MenuItem, InputLabel, FormControl, Select } from '@material-ui/core';\r\nimport Axios from 'axios';\r\n\r\nimport PersonalInformationForm from './EmployeeProfileComponents/PersonalInformationForm';\r\nimport AddressForm from './EmployeeProfileComponents/AddressForm';\r\nimport ContactForm from './EmployeeProfileComponents/ContactForm';\r\nimport OfficialInformationForm from './EmployeeProfileComponents/OfficialInformationForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  \r\n   careerButton: {\r\n     marginLeft: '20px,'\r\n   },\r\n\r\n   modal: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  },\r\n\r\n  icon:{\r\n    cursor: 'pointer'\r\n  }, \r\n\r\n  inputMaterial:{\r\n    width: '100%'\r\n  }\r\n\r\n}));\r\n\r\nexport default function EmployeeProfileLayout(props) {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const [employeeInfo, setEmployeeInfo] = useState({});\r\n  const [employeeAddress, setEmployeeAddress] = useState();  \r\n  const [open, setOpen] = useState(false);\r\n  const [lot, setLot] = useState();\r\n  const [street, setStreet] = useState();\r\n  const [area, setArea] = useState();\r\n  const [village, setVillage] = useState();\r\n  const [newRegion, setNewRegion] = useState(\"\");\r\n  const [newCountry, setNewCountry] = useState(\"\");\r\n  const [regions, setRegions] = useState();\r\n  const [countries, setCountries] = useState();\r\n\r\n  const [modalDelete, setModalDelete] = useState(false);\r\n  const [modalEdit, setModalEdit] = useState(false);\r\n\r\n  const [rowSelected, setRowSelected] = useState({\r\n    id: null,\r\n    lot:'',\r\n    street: '',\r\n    area: '',\r\n    village: '',\r\n    regionId: null,\r\n    countryId: null,\r\n    employeeId: null,\r\n  })\r\n\r\n  const handleChange = e => {\r\n    const {name, value} = e.target;\r\n    setRowSelected(prevState=>({\r\n      ...prevState,\r\n      [name]: value\r\n    }))\r\n  }\r\n\r\n  const deleteRequest = async() => {\r\n    await Axios.delete('DeleteInfo/DeleteAddress/' + rowSelected.id)\r\n    .then(response=>{\r\n      setEmployeeAddress(employeeAddress.filter(row => row.id !== rowSelected.id));\r\n      openCloseModalDelete();\r\n    })\r\n  }\r\n\r\n  const putRequest = async() => {\r\n    let editedAddress = {\r\n      id: rowSelected.id,\r\n      lot: rowSelected.lot,\r\n      street: rowSelected.street,\r\n      area: rowSelected.area,\r\n      village: rowSelected.village,\r\n      regionId: rowSelected.regionId,\r\n      countryId: rowSelected.countryId,\r\n      employeeId: rowSelected.eId,\r\n    }\r\n    await Axios.patch('UpdateInfo/update/employeePI/address/' + editedAddress.id, editedAddress)\r\n    .then(response=>{\r\n      let newData = employeeAddress;\r\n      newData.map(row => {        \r\n        if(rowSelected.id === row.id){\r\n          row.id = editedAddress.id;\r\n          row.lot = editedAddress.lot;\r\n          row.street = editedAddress.street;\r\n          row.area = editedAddress.area;\r\n          row.village = editedAddress.village;\r\n          row.regionId = editedAddress.regionId;\r\n          row.countryId = editedAddress.countryId;\r\n          row.employeeId = editedAddress.employeeId;\r\n        }\r\n      })\r\n      setEmployeeAddress(newData);\r\n      openCloseModalEdit();\r\n    })\r\n  }\r\n \r\n  const openCloseModalDelete = () => {\r\n    setModalDelete(!modalDelete);\r\n  }\r\n\r\n  const openCloseModalEdit = () => {\r\n    setModalEdit(!modalEdit);\r\n  }\r\n\r\n  const selectRow = (row, option) => {\r\n    setRowSelected(row);\r\n    (option === 'Edit') ? openCloseModalEdit() : openCloseModalDelete()\r\n  }\r\n  \r\n  const bodyDelete = (\r\n    <div className={classes.modal}>\r\n      <p>Are you sure you want to delete this address?</p>\r\n      <div align=\"right\">\r\n        <Button color=\"secondary\" onClick={() => deleteRequest()}>Yes</Button>\r\n        <Button onClick={() => openCloseModalDelete()}>No</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const handleLotChange = (event) => {\r\n    setLot(event.target.value);\r\n  }\r\n\r\n  const handleStreetChange = (event) => {\r\n    setStreet(event.target.value);\r\n  }\r\n\r\n  const handleAreaChange = (event) => {\r\n    setArea(event.target.value);\r\n  }\r\n\r\n  const handleVillageChange = (event) => {\r\n    setVillage(event.target.value);\r\n  }\r\n\r\n  const handleRegionChange = (event) => {\r\n    setNewRegion(event.target.value);\r\n  }\r\n\r\n  const handleCountryChange = (event) => {\r\n    setNewCountry(event.target.value);\r\n  }\r\n\r\n  const handleClickOpen = () => {    \r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const handleSave = () => {\r\n    let Address = {\r\n      lot: lot,\r\n      street: street,\r\n      area: area,\r\n      village: village,\r\n      reg: newRegion,\r\n      ctry: newCountry,\r\n      eId: empId,\r\n    }\r\n    if(Address){\r\n      Axios.post('PostInfo/AddAnEmployeeAddress', Address)\r\n      .then(response => console.log(response))\r\n      /* .then(response => {\r\n        setEmployeeAddress(employeeAddress.concat(response.data))\r\n      }) */\r\n      .catch(error => console.log(error))\r\n    }\r\n    setEmployeeAddress([Address, ...employeeAddress]);\r\n    setOpen(false);    \r\n  };\r\n  \r\n  let regNumber = params.regNum;\r\n  let empId;\r\n\r\n  useEffect(() => {\r\n    const getEmpInfo = async () => {\r\n      if(regNumber){\r\n        const info = await Axios.get(\"GetInfo/RegimentNumber/\" + regNumber);    \r\n        setEmployeeInfo(info.data);        \r\n      }\r\n    };\r\n\r\n    const getEmpAddress = async () => {\r\n      if(employeeInfo.id){\r\n        const addressInfo = await Axios.get(\"EmployeeInfo/GetEmployeeAddressByTheirId?employeeId=\" + employeeInfo.id);\r\n        setEmployeeAddress(addressInfo.data);\r\n      }\r\n    };\r\n\r\n    const getRegions = async () => {\r\n      const info = await Axios.get(\"GetInfo/GetAllRegions\");\r\n      if(info.data != null){\r\n        if(info.data.length > 0){\r\n          setRegions(info.data);\r\n        }\r\n      }\r\n    };\r\n\r\n    const getCountries = async () => {\r\n      const info = await Axios.get(\"GetInfo/GetAllCountries\");\r\n      if(info.data != null){\r\n        if(info.data.length > 0){\r\n          setCountries(info.data);\r\n        }\r\n      }\r\n    };\r\n\r\n    getEmpInfo();\r\n    getEmpAddress();\r\n    getRegions();\r\n    getCountries();\r\n  }, [regNumber, employeeInfo.id]);\r\n\r\n  empId = employeeInfo.id;\r\n\r\n  const bodyEdit = () => {\r\n    if(regions != null && countries != null){\r\n      if(regions.length > 0 && countries.length > 0){\r\n        return(\r\n          <div className={classes.modal}>\r\n            <h3>Edit Employee Address</h3>\r\n            <TextField name=\"lot\" className={classes.inputMaterial} label=\"Lot\" onChange={handleChange} value={rowSelected && rowSelected.lot}/>\r\n            <br />\r\n            <TextField name=\"street\" className={classes.inputMaterial} label=\"Street\" onChange={handleChange} value={rowSelected && rowSelected.street}/>\r\n            <br />\r\n            <TextField name=\"area\" className={classes.inputMaterial} label=\"Area\" onChange={handleChange} value={rowSelected && rowSelected.area}/>\r\n            <br />\r\n            <TextField name=\"village\" className={classes.inputMaterial} label=\"Village\" onChange={handleChange} value={rowSelected && rowSelected.village}/>\r\n            <br />\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"region-label\">Region</InputLabel>\r\n              <Select\r\n                labelId=\"region-label\"\r\n                id=\"region\"\r\n                name=\"regionId\"\r\n                value={rowSelected && rowSelected.regionId}\r\n                onChange={handleChange}\r\n                label=\"Region\"\r\n              >\r\n                <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                {regions.map((region) =>\r\n                  <MenuItem key={region.id} value={region.id}>{region.name}</MenuItem>\r\n                )}\r\n              </Select>\r\n            </FormControl>\r\n            <br />\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"region-label\">Country</InputLabel>\r\n              <Select\r\n                labelId=\"country-label\"\r\n                id=\"country\"\r\n                name=\"countryId\"\r\n                value={rowSelected && rowSelected.countryId}\r\n                onChange={handleChange}\r\n                label=\"Country\"\r\n              >\r\n                <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                {countries.map((country) =>\r\n                  <MenuItem key={country.id} value={country.id}>{country.name}</MenuItem>\r\n                )}                          \r\n              </Select>\r\n            </FormControl>\r\n            <br /><br />\r\n            <div align=\"right\">\r\n              <Button color=\"primary\" onClick={()=>putRequest()}>Save</Button>\r\n              <Button onClick={() => openCloseModalEdit()}>Cancel</Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const showInfo = () => {\r\n    if(regions != null && countries != null){\r\n      if(regions.length > 0 && countries.length > 0){\r\n        return (\r\n          <div className={classes.root}>\r\n            <Grid container spacing={1} >\r\n              <Grid item xs={6}>\r\n              <h1>Employee Profile Page</h1>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <h1>\r\n                  <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Add Employee Address</DialogTitle>\r\n                    <DialogContent>\r\n                      <TextField margin=\"dense\" id=\"lot\" label=\"Lot\" type=\"text\" fullWidth value={lot} onChange={handleLotChange}/>\r\n                      <TextField margin=\"dense\" id=\"street\" label=\"Street\" type=\"text\" fullWidth value={street} onChange={handleStreetChange}/>\r\n                      <TextField margin=\"dense\" id=\"area\" label=\"Area\" type=\"text\" fullWidth value={area} onChange={handleAreaChange}/>\r\n                      <TextField margin=\"dense\" id=\"village\" label=\"Village\" type=\"text\" fullWidth value={village} onChange={handleVillageChange}/>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"region-label\">Region</InputLabel>\r\n                        <Select\r\n                          labelId=\"region-label\"\r\n                          id=\"region\"\r\n                          value={newRegion}\r\n                          onChange={handleRegionChange}\r\n                          label=\"Region\"\r\n                        >\r\n                          <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                          {regions.map((region) =>\r\n                            <MenuItem key={region.id} value={region.id}>{region.name}</MenuItem>\r\n                          )}\r\n                        </Select>\r\n                      </FormControl>\r\n                      <br />\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"region-label\">Country</InputLabel>\r\n                        <Select\r\n                          labelId=\"country-label\"\r\n                          id=\"country\"\r\n                          value={newCountry}\r\n                          onChange={handleCountryChange}\r\n                          label=\"Country\"\r\n                        >\r\n                          <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                          {countries.map((country) =>\r\n                            <MenuItem key={country.id} value={country.id}>{country.name}</MenuItem>\r\n                          )}                          \r\n                        </Select>\r\n                      </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleCancel} variant=\"contained\" color=\"primary\" startIcon={<Cancel />}>Cancel</Button>\r\n                      <Button onClick={handleSave} variant=\"contained\" color=\"primary\" startIcon={<Save />}>Save Address</Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    <Link to={'/employee-history/' + regNumber}>Update Employee Record</Link>\r\n                  </Button>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    <Link to={'/employee-history-view/' + empId}>View Career History</Link>\r\n                  </Button>\r\n                </h1>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <div>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                      <PersonalInformationForm employeeInfo={employeeInfo}></PersonalInformationForm>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <AddressForm \r\n                        employeeInfo={employeeAddress}\r\n                        selectRow={selectRow}>\r\n                      </AddressForm>\r\n                    </Grid>\r\n                    <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={handleClickOpen}>\r\n                      Add Address\r\n                    </Button>\r\n                    <Grid item xs={12}>\r\n                      <ContactForm employeeInfo={employeeInfo}></ContactForm>\r\n                    </Grid >\r\n                    <Grid item xs={12}>\r\n                      <OfficialInformationForm employeeInfo={employeeInfo}></OfficialInformationForm>\r\n                    </Grid >\r\n                  </Grid>           \r\n                </div> \r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return(\r\n    <div>\r\n      {showInfo()}\r\n      <Modal open={modalDelete} onClose={openCloseModalDelete}>\r\n        {bodyDelete}\r\n      </Modal>\r\n\r\n      <Modal open={modalEdit} onClose={openCloseModalEdit}>\r\n        {bodyEdit()}        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryLayout.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByOtherCriteriaForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByRegimentNumberForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchResultsTable.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\PersonalInformationForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\AddressForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\ContactForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\OfficialInformationForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryTable.js",["121"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeInformation.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeAddressForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeContactForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeOfficialInfoForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeePIForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\axios.js",[],["122","123"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Home.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\ViewCareerHistory.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeInformation.js",["124","125"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios';\r\nimport axios from './UpdateEmployeeComponents/axios'\r\n\r\nimport UpdateEmployeePIForm from './UpdateEmployeeComponents/UpdateEmployeePIForm';\r\n//import UpdateEmployeeAddressForm from './UpdateEmployeeComponents/UpdateEmployeeAddressForm';\r\nimport UpdateEmployeeContactForm from './UpdateEmployeeComponents/UpdateEmployeeContactForm';\r\nimport UpdateEmployeeOfficialInfoForm from './UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  \r\n   careerButton: {\r\n     marginLeft: '20px,'\r\n   }\r\n\r\n}));\r\n\r\nexport default function UpdateEmployeeInformation() {\r\n  const classes = useStyles();  \r\n  const [employeeInfo, setEmployeeInfo] = useState({});\r\n  const [empInfoGet, setEmpInfoGet] = useState({});\r\n  const [employeeAddress, setEmployeeAddress] = useState({});\r\n  const regNumber = 123456;\r\n\r\n  useEffect(() => {\r\n    const getEmpInfo = async () => {\r\n      if(regNumber){\r\n        const info = await Axios.get(\"GetInfo/RegimentNumber/\" + regNumber);    \r\n        setEmpInfoGet(info.data);  \r\n        console.log(info.data);      \r\n      }\r\n    };\r\n    const getEmpAddress = async () => {\r\n      if(regNumber){\r\n        const addressInfo = await Axios.get(\"EmployeeInfo/GetEmployeeAddressByTheirId?employeeId=1\");\r\n        setEmployeeAddress(addressInfo.data);\r\n      }\r\n    };\r\n    getEmpInfo();\r\n    getEmpAddress();\r\n  }, [regNumber]);\r\n\r\n  // AddEmployeePIForm INFORMATION\r\n  const [firstName, setFirstName] = useState();\r\n  const [lastName, setLastName] = useState();\r\n  const [otherName, setOtherName] = useState(\"\");\r\n  const [otherNameTwo, setOtherNameTwo] = useState(\"\");\r\n  const [maritalStatus, setMaritalStatus] = useState(\"\");\r\n  const [religion, setReligion] = useState(\"\");\r\n  const [ethnicity, setEthnicity] = useState(0);\r\n  const [sex, setSex] = useState(\"\");\r\n  const [dateOfBirth, setDateOfBirth] = useState();\r\n  const [nationality, setNationality] = useState(\"\");\r\n\r\n\r\n\r\n  const handleFirstNameChange = (event) => {\r\n    setFirstName(event.target.value);\r\n  };\r\n\r\n  const handleLastNameChange = (event) => {\r\n    setLastName(event.target.value);\r\n  };\r\n\r\n  const handleOtherNameChange = (event) => {\r\n    setOtherName(event.target.value);\r\n  };\r\n\r\n  const handleOtherNameTwoChange = (event) => {\r\n    setOtherNameTwo(event.target.value);\r\n  };\r\n\r\n  const handleMaritalStatusChange = (event) => {\r\n    setMaritalStatus(event.target.value);\r\n  };\r\n\r\n  const handleReligionChange = (event) => {\r\n    setReligion(event.target.value);\r\n  };\r\n\r\n  const handleEthnicityChange = (event) => {\r\n    setEthnicity(event.target.value);\r\n  };\r\n\r\n  // DON'T LAUGH TOO MUCH, YOU MIGHT POP A VEIN\r\n  const handleSexChange = (event) => {\r\n    setSex(event.target.value);\r\n  }\r\n\r\n  const handleDoBChange = (event) => {\r\n    setDateOfBirth(event.target.value);\r\n  }\r\n\r\n  const handleNationalityChange = (event) => {\r\n    setNationality(event.target.value);\r\n  }\r\n\r\n  // AddEmployeeContactForm Information\r\n  const [homeNumber, setHomeNumber] = useState();\r\n  const [cellNumber, setCellNumber] = useState();\r\n  const [workNumber, setWorkNumber] = useState();\r\n  const [email, setEmail] = useState();\r\n\r\n  const handleHomeNumChange = (event) => {      \r\n    setHomeNumber(event.target.value);\r\n  }\r\n\r\n  const handleCellNumChange = (event) => {    \r\n    setCellNumber(event.target.value);\r\n  }\r\n\r\n  const handleWorkNumChange = (event) => {       \r\n    setWorkNumber(event.target.value); \r\n  }\r\n\r\n  const handleEmailChange = (event) => {    \r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  // AddEmployeeOfficialInfoForm Information\r\n  const [regimentNumber, setRegimentNumber] = useState();\r\n  const [nationalIdNumber, setNationalIdNumber] = useState();\r\n  const [passportNumber, setPassportNumber] = useState();\r\n  const [passportExpirationDate, setPassportExpirationDate] = useState();\r\n  const [tinNumber, setTinNumber] = useState();\r\n\r\n  const handleRegNumChange = (event) => {    \r\n    setRegimentNumber(event.target.value);\r\n  }\r\n\r\n  const handleNationalIdNumChange = (event) => {    \r\n    setNationalIdNumber(event.target.value);\r\n  }\r\n\r\n  const handlePassportNumChange = (event) => {    \r\n    setPassportNumber(event.target.value); \r\n  }\r\n\r\n  const handlePassportExpDateChange = (event) => {\r\n    setPassportExpirationDate(event.target.value);\r\n  }\r\n\r\n  const handleTinNumChange = (event) => {\r\n    setTinNumber(event.target.value);\r\n  }\r\n\r\n  const postDataHandler = () => {    \r\n    setEmployeeInfo({\r\n      nationalityId: nationality,\r\n      religionId: religion,\r\n      ethnicityId: ethnicity,\r\n      maritalStatusId: maritalStatus,\r\n      homeNumber: parseInt(homeNumber, 10),\r\n      cellNumber: parseInt(cellNumber, 10),\r\n      workNumber: parseInt(workNumber, 10),\r\n      email: email,\r\n      title: '',\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      otherName: otherName,\r\n      regimentNumber: parseInt(regimentNumber, 10),\r\n      dateOfBirth: dateOfBirth,\r\n      sex: sex,\r\n      nationalIdNumber: parseInt(nationalIdNumber, 10),\r\n      passportNumber: passportNumber,\r\n      passportExpirationDate: passportExpirationDate,\r\n      tinNumber: parseInt(tinNumber, 10),\r\n    });\r\n    //console.log(employeeInfo);\r\n    axios.post('PostInfo/AddAnEmployee', employeeInfo)\r\n      .then(response => console.log(response))\r\n      .catch(error => console.log(error))\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1} >\r\n        <Grid item xs={6}>\r\n         <h1>Update Employee Profile</h1>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <h1>\r\n            <Button variant=\"outlined\" color=\"primary\">\r\n            <Link to={'/employee-history/'}>Update Career History</Link>\r\n            </Button>\r\n          </h1>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <div>\r\n            <Grid container spacing={3}>          \r\n              <Grid item xs={12}>\r\n                <UpdateEmployeePIForm \r\n                  firstName={firstName}\r\n                  lastName={lastName}\r\n                  otherName={otherName}\r\n                  otherNameTwo={otherNameTwo}\r\n                  maritalStatus={maritalStatus} \r\n                  religion={religion}\r\n                  ethnicity={ethnicity}\r\n                  sex={sex}\r\n                  dateOfBirth={dateOfBirth}\r\n                  nationality={nationality}\r\n                  handleFirstNameChange={handleFirstNameChange}\r\n                  handleLastNameChange={handleLastNameChange}\r\n                  handleOtherNameChange={handleOtherNameChange}\r\n                  handleOtherNameTwoChange={handleOtherNameTwoChange}\r\n                  handleMaritalStatusChange={handleMaritalStatusChange}\r\n                  handleReligionChange={handleReligionChange}\r\n                  handleEthnicityChange={handleEthnicityChange}\r\n                  handleSexChange={handleSexChange}\r\n                  handleDoBChange={handleDoBChange}\r\n                  handleNationalityChange={handleNationalityChange}>                    \r\n                </UpdateEmployeePIForm>\r\n              </Grid>\r\n\r\n              {/*<Grid item xs={12}>\r\n                <AddEmployeeAddressForm \r\n                  lot={lot}\r\n                  street={street}\r\n                  area={area}\r\n                  village={village}\r\n                  region={region}\r\n                  country={country}\r\n                  handleLotChange={handleLotChange}\r\n                  handleStreetChange={handleStreetChange}\r\n                  handleAreaChange={handleAreaChange}\r\n                  handleVillageChange={handleVillageChange}\r\n                  handleRegionChange={handleRegionChange}\r\n                  handleCountryChange={handleCountryChange}></AddEmployeeAddressForm>\r\n              </Grid>*/}\r\n\r\n              <Grid item xs={12}>\r\n                <UpdateEmployeeContactForm \r\n                  homeNumber={homeNumber}\r\n                  cellNumber={cellNumber}\r\n                  workNumber={workNumber}\r\n                  email={email}\r\n                  handleHomeNumChange={handleHomeNumChange}\r\n                  handleCellNumChange={handleCellNumChange}\r\n                  handleWorkNumChange={handleWorkNumChange}\r\n                  handleEmailChange={handleEmailChange}>\r\n                </UpdateEmployeeContactForm>\r\n              </Grid >\r\n\r\n              <Grid item xs={12}>\r\n                <UpdateEmployeeOfficialInfoForm \r\n                  regimentNumber={regimentNumber}\r\n                  nationalIdNumber={nationalIdNumber}\r\n                  passportNumber={passportNumber}\r\n                  passportExpirationDate={passportExpirationDate}\r\n                  tinNumber={tinNumber}\r\n                  handleRegNumChange={handleRegNumChange}\r\n                  handleNationalIdNumChange={handleNationalIdNumChange}\r\n                  handlePassportNumChange={handlePassportNumChange}\r\n                  handlePassportExpDateChange={handlePassportExpDateChange}\r\n                  handleTinNumChange={handleTinNumChange}>\r\n                </UpdateEmployeeOfficialInfoForm>\r\n              </Grid >\r\n\r\n              <Grid item xs={12}>\r\n                <Button type=\"submit\" onClick={postDataHandler} variant=\"outlined\" color=\"primary\"> Add Employee </Button>\r\n              </Grid >\r\n            </Grid>           \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\axios.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeePIForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeContactForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeOfficialInfoForm.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":120,"column":23,"nodeType":"132","messageId":"133","endLine":120,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":37,"column":7,"nodeType":"136","messageId":"137","endLine":37,"endColumn":16},{"ruleId":"126","replacedBy":"138"},{"ruleId":"128","replacedBy":"139"},{"ruleId":"134","severity":1,"message":"140","line":38,"column":10,"nodeType":"136","messageId":"137","endLine":38,"endColumn":20},{"ruleId":"134","severity":1,"message":"141","line":39,"column":10,"nodeType":"136","messageId":"137","endLine":39,"endColumn":25},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'selectRow' is assigned a value but never used.","Identifier","unusedVar",["142"],["143"],"'empInfoGet' is assigned a value but never used.","'employeeAddress' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]