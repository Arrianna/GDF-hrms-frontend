[{"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\index.js":"1","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\App.js":"2","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Layout.js":"3","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\searchpage.js":"4","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileLayout.js":"5","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryLayout.js":"6","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByOtherCriteriaForm.js":"7","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByRegimentNumberForm.js":"8","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchResultsTable.js":"9","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\PersonalInformationForm.js":"10","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\AddressForm.js":"11","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\ContactForm.js":"12","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\OfficialInformationForm.js":"13","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryTable.js":"14","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryForm.js":"15","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeInformation.js":"16","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeAddressForm.js":"17","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeContactForm.js":"18","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeOfficialInfoForm.js":"19","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeePIForm.js":"20","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\axios.js":"21","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Home.js":"22","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\ViewCareerHistory.js":"23","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeInformation.js":"24","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\axios.js":"25","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeePIForm.js":"26","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeContactForm.js":"27","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeOfficialInfoForm.js":"28","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Notification.js":"29","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\Controls\\DialogComponent.js":"30","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\Controls\\FormComponent.js":"31","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\Notification.js":"32"},{"size":957,"mtime":1620434703274,"results":"33","hashOfConfig":"34"},{"size":1877,"mtime":1619885724421,"results":"35","hashOfConfig":"34"},{"size":6064,"mtime":1617674050855,"results":"36","hashOfConfig":"34"},{"size":2826,"mtime":1620655907875,"results":"37","hashOfConfig":"34"},{"size":26662,"mtime":1620742734026,"results":"38","hashOfConfig":"34"},{"size":1938,"mtime":1619191314019,"results":"39","hashOfConfig":"34"},{"size":3884,"mtime":1620440760411,"results":"40","hashOfConfig":"34"},{"size":2020,"mtime":1620651777997,"results":"41","hashOfConfig":"34"},{"size":3937,"mtime":1619885724520,"results":"42","hashOfConfig":"34"},{"size":3255,"mtime":1620740558931,"results":"43","hashOfConfig":"34"},{"size":3690,"mtime":1620740788283,"results":"44","hashOfConfig":"34"},{"size":1914,"mtime":1620740440120,"results":"45","hashOfConfig":"34"},{"size":2181,"mtime":1620740480257,"results":"46","hashOfConfig":"34"},{"size":12484,"mtime":1620701206076,"results":"47","hashOfConfig":"34"},{"size":2830,"mtime":1620393974159,"results":"48","hashOfConfig":"34"},{"size":9001,"mtime":1620701874363,"results":"49","hashOfConfig":"34"},{"size":7197,"mtime":1620695207019,"results":"50","hashOfConfig":"34"},{"size":4254,"mtime":1620701474746,"results":"51","hashOfConfig":"34"},{"size":4213,"mtime":1620734902952,"results":"52","hashOfConfig":"34"},{"size":10881,"mtime":1620701394389,"results":"53","hashOfConfig":"34"},{"size":146,"mtime":1617205194331,"results":"54","hashOfConfig":"34"},{"size":1171,"mtime":1617673193105,"results":"55","hashOfConfig":"34"},{"size":11022,"mtime":1620701643641,"results":"56","hashOfConfig":"34"},{"size":14356,"mtime":1620744602079,"results":"57","hashOfConfig":"34"},{"size":155,"mtime":1619191314177,"results":"58","hashOfConfig":"34"},{"size":12591,"mtime":1620744319612,"results":"59","hashOfConfig":"34"},{"size":5699,"mtime":1620744423314,"results":"60","hashOfConfig":"34"},{"size":9583,"mtime":1620744523034,"results":"61","hashOfConfig":"34"},{"size":1000,"mtime":1619802371332,"results":"62","hashOfConfig":"34"},{"size":1069,"mtime":1620393974212,"results":"63","hashOfConfig":"34"},{"size":3575,"mtime":1620393974234,"results":"64","hashOfConfig":"34"},{"size":1000,"mtime":1620701206112,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"8aj3nr",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\index.js",[],["136","137"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\App.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Layout.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\searchpage.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileLayout.js",["138","139","140","141","142","143","144"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryLayout.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByOtherCriteriaForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByRegimentNumberForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchResultsTable.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\PersonalInformationForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\AddressForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\ContactForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\OfficialInformationForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryTable.js",["145","146","147","148","149","150","151","152"],"import React, { useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport moment from 'moment';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Axios from 'axios'; \r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {Formik,Form,Field, ErrorMessage} from 'formik';\r\nimport * as Yup  from 'yup';\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function CareerHistoryTable(props) {\r\n\r\n  const classes = useStyles();\r\n  const [open,setOpen] = useState(false);\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [newPosition, setNewPosition] = useState();\r\n  const [newDepartment, setNewDepartment] = useState();\r\n  const [positions, setPositions] = useState();\r\n  const [departments, setDepartments] = useState();\r\n  const [rowId, setRowId] = useState();\r\n  const [eId, setEId] = useState();\r\n  \r\n\r\n  let data = props.data;\r\n  //console.log(data);\r\n\r\n  useEffect(() => {    \r\n    const getPosition = async () => {\r\n      const info = await Axios.get(\"GetInfo/GetAllPositions\");\r\n      if(info.data != null){\r\n        if(info.data.length > 0){\r\n          setPositions(info.data);\r\n        }\r\n      }\r\n    };\r\n   \r\n    const getDepartment = async () => {\r\n      const info = await Axios.get(\"GetInfo/GetAllDepartments\");\r\n      if(info.data != null){\r\n        if(info.data.length > 0){\r\n          setDepartments(info.data);\r\n        }\r\n      }\r\n    };\r\n\r\n    getPosition();\r\n    getDepartment();\r\n  }, []);\r\n\r\n  const handlePositionChange = (event) => {\r\n    setNewPosition(event.target.value);\r\n  }\r\n \r\n  const handleDepartmentChange = (event) => {\r\n    setNewDepartment(event.target.value);\r\n  }\r\n\r\n  const handleStartDateChange = (event) => {\r\n    setStartDate(event.target.value);\r\n  }\r\n\r\n  const handleEndDateChange = (event) => {\r\n    setEndDate(event.target.value);\r\n  }\r\n\r\n  const selectRow = (row)=> {\r\n    let i;\r\n    setStartDate(row.startDate);\r\n    setEndDate(row.endDate);\r\n\r\n    \r\n    departments.map((department) => {\r\n      if( row.department == department.name){\r\n       // console.log(row.department + ' vs ' + department.name + ' and ' + department.id)\r\n        setNewDepartment(department.id);\r\n      }\r\n      console.log(newDepartment);\r\n    }\r\n    )\r\n\r\n    positions.map((position) => {\r\n      if( row.position == position.name){\r\n       // console.log(row.department + ' vs ' + department.name + ' and ' + department.id)\r\n        setNewPosition(position.id);\r\n      }\r\n     // console.log(newDepartment);\r\n    }\r\n    )\r\n\r\n    //setNewPosition(row.position);\r\n    //setNewDepartment(row.department);\r\n    setRowId(row.id);\r\n    setEId(row.eId);\r\n    setOpen(true);\r\n    console.log(row.position);\r\n    console.log('newPosition ' + newPosition)\r\n  }\r\n  const initialValues = {\r\n    newPosition: newPosition\r\n    \r\n}\r\n\r\n\r\n\r\n  const handleClickOpen = () => {    \r\n    setOpen(true);\r\n    console.log(open);\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    let careerHistory = {\r\n      id: rowId,\r\n      employeeId: parseInt(eId),\r\n      positionId: newPosition,\r\n      departmentId: newDepartment,\r\n      startDate: startDate,\r\n      endDate: endDate\r\n    }\r\n    if(careerHistory){\r\n\r\n      const patchRequest = async() => {\r\n      Axios.patch('UpdateInfo/update/employeeCH/' + eId, careerHistory)\r\n     // .then(response => (data = data.concat(response.data)))\r\n      .catch(error => console.log(error)) \r\n    }\r\n\r\n    patchRequest();\r\n  }\r\n   // setEmpData([careerHistory, ...empData]);\r\n   \r\n    setOpen(false);    \r\n  };\r\n  const showResults = () => {\r\n    if(data!= null) {\r\n      if(data.length > 0) {  \r\n        return (\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell align=\"center\">Position</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Department</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Start Date</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">End Date</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Action</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {data.map((row) => {            \r\n                  return(\r\n                    <StyledTableRow key={row.id}>\r\n                      <StyledTableCell align=\"center\">{row.position}</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">{row.department}</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">{moment(row.startDate).format('DD-MM-YYYY')}</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">{moment(row.endDate).format('DD-MM-YYYY')}</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">\r\n                            <Edit className={classes.icon} onClick={() => selectRow(row)}/>\r\n                          </StyledTableCell>   \r\n                    </StyledTableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const showDialog = () => {\r\n    const validationSchema = Yup.object().shape({\r\n      newPosition: Yup.string().required(\"Required\")\r\n    })\r\n    console.log(\"working\");\r\n    if(positions != null && departments != null) {\r\n      if(positions.length > 0 && departments.length > 0){\r\n        return(\r\n          <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid container item xs={12} spacing={3}>\r\n              <React.Fragment>\r\n                 <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n\r\n                    <DialogTitle id=\"form-dialog-title\">Edit Career History Record</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                    <Formik initialValues={initialValues} validationSchema={validationSchema}>\r\n                        {(props)=>(\r\n                           <Form>\r\n                          <FormControl className={classes.formControl}>\r\n                          <InputLabel shrink=\"true\" id=\"position-label\">Position</InputLabel>\r\n                          <Select\r\n                            labelId=\"position-label\"\r\n                            id=\"position\"\r\n                            value={newPosition}\r\n                            onChange={handlePositionChange}\r\n                            label=\"Position\"\r\n                            fullwidth\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            error={props.errors.newPosition && props.touched.newPosition}\r\n                            helperText={<ErrorMessage newPosition='newPosition' />} required\r\n                          >\r\n                            <MenuItem  value=\"\"><em>Select</em></MenuItem>\r\n                            {positions.map((position) =>\r\n                              <MenuItem key={position.id} value={position.id}>{position.name}</MenuItem>)}  \r\n                          </Select>\r\n                        </FormControl>\r\n                       <br/> \r\n                     \r\n                      <FormControl className={classes.formControl}>\r\n                      <InputLabel shrink=\"true\" id=\"department-label\">Department</InputLabel>\r\n                      <Select\r\n                            labelId=\"department-label\"\r\n                            id=\"department\"\r\n                            value={newDepartment}\r\n                            onChange={handleDepartmentChange}\r\n                            label=\"Department\"\r\n                            fullwidth\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            \r\n                          >\r\n                           <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                              {departments.map((department) =>\r\n                              <MenuItem key={department.id} value={department.id}>{department.name}</MenuItem>  \r\n                            )}                         \r\n                          </Select>\r\n                              </FormControl> \r\n                         <br/>\r\n                        <FormControl className={classes.formControl}>\r\n                          <InputLabel shrink=\"true\" htmlFor=\"component-simple\">Start Date</InputLabel>\r\n                          <TextField margin=\"normal\" id=\"startDate\"  type=\"date\" fullWidth variant=\"outlined\" value={moment(startDate).format('YYYY-MM-DD')} onChange={handleStartDateChange}/>\r\n                        </FormControl>\r\n                       <br/>\r\n                        <FormControl className={classes.formControl}>\r\n                          <InputLabel shrink=\"true\" htmlFor=\"component-simple\">End Date</InputLabel>\r\n                          <TextField margin=\"normal\" id=\"EndDate\"  type=\"date\" format=\"dd-MM-yyyy\" fullWidth variant=\"outlined\" value={moment(endDate).format('YYYY-MM-DD')} onChange={handleEndDateChange}/>\r\n                        </FormControl> \r\n                        </Form>\r\n                        )}\r\n                     \r\n                    </Formik>\r\n\r\n                      \r\n                    </DialogContent>\r\n                  \r\n                    <DialogActions>\r\n                    <div>\r\n                      <Button onClick={handleCancel} variant=\"contained\" color=\"primary\">Cancel</Button>\r\n                    </div>\r\n                    <div>\r\n                      <Button onClick={handleSave} variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />}>Save Address</Button>\r\n                    </div>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </React.Fragment>\r\n               </Grid>\r\n              </Grid>\r\n             </div>  \r\n        )\r\n      }  \r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      {showResults()}\r\n      {showDialog()}\r\n    </div>\r\n  );\r\n}\r\n","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeInformation.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeAddressForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeContactForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeOfficialInfoForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeePIForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\axios.js",[],["153","154"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Home.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\ViewCareerHistory.js",["155"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useParams } from 'react-router-dom';\r\nimport CareerHistoryTable from './CareerHistoryTable';\r\nimport Axios from 'axios'; \r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function ViewCareerHistory(props) {\r\n  const classes = useStyles();\r\n  const params = useParams();  \r\n  const [empData, setEmpData] = useState();\r\n  const [employeeInfo, setEmployeeInfo] = useState();\r\n  const [newPosition, setNewPosition] = useState();\r\n  const [newDepartment, setNewDepartment] = useState();\r\n  //const [position, setPosition] = useState();\r\n  //const [department, setDepartment] = useState();\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [positions, setPositions] = useState();\r\n  const [departments, setDepartments] = useState();\r\n\r\n  let eId = params.empId;\r\n\r\n  const handleClickOpen = () => {    \r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlePositionChange = (event) => {\r\n    setNewPosition(event.target.value);\r\n  }\r\n \r\n  const handleDepartmentChange = (event) => {\r\n    setNewDepartment(event.target.value);\r\n  }\r\n\r\n  const handleStartDateChange = (event) => {\r\n    setStartDate(event.target.value);\r\n  }\r\n\r\n  const handleEndDateChange = (event) => {\r\n    setEndDate(event.target.value);\r\n  }\r\n\r\n  const handleSave = () => {\r\n    let careerHistory = {\r\n      eId: parseInt(eId),\r\n      posId: newPosition,\r\n      deptId: newDepartment,\r\n      startDate: startDate,\r\n      endDate: endDate\r\n    }\r\n    if(careerHistory){\r\n\r\n      const postRequest = async() => {\r\n        Axios.post('PostInfo/AddAnEmployeeCareerHistory', careerHistory)\r\n        .then(response => setEmpData(empData.concat(response.data)))\r\n        .catch(error => console.log(error))\r\n      }\r\n\r\n      postRequest();\r\n    }\r\n   \r\n    setOpen(false);    \r\n  };\r\n\r\n  useEffect(() => {    \r\n    const getEmpCH = async () => {\r\n      if(eId){\r\n        const info = await Axios.get(\"EmployeeInfo/GetEmployeeCareerHistoryByTheirId?employeeId=\" + eId);\r\n        setEmpData(info.data);\r\n      }\r\n    };\r\n\r\n    const getEmpInfo = async () => {\r\n      if(eId){\r\n        const info = await Axios.get(\"EmployeeInfo/Id/\" + eId);\r\n        setEmployeeInfo(info.data);\r\n      }\r\n    };  \r\n\r\n    const getPosition = async () => {\r\n      const info = await Axios.get(\"GetInfo/GetAllPositions\");\r\n      if(info.data != null){\r\n        if(info.data.length > 0){\r\n          setPositions(info.data);\r\n        }\r\n      }\r\n    };\r\n   \r\n    const getDepartment = async () => {\r\n      const info = await Axios.get(\"GetInfo/GetAllDepartments\");\r\n      if(info.data != null){\r\n        if(info.data.length > 0){\r\n          setDepartments(info.data);\r\n        }\r\n      }\r\n    };\r\n\r\n    getEmpCH();\r\n    getEmpInfo();\r\n    getPosition();\r\n    getDepartment();\r\n  }, [eId]);\r\n\r\n  const showInfo = () => {\r\n    if(employeeInfo != null) {\r\n      return(\r\n        <div>\r\n         <h2>Career History for {employeeInfo.firstName} {employeeInfo.lastName} ({employeeInfo.regimentNumber})</h2>  \r\n        </div>\r\n      );\r\n    }\r\n  } \r\n\r\n  const showDialog = () => {\r\n    console.log(\"working\");\r\n    if(positions != null && departments != null) {\r\n      if(positions.length > 0 && departments.length > 0){\r\n        return(\r\n          <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid container item xs={12} spacing={3}>\r\n              <React.Fragment>\r\n                 <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n\r\n                    <DialogTitle id=\"form-dialog-title\">Add Career History Record</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink=\"true\" id=\"position-label\">Position</InputLabel>\r\n                        <Select\r\n                          labelId=\"position-label\"\r\n                          id=\"position\"\r\n                          value={newPosition}\r\n                          onChange={handlePositionChange}\r\n                          label=\"Position\"\r\n                          fullwidth\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                        >\r\n                          <MenuItem  value=\"\"><em>Select</em></MenuItem>\r\n                          {positions.map((position) =>\r\n                            <MenuItem key={position.id} value={position.id}>{position.name}</MenuItem>)}  \r\n                        </Select>\r\n                      </FormControl>\r\n                     <br/>\r\n                      {/* <TextField margin=\"dense\" id=\"country\" label=\"Country\" type=\"text\" fullWidth/> */}\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink=\"true\" id=\"department-label\">Department</InputLabel>\r\n                        <Select\r\n                          labelId=\"department-label\"\r\n                          id=\"department\"\r\n                          value={newDepartment}\r\n                          onChange={handleDepartmentChange}\r\n                          label=\"Department\"\r\n                          fullwidth\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                        >\r\n                         <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                            {departments.map((department) =>\r\n                            <MenuItem key={department.id} value={department.id}>{department.name}</MenuItem>  \r\n                          )}                         \r\n                        </Select>\r\n                      </FormControl>\r\n                      <br/>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink=\"true\" htmlFor=\"component-simple\">Start Date</InputLabel>\r\n                        <TextField margin=\"normal\" id=\"startDate\"  type=\"date\" fullWidth variant=\"outlined\" value={startDate} onChange={handleStartDateChange}/>\r\n                      </FormControl>\r\n                     <br/>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink=\"true\" htmlFor=\"component-simple\">End Date</InputLabel>\r\n                        <TextField margin=\"normal\" id=\"EndDate\"  type=\"date\" fullWidth variant=\"outlined\" value={endDate} onChange={handleEndDateChange}/>\r\n                      </FormControl>\r\n                    \r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                    <div>\r\n                      <Button onClick={handleCancel} variant=\"contained\" color=\"primary\">Cancel</Button>\r\n                    </div>\r\n                    <div>\r\n                      <Button onClick={handleSave} variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />}>Save Address</Button>\r\n                    </div>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </React.Fragment>\r\n               </Grid>\r\n              </Grid>\r\n             </div>  \r\n        )}  \r\n    }\r\n  }  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6}>  \r\n          {showInfo()}\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <React.Fragment>\r\n            <div>\r\n              <Grid container spacing={3}>    \r\n                <Grid item xs={12}>\r\n\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Add Career History Record\r\n                    {/* <Link to={'/add-address/' + empId}>Add Employee Address</Link> */}\r\n                  </Button>\r\n                </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <div>\r\n                {showDialog()}\r\n                </div>\r\n              </Grid>\r\n\r\n                </Grid>            \r\n                <Grid item xs={12}>\r\n                   <CareerHistoryTable data={empData}></CareerHistoryTable>  \r\n                </Grid>\r\n           \r\n            </div>\r\n          </React.Fragment>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeInformation.js",["156","157","158","159","160","161","162","163","164","165","166"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\axios.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeePIForm.js",["167","168","169","170","171"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeContactForm.js",["172","173"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeOfficialInfoForm.js",["174","175","176","177","178","179"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Notification.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\Controls\\DialogComponent.js",["180","181","182"],"import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormComponent from './../Controls/FormComponent';\r\n\r\n\r\n\r\n  \r\nexport default function DialogComponent() {\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const handleClickToOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  \r\n  const handleToClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  return (\r\n    <div stlye={{}}>\r\n      <h4>Add Career History</h4>\r\n      <Button variant=\"outlined\" color=\"primary\" \r\n              onClick={handleClickToOpen}>\r\n        Add Career History\r\n      </Button>\r\n      <Dialog open={open} onClose={handleToClose}>\r\n        \r\n        <DialogContent>\r\n          <FormComponent/>\r\n        </DialogContent>\r\n       \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\Controls\\FormComponent.js",["183","184","185","186","187","188","189"],"import React from 'react';\r\nimport { Grid, Paper, Button, Typography, InputLabel } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst FormComponent = () => {\r\n    const paperStyle = { padding: '0 15px 40px 15px', width: 250, }\r\n    const btnStyle = { marginTop: 10 }\r\n    \r\n    const [value,setValue] = React.useState ('')\r\n   \r\n    const initialValues = {\r\n        rank: '',\r\n        name: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        startDate: '',\r\n        endDate:'' \r\n    }\r\n\r\n   \r\n    const validationSchema = Yup.object().shape({\r\n        rank: Yup.string().required(\"Required\"),\r\n        name: Yup.string().min(3, \"It's too short\").required(\"Required\"),\r\n        \r\n        startDate: Yup.date().required(\"Required\"),\r\n        endDate: Yup.date().required(\"Required\")\r\n    })\r\n    const onSubmit = (values, props) => {\r\n\r\n       console.log(values)\r\n    }\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={0} style={paperStyle}>\r\n                \r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {(props) => (\r\n                        <Form noValidate>\r\n                            {/* <FormControl>\r\n                                <InputLabel>\r\n                                    <Select\r\n                                        labelId='department'\r\n                                        id='department-select'\r\n                                        value={value}\r\n                                    >\r\n                                        <MenuItem value ={'Finance'}>Finance</MenuItem>\r\n                                        <MenuItem value ={'Finance'}>Finance</MenuItem>\r\n                                    </Select>\r\n                                </InputLabel>\r\n                            </FormControl> */}\r\n                            {/* <TextField label='Name' name=\"name\" fullWidth value={props.values.name}\r\n                    onChange={props.handleChange} /> */}\r\n\r\n                            <Field as={TextField} name='name' label='Name' fullWidth variant='outlined'  \r\n                                error={props.errors.name && props.touched.name}\r\n                                helperText={<ErrorMessage name='name' />} required />\r\n                                    \r\n                         \r\n\r\n                            <Field as={TextField} name='startDate' label='Start Date' type='date' fullWidth variant='outlined'\r\n                                error={props.errors.startDate && props.touched.startDate}\r\n                                helperText={<ErrorMessage name='starDate' />} required />\r\n\r\n                            <Field as={TextField} name='endDate' label='End Date' type='date' fullWidth variant='outlined'\r\n                                error={props.errors.endDate && props.touched.endDate}\r\n                                helperText={<ErrorMessage name='endDate' />} required />\r\n\r\n                            <Button type='submit' style={btnStyle} variant='contained'\r\n                                color='primary'>Add Career</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default FormComponent;","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\Notification.js",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":7,"column":20,"nodeType":"196","messageId":"197","endLine":7,"endColumn":30},{"ruleId":"194","severity":1,"message":"198","line":7,"column":32,"nodeType":"196","messageId":"197","endLine":7,"endColumn":43},{"ruleId":"194","severity":1,"message":"199","line":7,"column":45,"nodeType":"196","messageId":"197","endLine":7,"endColumn":51},{"ruleId":"194","severity":1,"message":"200","line":158,"column":9,"nodeType":"196","messageId":"197","endLine":158,"endColumn":31},{"ruleId":"194","severity":1,"message":"201","line":166,"column":9,"nodeType":"196","messageId":"197","endLine":166,"endColumn":21},{"ruleId":"202","severity":1,"message":"203","line":211,"column":23,"nodeType":"204","messageId":"205","endLine":211,"endColumn":25},{"ruleId":"194","severity":1,"message":"206","line":273,"column":9,"nodeType":"196","messageId":"197","endLine":273,"endColumn":19},{"ruleId":"194","severity":1,"message":"207","line":16,"column":8,"nodeType":"196","messageId":"197","endLine":16,"endColumn":13},{"ruleId":"194","severity":1,"message":"208","line":28,"column":21,"nodeType":"196","messageId":"197","endLine":28,"endColumn":26},{"ruleId":"194","severity":1,"message":"209","line":124,"column":9,"nodeType":"196","messageId":"197","endLine":124,"endColumn":10},{"ruleId":"202","severity":1,"message":"203","line":129,"column":34,"nodeType":"204","messageId":"205","endLine":129,"endColumn":36},{"ruleId":"210","severity":1,"message":"211","line":130,"column":26,"nodeType":"212","messageId":"213","endLine":130,"endColumn":28},{"ruleId":"202","severity":1,"message":"203","line":138,"column":30,"nodeType":"204","messageId":"205","endLine":138,"endColumn":32},{"ruleId":"210","severity":1,"message":"211","line":139,"column":24,"nodeType":"212","messageId":"213","endLine":139,"endColumn":26},{"ruleId":"194","severity":1,"message":"214","line":162,"column":9,"nodeType":"196","messageId":"197","endLine":162,"endColumn":24},{"ruleId":"190","replacedBy":"215"},{"ruleId":"192","replacedBy":"216"},{"ruleId":"194","severity":1,"message":"207","line":11,"column":8,"nodeType":"196","messageId":"197","endLine":11,"endColumn":13},{"ruleId":"194","severity":1,"message":"217","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":137,"column":51,"nodeType":"204","messageId":"205","endLine":137,"endColumn":53},{"ruleId":"210","severity":1,"message":"211","line":138,"column":41,"nodeType":"212","messageId":"213","endLine":138,"endColumn":43},{"ruleId":"202","severity":1,"message":"203","line":144,"column":40,"nodeType":"204","messageId":"205","endLine":144,"endColumn":42},{"ruleId":"210","severity":1,"message":"211","line":145,"column":37,"nodeType":"212","messageId":"213","endLine":145,"endColumn":39},{"ruleId":"202","severity":1,"message":"203","line":150,"column":47,"nodeType":"204","messageId":"205","endLine":150,"endColumn":49},{"ruleId":"210","severity":1,"message":"211","line":151,"column":38,"nodeType":"212","messageId":"213","endLine":151,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":156,"column":43,"nodeType":"204","messageId":"205","endLine":156,"endColumn":45},{"ruleId":"210","severity":1,"message":"211","line":157,"column":36,"nodeType":"212","messageId":"213","endLine":157,"endColumn":38},{"ruleId":"218","severity":1,"message":"219","line":179,"column":6,"nodeType":"220","endLine":183,"endColumn":28,"suggestions":"221"},{"ruleId":"210","severity":1,"message":"211","line":280,"column":25,"nodeType":"212","messageId":"213","endLine":280,"endColumn":27},{"ruleId":"194","severity":1,"message":"222","line":10,"column":8,"nodeType":"196","messageId":"197","endLine":10,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":151,"column":27,"nodeType":"225","endLine":151,"endColumn":42},{"ruleId":"223","severity":1,"message":"224","line":169,"column":27,"nodeType":"225","endLine":169,"endColumn":38},{"ruleId":"223","severity":1,"message":"224","line":227,"column":27,"nodeType":"225","endLine":227,"endColumn":43},{"ruleId":"223","severity":1,"message":"224","line":251,"column":27,"nodeType":"225","endLine":251,"endColumn":49},{"ruleId":"226","severity":1,"message":"227","line":54,"column":5,"nodeType":"228","messageId":"213","endLine":54,"endColumn":15},{"ruleId":"226","severity":1,"message":"229","line":64,"column":5,"nodeType":"228","messageId":"213","endLine":64,"endColumn":15},{"ruleId":"194","severity":1,"message":"230","line":7,"column":18,"nodeType":"196","messageId":"197","endLine":7,"endColumn":22},{"ruleId":"194","severity":1,"message":"231","line":31,"column":11,"nodeType":"196","messageId":"197","endLine":31,"endColumn":19},{"ruleId":"194","severity":1,"message":"232","line":31,"column":21,"nodeType":"196","messageId":"197","endLine":31,"endColumn":27},{"ruleId":"226","severity":1,"message":"233","line":47,"column":5,"nodeType":"228","messageId":"213","endLine":47,"endColumn":21},{"ruleId":"226","severity":1,"message":"234","line":57,"column":5,"nodeType":"228","messageId":"213","endLine":57,"endColumn":21},{"ruleId":"226","severity":1,"message":"235","line":67,"column":5,"nodeType":"228","messageId":"213","endLine":67,"endColumn":14},{"ruleId":"194","severity":1,"message":"236","line":3,"column":8,"nodeType":"196","messageId":"197","endLine":3,"endColumn":25},{"ruleId":"194","severity":1,"message":"237","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":19},{"ruleId":"194","severity":1,"message":"238","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":21},{"ruleId":"194","severity":1,"message":"239","line":2,"column":31,"nodeType":"196","messageId":"197","endLine":2,"endColumn":41},{"ruleId":"194","severity":1,"message":"195","line":2,"column":43,"nodeType":"196","messageId":"197","endLine":2,"endColumn":53},{"ruleId":"194","severity":1,"message":"198","line":8,"column":8,"nodeType":"196","messageId":"197","endLine":8,"endColumn":19},{"ruleId":"194","severity":1,"message":"199","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":14},{"ruleId":"194","severity":1,"message":"240","line":10,"column":8,"nodeType":"196","messageId":"197","endLine":10,"endColumn":16},{"ruleId":"194","severity":1,"message":"241","line":16,"column":12,"nodeType":"196","messageId":"197","endLine":16,"endColumn":17},{"ruleId":"194","severity":1,"message":"242","line":16,"column":18,"nodeType":"196","messageId":"197","endLine":16,"endColumn":26},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'InputLabel' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Select' is defined but never used.","'handleNewAddressChange' is assigned a value but never used.","'handleChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleSave' is assigned a value but never used.","'Input' is defined but never used.","'Field' is defined but never used.","'i' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleClickOpen' is assigned a value but never used.",["243"],["244"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ethnicities', 'maritalStatuses', 'nationalities', and 'religions'. Either include them or remove the dependency array.","ArrayExpression",["245"],"'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'homeNumber'.","ObjectExpression","Duplicate key 'cellNumber'.","'Form' is defined but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","Duplicate key 'regimentalNumber'.","Duplicate key 'nationalIdNumber'.","Duplicate key 'tinNumber'.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'DialogActions' is defined but never used.","'Typography' is defined but never used.","'MenuItem' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},"Update the dependencies array to be: [eId, empInfoGet.firstName, empInfoGet.lastName, empInfoGet.otherName, empInfoGet.otherNameTwo, empInfoGet.maritalStatus, empInfoGet.ethnicity, empInfoGet.religion, empInfoGet.sex, empInfoGet.dateOfBirth, empInfoGet.nationality, empInfoGet.homeNumber, empInfoGet.cellNumber, empInfoGet.workNumber, empInfoGet.email, empInfoGet.regimentNumber, empInfoGet.nationalIdNumber, empInfoGet.passportNumber, empInfoGet.passportExpirationDate, empInfoGet.tinNumber, nationalities, religions, ethnicities, maritalStatuses]",{"range":"248","text":"249"},[6355,6839],"[eId, empInfoGet.firstName, empInfoGet.lastName, empInfoGet.otherName, empInfoGet.otherNameTwo, empInfoGet.maritalStatus, empInfoGet.ethnicity, empInfoGet.religion, empInfoGet.sex, empInfoGet.dateOfBirth, empInfoGet.nationality, empInfoGet.homeNumber, empInfoGet.cellNumber, empInfoGet.workNumber, empInfoGet.email, empInfoGet.regimentNumber, empInfoGet.nationalIdNumber, empInfoGet.passportNumber, empInfoGet.passportExpirationDate, empInfoGet.tinNumber, nationalities, religions, ethnicities, maritalStatuses]"]