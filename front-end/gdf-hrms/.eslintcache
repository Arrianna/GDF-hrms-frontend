[{"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\index.js":"1","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\App.js":"2","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Layout.js":"3","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\searchpage.js":"4","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileLayout.js":"5","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryLayout.js":"6","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByOtherCriteriaForm.js":"7","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByRegimentNumberForm.js":"8","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchResultsTable.js":"9","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\PersonalInformationForm.js":"10","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\AddressForm.js":"11","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\ContactForm.js":"12","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\OfficialInformationForm.js":"13","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryTable.js":"14","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryForm.js":"15","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeInformation.js":"16","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeAddressForm.js":"17","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeContactForm.js":"18","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeOfficialInfoForm.js":"19","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeePIForm.js":"20","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\axios.js":"21","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Home.js":"22","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\ViewCareerHistory.js":"23","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeInformation.js":"24","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\axios.js":"25","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeePIForm.js":"26","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeContactForm.js":"27","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeOfficialInfoForm.js":"28","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Notification.js":"29"},{"size":535,"mtime":1619881617382,"results":"30","hashOfConfig":"31"},{"size":1877,"mtime":1619885724421,"results":"32","hashOfConfig":"31"},{"size":6064,"mtime":1617674050855,"results":"33","hashOfConfig":"31"},{"size":2960,"mtime":1619914452630,"results":"34","hashOfConfig":"31"},{"size":15787,"mtime":1619886233737,"results":"35","hashOfConfig":"31"},{"size":1938,"mtime":1619191314019,"results":"36","hashOfConfig":"31"},{"size":4659,"mtime":1619927887803,"results":"37","hashOfConfig":"31"},{"size":2187,"mtime":1616431553700,"results":"38","hashOfConfig":"31"},{"size":3937,"mtime":1619885724520,"results":"39","hashOfConfig":"31"},{"size":3230,"mtime":1619542059427,"results":"40","hashOfConfig":"31"},{"size":3657,"mtime":1619784851139,"results":"41","hashOfConfig":"31"},{"size":1933,"mtime":1616293436041,"results":"42","hashOfConfig":"31"},{"size":2197,"mtime":1618266732103,"results":"43","hashOfConfig":"31"},{"size":2964,"mtime":1619542059356,"results":"44","hashOfConfig":"31"},{"size":2056,"mtime":1619191313971,"results":"45","hashOfConfig":"31"},{"size":5178,"mtime":1619805600763,"results":"46","hashOfConfig":"31"},{"size":5440,"mtime":1619616157500,"results":"47","hashOfConfig":"31"},{"size":4740,"mtime":1619616157500,"results":"48","hashOfConfig":"31"},{"size":5980,"mtime":1619616157500,"results":"49","hashOfConfig":"31"},{"size":9595,"mtime":1619616157501,"results":"50","hashOfConfig":"31"},{"size":146,"mtime":1617205194331,"results":"51","hashOfConfig":"31"},{"size":1171,"mtime":1617673193105,"results":"52","hashOfConfig":"31"},{"size":9394,"mtime":1619542908677,"results":"53","hashOfConfig":"31"},{"size":12367,"mtime":1619191314208,"results":"54","hashOfConfig":"31"},{"size":155,"mtime":1619191314177,"results":"55","hashOfConfig":"31"},{"size":7328,"mtime":1619191314153,"results":"56","hashOfConfig":"31"},{"size":4597,"mtime":1619191314080,"results":"57","hashOfConfig":"31"},{"size":6044,"mtime":1619191314132,"results":"58","hashOfConfig":"31"},{"size":1000,"mtime":1619802371332,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8aj3nr",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\index.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\App.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Layout.js",[],["124","125"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\searchpage.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileLayout.js",["126"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryLayout.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByOtherCriteriaForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchByRegimentNumberForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\SearchPageComponents\\SearchResultsTable.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\PersonalInformationForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\AddressForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\ContactForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\EmployeeProfileComponents\\OfficialInformationForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryTable.js",["127"],"import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport moment from 'moment';\r\nimport Edit from '@material-ui/icons/Edit';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst selectRow = (row)=>{\r\n  console.log(\"hello\");\r\n}\r\n\r\n\r\nexport default function CareerHistoryTable(props) {\r\n  const classes = useStyles();\r\n  let data = props.data;\r\n  //console.log(data);\r\n  const showResults = () => {\r\n    if(data!= null) {\r\n      if(data.length > 0) {  \r\n        return (\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell align=\"center\">Position</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Department</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Start Date</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">End Date</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Action</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {data.map((row) => {            \r\n                  return(\r\n                    <StyledTableRow key={row.id}>\r\n                      <StyledTableCell align=\"center\">{row.position}</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">{row.department}</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">{moment(row.startDate).format('DD-MM-YYYY')}</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">{moment(row.endDate).format('DD-MM-YYYY')}</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">\r\n                            <Edit className={classes.icon} onClick={() => props.selectRow(row)}/>\r\n                          </StyledTableCell>   \r\n                    </StyledTableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {showResults()}\r\n    </div>\r\n  );\r\n}\r\n","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\CareerHistoryForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeInformation.js",["128","129","130","131"],"import React, { Fragment, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, Divider } from '@material-ui/core';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\n\r\nimport AddEmployeePIForm from './AddEmployeeComponents/AddEmployeePIForm';\r\nimport AddEmployeeAddressForm from './AddEmployeeComponents/AddEmployeeAddressForm';\r\nimport AddEmployeeContactForm from './AddEmployeeComponents/AddEmployeeContactForm';\r\nimport AddEmployeeOfficialInfoForm from './AddEmployeeComponents/AddEmployeeOfficialInfoForm';\r\nimport Notification from './Notification';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  \r\n   careerButton: {\r\n     marginLeft: '20px,'\r\n   }\r\n\r\n}));\r\n\r\nexport default function AddEmployeeInformation() {\r\n  const classes = useStyles();\r\n  const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\r\n  const [employeeInfo, setEmployeeInfo] = useState({\r\n    nationalityId: '',\r\n    religionId: '',\r\n    ethnicityId: '',\r\n    maritalStatusId: '',\r\n    homeNumber: '',\r\n    cellNumber: '',\r\n    workNumber: '',\r\n    email: '',\r\n    title: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    otherName: '',\r\n    regimentNumber: '',\r\n    dateOfBirth: '',\r\n    sex: '',\r\n    nationalIdNumber: '',\r\n    passportNumber: '',\r\n    passportExpirationDate: '',\r\n    tinNumber: '',\r\n    lot: '',\r\n    street: '',\r\n    area: '',\r\n    village: '',\r\n    region: '',\r\n    country: '',\r\n  })\r\n\r\n  const handleChange = e => {\r\n    const {name, value} = e.target;\r\n    setEmployeeInfo(prevState=>({\r\n      ...prevState,\r\n      [name]: value\r\n    }))\r\n  }\r\n\r\n  const getNotification = (option) => {\r\n    if(option.statusText === 'OK'){\r\n      setNotify({\r\n        isOpen: true,\r\n        message: 'Employee Information Successfully Added',\r\n        type: 'success'\r\n      })\r\n    }\r\n    else{\r\n      setNotify({\r\n        isOpen: true,\r\n        message: 'An error occurred',\r\n        type: 'error'\r\n      })\r\n    }    \r\n  }\r\n\r\n  const postDataHandler = () => {    \r\n    let Info = {\r\n      nationalityId: parseInt(employeeInfo.nationalityId, 10),\r\n      religionId: parseInt(employeeInfo.religionId, 10),\r\n      ethnicityId: parseInt(employeeInfo.ethnicityId, 10),\r\n      maritalStatusId: parseInt(employeeInfo.maritalStatusId, 10),\r\n      homeNumber: parseInt(employeeInfo.homeNumber, 10),\r\n      cellNumber: parseInt(employeeInfo.cellNumber, 10),\r\n      workNumber: parseInt(employeeInfo.workNumber, 10),\r\n      email: employeeInfo.email,\r\n      title: '',\r\n      firstName: employeeInfo.firstName,\r\n      lastName: employeeInfo.lastName,\r\n      otherName: employeeInfo.otherName,\r\n      regimentNumber: parseInt(employeeInfo.regimentNumber, 10),\r\n      dateOfBirth: employeeInfo.dateOfBirth,\r\n      sex: employeeInfo.sex,\r\n      nationalIdNumber: parseInt(employeeInfo.nationalIdNumber, 10),\r\n      passportNumber: employeeInfo.passportNumber,\r\n      passportExpirationDate: employeeInfo.passportExpirationDate,\r\n      tinNumber: parseInt(employeeInfo.tinNumber, 10),\r\n      lot: employeeInfo.lot,\r\n      street: employeeInfo.street,\r\n      area: employeeInfo.area,\r\n      village: employeeInfo.village,\r\n      region: parseInt(employeeInfo.region, 10),\r\n      country: parseInt(employeeInfo.country, 10),\r\n    }\r\n    if(Info){\r\n      axios.post('PostInfo/AddAnEmployee', Info)\r\n      .then(response => getNotification(response))\r\n      .catch(error => getNotification(error))\r\n    }    \r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1} >\r\n        <Grid item xs={6}>\r\n         <h1>Add Employee Information</h1>\r\n        </Grid>        \r\n        <Grid container item xs={12} spacing={3}>\r\n          <div>\r\n            <Grid container spacing={3}>          \r\n              <Grid item xs={12}>\r\n                <AddEmployeePIForm handleChange={handleChange} employeeInfo={employeeInfo}></AddEmployeePIForm>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <AddEmployeeAddressForm handleChange={handleChange} employeeInfo={employeeInfo}></AddEmployeeAddressForm>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <AddEmployeeContactForm handleChange={handleChange} employeeInfo={employeeInfo}></AddEmployeeContactForm>\r\n              </Grid >\r\n\r\n              <Grid item xs={12}>\r\n                <AddEmployeeOfficialInfoForm handleChange={handleChange} employeeInfo={employeeInfo}></AddEmployeeOfficialInfoForm>\r\n              </Grid >\r\n\r\n              <Grid item xs={12}>\r\n                <Button type=\"submit\" onClick={postDataHandler} variant=\"outlined\" color=\"primary\"> Add Employee </Button>\r\n              </Grid >\r\n            </Grid>           \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Notification notify={notify} setNotify={setNotify}/>\r\n    </div>\r\n  );\r\n}\r\n","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeAddressForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeContactForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeeOfficialInfoForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\AddEmployeePIForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\AddEmployeeComponents\\axios.js",[],["132","133"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Home.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\CareerHistoryComponents\\ViewCareerHistory.js",["134"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useParams } from 'react-router-dom';\r\nimport CareerHistoryTable from './CareerHistoryTable';\r\nimport Axios from 'axios'; \r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function ViewCareerHistory(props) {\r\n  const classes = useStyles();\r\n  const params = useParams();  \r\n  const [empData, setEmpData] = useState();\r\n  const [employeeInfo, setEmployeeInfo] = useState();\r\n  const [newPosition, setNewPosition] = useState();\r\n  const [newDepartment, setNewDepartment] = useState();\r\n  //const [position, setPosition] = useState();\r\n  //const [department, setDepartment] = useState();\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [positions, setPositions] = useState();\r\n  const [departments, setDepartments] = useState();\r\n\r\n  let eId = params.empId;\r\n\r\n  const handleClickOpen = () => {    \r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlePositionChange = (event) => {\r\n    setNewPosition(event.target.value);\r\n  }\r\n \r\n  const handleDepartmentChange = (event) => {\r\n    setNewDepartment(event.target.value);\r\n  }\r\n\r\n  const handleStartDateChange = (event) => {\r\n    setStartDate(event.target.value);\r\n  }\r\n\r\n  const handleEndDateChange = (event) => {\r\n    setEndDate(event.target.value);\r\n  }\r\n\r\n  const handleSave = () => {\r\n    let careerHistory = {\r\n      eId: parseInt(eId),\r\n      posId: newPosition,\r\n      deptId: newDepartment,\r\n      startDate: startDate,\r\n      endDate: endDate\r\n    }\r\n    if(careerHistory){\r\n\r\n      const postRequest = async() => {\r\n        Axios.post('PostInfo/AddAnEmployeeCareerHistory', careerHistory)\r\n        .then(response => setEmpData(empData.concat(response.data)))\r\n        .catch(error => console.log(error))\r\n      }\r\n\r\n      postRequest();\r\n    }\r\n   \r\n    setOpen(false);    \r\n  };\r\n\r\n  useEffect(() => {    \r\n    const getEmpCH = async () => {\r\n      if(eId){\r\n        const info = await Axios.get(\"EmployeeInfo/GetEmployeeCareerHistoryByTheirId?employeeId=\" + eId);\r\n        setEmpData(info.data);\r\n      }\r\n    };\r\n\r\n    const getEmpInfo = async () => {\r\n      if(eId){\r\n        const info = await Axios.get(\"EmployeeInfo/Id/\" + eId);\r\n        setEmployeeInfo(info.data);\r\n      }\r\n    };  \r\n\r\n    const getPosition = async () => {\r\n      const info = await Axios.get(\"GetInfo/GetAllPositions\");\r\n      if(info.data != null){\r\n        if(info.data.length > 0){\r\n          setPositions(info.data);\r\n        }\r\n      }\r\n    };\r\n   \r\n    const getDepartment = async () => {\r\n      const info = await Axios.get(\"GetInfo/GetAllDepartments\");\r\n      if(info.data != null){\r\n        if(info.data.length > 0){\r\n          setDepartments(info.data);\r\n        }\r\n      }\r\n    };\r\n\r\n    getEmpCH();\r\n    getEmpInfo();\r\n    getPosition();\r\n    getDepartment();\r\n  }, [eId]);\r\n\r\n  const showInfo = () => {\r\n    if(employeeInfo != null) {\r\n      return(\r\n        <div>\r\n         <h2>Career History for {employeeInfo.firstName} {employeeInfo.lastName} ({employeeInfo.regimentNumber})</h2>  \r\n        </div>\r\n      );\r\n    }\r\n  } \r\n\r\n  const showDialog = () => {\r\n    console.log(\"working\");\r\n    if(positions != null && departments != null) {\r\n      if(positions.length > 0 && departments.length > 0){\r\n        return(\r\n          <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid container item xs={12} spacing={3}>\r\n              <React.Fragment>\r\n                 <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n\r\n                    <DialogTitle id=\"form-dialog-title\">Add Career History Record</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink=\"true\" id=\"position-label\">Position</InputLabel>\r\n                        <Select\r\n                          labelId=\"position-label\"\r\n                          id=\"position\"\r\n                          value={newPosition}\r\n                          onChange={handlePositionChange}\r\n                          label=\"Position\"\r\n                          fullwidth\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                        >\r\n                          <MenuItem  value=\"\"><em>Select</em></MenuItem>\r\n                          {positions.map((position) =>\r\n                            <MenuItem key={position.id} value={position.id}>{position.name}</MenuItem>)}  \r\n                        </Select>\r\n                      </FormControl>\r\n                     <br/>\r\n                      {/* <TextField margin=\"dense\" id=\"country\" label=\"Country\" type=\"text\" fullWidth/> */}\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink=\"true\" id=\"department-label\">Department</InputLabel>\r\n                        <Select\r\n                          labelId=\"department-label\"\r\n                          id=\"department\"\r\n                          value={newDepartment}\r\n                          onChange={handleDepartmentChange}\r\n                          label=\"Department\"\r\n                          fullwidth\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                        >\r\n                         <MenuItem value=\"\"><em>Select</em></MenuItem>\r\n                            {departments.map((department) =>\r\n                            <MenuItem key={department.id} value={department.id}>{department.name}</MenuItem>  \r\n                          )}                         \r\n                        </Select>\r\n                      </FormControl>\r\n                      <br/>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink=\"true\" htmlFor=\"component-simple\">Start Date</InputLabel>\r\n                        <TextField margin=\"normal\" id=\"startDate\"  type=\"date\" fullWidth variant=\"outlined\" value={startDate} onChange={handleStartDateChange}/>\r\n                      </FormControl>\r\n                     <br/>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink=\"true\" htmlFor=\"component-simple\">End Date</InputLabel>\r\n                        <TextField margin=\"normal\" id=\"EndDate\"  type=\"date\" fullWidth variant=\"outlined\" value={endDate} onChange={handleEndDateChange}/>\r\n                      </FormControl>\r\n                    \r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                    <div>\r\n                      <Button onClick={handleCancel} variant=\"contained\" color=\"primary\">Cancel</Button>\r\n                    </div>\r\n                    <div>\r\n                      <Button onClick={handleSave} variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />}>Save Address</Button>\r\n                    </div>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </React.Fragment>\r\n               </Grid>\r\n              </Grid>\r\n             </div>  \r\n        )}  \r\n    }\r\n  }  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6}>  \r\n          {showInfo()}\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <React.Fragment>\r\n            <div>\r\n              <Grid container spacing={3}>    \r\n                <Grid item xs={12}>\r\n\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Add Career History Record\r\n                    {/* <Link to={'/add-address/' + empId}>Add Employee Address</Link> */}\r\n                  </Button>\r\n                </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <div>\r\n                {showDialog()}\r\n                </div>\r\n              </Grid>\r\n\r\n                </Grid>            \r\n                <Grid item xs={12}>\r\n                   <CareerHistoryTable data={empData}></CareerHistoryTable>  \r\n                </Grid>\r\n           \r\n            </div>\r\n          </React.Fragment>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeInformation.js",["135","136"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios';\r\nimport axios from './UpdateEmployeeComponents/axios'\r\n\r\nimport UpdateEmployeePIForm from './UpdateEmployeeComponents/UpdateEmployeePIForm';\r\n//import UpdateEmployeeAddressForm from './UpdateEmployeeComponents/UpdateEmployeeAddressForm';\r\nimport UpdateEmployeeContactForm from './UpdateEmployeeComponents/UpdateEmployeeContactForm';\r\nimport UpdateEmployeeOfficialInfoForm from './UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        flexGrow: 1,\r\n    }, \r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  \r\n   careerButton: {\r\n     marginLeft: '20px,'\r\n   }\r\n\r\n}));\r\n\r\nexport default function UpdateEmployeeInformation() {\r\n  const classes = useStyles();  \r\n  const [employeeInfo, setEmployeeInfo] = useState({});\r\n  const [empInfoGet, setEmpInfoGet] = useState({});\r\n  const [employeeAddress, setEmployeeAddress] = useState({});\r\n  const regNumber = 123456;\r\n\r\n  useEffect(() => {\r\n    const getEmpInfo = async () => {\r\n      if(regNumber){\r\n        const info = await Axios.get(\"GetInfo/RegimentNumber/\" + regNumber);    \r\n        setEmpInfoGet(info.data);  \r\n        console.log(info.data);      \r\n      }\r\n    };\r\n    const getEmpAddress = async () => {\r\n      if(regNumber){\r\n        const addressInfo = await Axios.get(\"EmployeeInfo/GetEmployeeAddressByTheirId?employeeId=1\");\r\n        setEmployeeAddress(addressInfo.data);\r\n      }\r\n    };\r\n    getEmpInfo();\r\n    getEmpAddress();\r\n  }, [regNumber]);\r\n\r\n  // AddEmployeePIForm INFORMATION\r\n  const [firstName, setFirstName] = useState();\r\n  const [lastName, setLastName] = useState();\r\n  const [otherName, setOtherName] = useState(\"\");\r\n  const [otherNameTwo, setOtherNameTwo] = useState(\"\");\r\n  const [maritalStatus, setMaritalStatus] = useState(\"\");\r\n  const [religion, setReligion] = useState(\"\");\r\n  const [ethnicity, setEthnicity] = useState(0);\r\n  const [sex, setSex] = useState(\"\");\r\n  const [dateOfBirth, setDateOfBirth] = useState();\r\n  const [nationality, setNationality] = useState(\"\");\r\n\r\n\r\n\r\n  const handleFirstNameChange = (event) => {\r\n    setFirstName(event.target.value);\r\n  };\r\n\r\n  const handleLastNameChange = (event) => {\r\n    setLastName(event.target.value);\r\n  };\r\n\r\n  const handleOtherNameChange = (event) => {\r\n    setOtherName(event.target.value);\r\n  };\r\n\r\n  const handleOtherNameTwoChange = (event) => {\r\n    setOtherNameTwo(event.target.value);\r\n  };\r\n\r\n  const handleMaritalStatusChange = (event) => {\r\n    setMaritalStatus(event.target.value);\r\n  };\r\n\r\n  const handleReligionChange = (event) => {\r\n    setReligion(event.target.value);\r\n  };\r\n\r\n  const handleEthnicityChange = (event) => {\r\n    setEthnicity(event.target.value);\r\n  };\r\n\r\n  // DON'T LAUGH TOO MUCH, YOU MIGHT POP A VEIN\r\n  const handleSexChange = (event) => {\r\n    setSex(event.target.value);\r\n  }\r\n\r\n  const handleDoBChange = (event) => {\r\n    setDateOfBirth(event.target.value);\r\n  }\r\n\r\n  const handleNationalityChange = (event) => {\r\n    setNationality(event.target.value);\r\n  }\r\n\r\n  // AddEmployeeContactForm Information\r\n  const [homeNumber, setHomeNumber] = useState();\r\n  const [cellNumber, setCellNumber] = useState();\r\n  const [workNumber, setWorkNumber] = useState();\r\n  const [email, setEmail] = useState();\r\n\r\n  const handleHomeNumChange = (event) => {      \r\n    setHomeNumber(event.target.value);\r\n  }\r\n\r\n  const handleCellNumChange = (event) => {    \r\n    setCellNumber(event.target.value);\r\n  }\r\n\r\n  const handleWorkNumChange = (event) => {       \r\n    setWorkNumber(event.target.value); \r\n  }\r\n\r\n  const handleEmailChange = (event) => {    \r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  // AddEmployeeOfficialInfoForm Information\r\n  const [regimentNumber, setRegimentNumber] = useState();\r\n  const [nationalIdNumber, setNationalIdNumber] = useState();\r\n  const [passportNumber, setPassportNumber] = useState();\r\n  const [passportExpirationDate, setPassportExpirationDate] = useState();\r\n  const [tinNumber, setTinNumber] = useState();\r\n\r\n  const handleRegNumChange = (event) => {    \r\n    setRegimentNumber(event.target.value);\r\n  }\r\n\r\n  const handleNationalIdNumChange = (event) => {    \r\n    setNationalIdNumber(event.target.value);\r\n  }\r\n\r\n  const handlePassportNumChange = (event) => {    \r\n    setPassportNumber(event.target.value); \r\n  }\r\n\r\n  const handlePassportExpDateChange = (event) => {\r\n    setPassportExpirationDate(event.target.value);\r\n  }\r\n\r\n  const handleTinNumChange = (event) => {\r\n    setTinNumber(event.target.value);\r\n  }\r\n\r\n  const postDataHandler = () => {    \r\n    setEmployeeInfo({\r\n      nationalityId: nationality,\r\n      religionId: religion,\r\n      ethnicityId: ethnicity,\r\n      maritalStatusId: maritalStatus,\r\n      homeNumber: parseInt(homeNumber, 10),\r\n      cellNumber: parseInt(cellNumber, 10),\r\n      workNumber: parseInt(workNumber, 10),\r\n      email: email,\r\n      title: '',\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      otherName: otherName,\r\n      regimentNumber: parseInt(regimentNumber, 10),\r\n      dateOfBirth: dateOfBirth,\r\n      sex: sex,\r\n      nationalIdNumber: parseInt(nationalIdNumber, 10),\r\n      passportNumber: passportNumber,\r\n      passportExpirationDate: passportExpirationDate,\r\n      tinNumber: parseInt(tinNumber, 10),\r\n    });\r\n    //console.log(employeeInfo);\r\n    axios.post('PostInfo/AddAnEmployee', employeeInfo)\r\n      .then(response => console.log(response))\r\n      .catch(error => console.log(error))\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1} >\r\n        <Grid item xs={6}>\r\n         <h1>Update Employee Profile</h1>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <h1>\r\n            <Button variant=\"outlined\" color=\"primary\">\r\n            <Link to={'/employee-history/'}>Update Career History</Link>\r\n            </Button>\r\n          </h1>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <div>\r\n            <Grid container spacing={3}>          \r\n              <Grid item xs={12}>\r\n                <UpdateEmployeePIForm \r\n                  firstName={firstName}\r\n                  lastName={lastName}\r\n                  otherName={otherName}\r\n                  otherNameTwo={otherNameTwo}\r\n                  maritalStatus={maritalStatus} \r\n                  religion={religion}\r\n                  ethnicity={ethnicity}\r\n                  sex={sex}\r\n                  dateOfBirth={dateOfBirth}\r\n                  nationality={nationality}\r\n                  handleFirstNameChange={handleFirstNameChange}\r\n                  handleLastNameChange={handleLastNameChange}\r\n                  handleOtherNameChange={handleOtherNameChange}\r\n                  handleOtherNameTwoChange={handleOtherNameTwoChange}\r\n                  handleMaritalStatusChange={handleMaritalStatusChange}\r\n                  handleReligionChange={handleReligionChange}\r\n                  handleEthnicityChange={handleEthnicityChange}\r\n                  handleSexChange={handleSexChange}\r\n                  handleDoBChange={handleDoBChange}\r\n                  handleNationalityChange={handleNationalityChange}>                    \r\n                </UpdateEmployeePIForm>\r\n              </Grid>\r\n\r\n              {/*<Grid item xs={12}>\r\n                <AddEmployeeAddressForm \r\n                  lot={lot}\r\n                  street={street}\r\n                  area={area}\r\n                  village={village}\r\n                  region={region}\r\n                  country={country}\r\n                  handleLotChange={handleLotChange}\r\n                  handleStreetChange={handleStreetChange}\r\n                  handleAreaChange={handleAreaChange}\r\n                  handleVillageChange={handleVillageChange}\r\n                  handleRegionChange={handleRegionChange}\r\n                  handleCountryChange={handleCountryChange}></AddEmployeeAddressForm>\r\n              </Grid>*/}\r\n\r\n              <Grid item xs={12}>\r\n                <UpdateEmployeeContactForm \r\n                  homeNumber={homeNumber}\r\n                  cellNumber={cellNumber}\r\n                  workNumber={workNumber}\r\n                  email={email}\r\n                  handleHomeNumChange={handleHomeNumChange}\r\n                  handleCellNumChange={handleCellNumChange}\r\n                  handleWorkNumChange={handleWorkNumChange}\r\n                  handleEmailChange={handleEmailChange}>\r\n                </UpdateEmployeeContactForm>\r\n              </Grid >\r\n\r\n              <Grid item xs={12}>\r\n                <UpdateEmployeeOfficialInfoForm \r\n                  regimentNumber={regimentNumber}\r\n                  nationalIdNumber={nationalIdNumber}\r\n                  passportNumber={passportNumber}\r\n                  passportExpirationDate={passportExpirationDate}\r\n                  tinNumber={tinNumber}\r\n                  handleRegNumChange={handleRegNumChange}\r\n                  handleNationalIdNumChange={handleNationalIdNumChange}\r\n                  handlePassportNumChange={handlePassportNumChange}\r\n                  handlePassportExpDateChange={handlePassportExpDateChange}\r\n                  handleTinNumChange={handleTinNumChange}>\r\n                </UpdateEmployeeOfficialInfoForm>\r\n              </Grid >\r\n\r\n              <Grid item xs={12}>\r\n                <Button type=\"submit\" onClick={postDataHandler} variant=\"outlined\" color=\"primary\"> Add Employee </Button>\r\n              </Grid >\r\n            </Grid>           \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\axios.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeePIForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeContactForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\UpdateEmployeeComponents\\UpdateEmployeeOfficialInfoForm.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-hrms-frontend\\front-end\\gdf-hrms\\src\\components\\Notification.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":147,"column":23,"nodeType":"143","messageId":"144","endLine":147,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":37,"column":7,"nodeType":"147","messageId":"148","endLine":37,"endColumn":16},{"ruleId":"145","severity":1,"message":"149","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"150","line":3,"column":24,"nodeType":"147","messageId":"148","endLine":3,"endColumn":31},{"ruleId":"145","severity":1,"message":"151","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":18},{"ruleId":"145","severity":1,"message":"152","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":16},{"ruleId":"137","replacedBy":"153"},{"ruleId":"139","replacedBy":"154"},{"ruleId":"145","severity":1,"message":"155","line":11,"column":8,"nodeType":"147","messageId":"148","endLine":11,"endColumn":13},{"ruleId":"145","severity":1,"message":"156","line":38,"column":10,"nodeType":"147","messageId":"148","endLine":38,"endColumn":20},{"ruleId":"145","severity":1,"message":"157","line":39,"column":10,"nodeType":"147","messageId":"148","endLine":39,"endColumn":25},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'selectRow' is assigned a value but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'Divider' is defined but never used.","'Snackbar' is defined but never used.","'MuiAlert' is defined but never used.",["158"],["159"],"'Input' is defined but never used.","'empInfoGet' is assigned a value but never used.","'employeeAddress' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]