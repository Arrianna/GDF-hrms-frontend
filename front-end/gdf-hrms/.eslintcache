[{"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/index.js":"1","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/App.js":"2","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/Layout.js":"3","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryLayout.js":"4","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/searchpage.js":"5","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/ViewCareerHistory.js":"6","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeAddressForm.js":"7","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/Home.js":"8","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileLayout.js":"9","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeInformation.js":"10","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeInformation.js":"11","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryForm.js":"12","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryTable.js":"13","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeContactForm.js":"14","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeOfficialInfoForm.js":"15","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeePIForm.js":"16","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchResultsTable.js":"17","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByRegimentNumberForm.js":"18","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByOtherCriteriaForm.js":"19","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeContactForm.js":"20","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm.js":"21","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeePIForm.js":"22","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/axios.js":"23","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/OfficialInformationForm.js":"24","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/AddressForm.js":"25","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/PersonalInformationForm.js":"26","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/ContactForm.js":"27","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/Notification.js":"28","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/Notification.js":"29","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/Controls/FormComponent.js":"30","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/Controls/DialogComponent.js":"31"},{"size":912,"mtime":1620344620758,"results":"32","hashOfConfig":"33"},{"size":1840,"mtime":1620056238371,"results":"34","hashOfConfig":"33"},{"size":5885,"mtime":1619544659253,"results":"35","hashOfConfig":"33"},{"size":1871,"mtime":1619544659252,"results":"36","hashOfConfig":"33"},{"size":2735,"mtime":1620344620757,"results":"37","hashOfConfig":"33"},{"size":10267,"mtime":1620344897165,"results":"38","hashOfConfig":"33"},{"size":5291,"mtime":1619801134484,"results":"39","hashOfConfig":"33"},{"size":1133,"mtime":1619544659253,"results":"40","hashOfConfig":"33"},{"size":15332,"mtime":1620056238372,"results":"41","hashOfConfig":"33"},{"size":4904,"mtime":1620344620771,"results":"42","hashOfConfig":"33"},{"size":12071,"mtime":1620226531896,"results":"43","hashOfConfig":"33"},{"size":2739,"mtime":1620344620754,"results":"44","hashOfConfig":"33"},{"size":11395,"mtime":1620344897149,"results":"45","hashOfConfig":"33"},{"size":4613,"mtime":1619801134485,"results":"46","hashOfConfig":"33"},{"size":5896,"mtime":1620056238371,"results":"47","hashOfConfig":"33"},{"size":9386,"mtime":1619801134486,"results":"48","hashOfConfig":"33"},{"size":3828,"mtime":1620056238373,"results":"49","hashOfConfig":"33"},{"size":2058,"mtime":1620344620757,"results":"50","hashOfConfig":"33"},{"size":3775,"mtime":1620344620756,"results":"51","hashOfConfig":"33"},{"size":4471,"mtime":1619544659254,"results":"52","hashOfConfig":"33"},{"size":5960,"mtime":1619544659255,"results":"53","hashOfConfig":"33"},{"size":8922,"mtime":1620085331008,"results":"54","hashOfConfig":"33"},{"size":149,"mtime":1619544659255,"results":"55","hashOfConfig":"33"},{"size":2129,"mtime":1619544659253,"results":"56","hashOfConfig":"33"},{"size":3567,"mtime":1620056238372,"results":"57","hashOfConfig":"33"},{"size":3161,"mtime":1619544659253,"results":"58","hashOfConfig":"33"},{"size":1869,"mtime":1619544659252,"results":"59","hashOfConfig":"33"},{"size":961,"mtime":1620056238372,"results":"60","hashOfConfig":"33"},{"size":961,"mtime":1620073988590,"results":"61","hashOfConfig":"33"},{"size":3491,"mtime":1620344620755,"results":"62","hashOfConfig":"33"},{"size":1030,"mtime":1620344620755,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rfj6va",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/index.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/App.js",[],["131","132"],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/Layout.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryLayout.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/searchpage.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/ViewCareerHistory.js",["133","134","135","136","137","138","139","140","141","142","143","144"],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeAddressForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/Home.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileLayout.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeInformation.js",["145","146","147","148"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button } from '@material-ui/core';\nimport axios from 'axios';\nimport AddEmployeePIForm from './AddEmployeeComponents/AddEmployeePIForm';\nimport AddEmployeeAddressForm from './AddEmployeeComponents/AddEmployeeAddressForm';\nimport AddEmployeeContactForm from './AddEmployeeComponents/AddEmployeeContactForm';\nimport AddEmployeeOfficialInfoForm from './AddEmployeeComponents/AddEmployeeOfficialInfoForm';\nimport Notification from './Notification';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  \n   careerButton: {\n     marginLeft: '20px,'\n   }\n\n}));\n\nexport default function AddEmployeeInformation() {\n  const classes = useStyles();\n  const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\n  const [employeeInfo, setEmployeeInfo] = useState({\n    nationalityId: '',\n    religionId: '',\n    ethnicityId: '',\n    maritalStatusId: '',\n    homeNumber: '',\n    cellNumber: '',\n    workNumber: '',\n    email: '',\n    title: '',\n    firstName: '',\n    lastName: '',\n    otherName: '',\n    regimentNumber: '',\n    dateOfBirth: '',\n    sex: '',\n    nationalIdNumber: '',\n    passportNumber: '',\n    passportExpirationDate: '',\n    tinNumber: '',\n    lot: '',\n    street: '',\n    area: '',\n    village: '',\n    region: '',\n    country: '',\n  })\n\n  const handleChange = e => {\n    const {name, value} = e.target;\n    setEmployeeInfo(prevState=>({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  const getNotification = (option) => {\n    if(option.statusText === 'OK'){\n      setNotify({\n        isOpen: true,\n        message: 'Employee Information Successfully Added',\n        type: 'success'\n      })\n    }\n    else{\n      setNotify({\n        isOpen: true,\n        message: 'An error occurred',\n        type: 'error'\n      })\n    }    \n  }\n\n  const postDataHandler = () => {    \n    let Info = {\n      nationalityId: parseInt(employeeInfo.nationalityId, 10),\n      religionId: parseInt(employeeInfo.religionId, 10),\n      ethnicityId: parseInt(employeeInfo.ethnicityId, 10),\n      maritalStatusId: parseInt(employeeInfo.maritalStatusId, 10),\n      homeNumber: parseInt(employeeInfo.homeNumber, 10),\n      cellNumber: parseInt(employeeInfo.cellNumber, 10),\n      workNumber: parseInt(employeeInfo.workNumber, 10),\n      email: employeeInfo.email,\n      title: '',\n      firstName: employeeInfo.firstName,\n      lastName: employeeInfo.lastName,\n      otherName: employeeInfo.otherName,\n      regimentNumber: parseInt(employeeInfo.regimentNumber, 10),\n      dateOfBirth: employeeInfo.dateOfBirth,\n      sex: employeeInfo.sex,\n      nationalIdNumber: parseInt(employeeInfo.nationalIdNumber, 10),\n      passportNumber: employeeInfo.passportNumber,\n      passportExpirationDate: employeeInfo.passportExpirationDate,\n      tinNumber: parseInt(employeeInfo.tinNumber, 10),\n      lot: employeeInfo.lot,\n      street: employeeInfo.street,\n      area: employeeInfo.area,\n      village: employeeInfo.village,\n      region: parseInt(employeeInfo.region, 10),\n      country: parseInt(employeeInfo.country, 10),\n    }\n    if(Info){\n      axios.post('PostInfo/AddAnEmployee', Info)\n      .then(response => getNotification(response))\n      .catch(error => getNotification(error))\n    }    \n  }\n  \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} >\n        <Grid item xs={6}>\n         <h1>Add Employee Information</h1>\n        </Grid>        \n        <Grid container item xs={12} spacing={3}>\n          <div>\n            <Grid container spacing={3}>          \n              <Grid item xs={12}>\n                <AddEmployeePIForm handleChange={handleChange} employeeInfo={employeeInfo}></AddEmployeePIForm>\n              </Grid>\n\n              <Grid item xs={12}>\n                <AddEmployeeAddressForm handleChange={handleChange} employeeInfo={employeeInfo}></AddEmployeeAddressForm>\n              </Grid>\n\n              <Grid item xs={12}>\n                <AddEmployeeContactForm handleChange={handleChange} employeeInfo={employeeInfo}></AddEmployeeContactForm>\n              </Grid >\n\n              <Grid item xs={12}>\n                <AddEmployeeOfficialInfoForm handleChange={handleChange} employeeInfo={employeeInfo}></AddEmployeeOfficialInfoForm>\n              </Grid >\n\n              <Grid item xs={12}>\n                <Button type=\"submit\" onClick={postDataHandler} variant=\"outlined\" color=\"primary\"> Add Employee </Button>\n              </Grid >\n            </Grid>           \n          </div>\n        </Grid>\n      </Grid>\n      <Notification notify={notify} setNotify={setNotify}/>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeInformation.js",["149"],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryForm.js",["150","151","152","153","154"],"\n//FIRST SET OF CODE HERE!!\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { useParams } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'axios';\n\nconst defaultValues = {\n  rank: \"\",\n  department:\"\",\n  \n};\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n    \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function CareerHistoryForm(props) {  \n  const classes = useStyles();\n  \n  function FormRow() {\n    return (\n      <React.Fragment>\n        <div>\n            <Grid item xs={2}>\n            <Grid item xs={2}>\n              <TextField id=\"Rank\" label=\"Rank\" variant=\"outlined\" size=\"small\" />\n              <TextField id=\"Department\" label=\"Department\" variant=\"outlined\" size=\"small\" />\n            </Grid >\n          </Grid> \n        </div>    \n\n        <div>\n           <Grid>\n            <Grid item xs={2} >\n              <TextField id=\"StartDate\" label=\"StartDate\" variant=\"outlined\" InputLabelProps={{ shrink: true,}} size=\"small\" type=\"date\" />\n              <TextField id=\"EndDate\" label=\"EndDate\" variant=\"outlined\" InputLabelProps={{ shrink: true,}} size=\"small\" type=\"date\" />\n            </Grid >\n            <Button type='submit' color='primary'  variant='contained'>Add<SearchIcon /></Button>\n          </Grid> \n        </div>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <h4>Add Career Options </h4>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryTable.js",["155","156","157","158","159","160","161","162"],"import React, { useState, useEffect } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport moment from 'moment';\nimport Edit from '@material-ui/icons/Edit';\nimport Axios from 'axios'; \nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Notification from './Notification';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nimport {Formik,Form,Field, ErrorMessage} from 'formik';\nimport * as Yup  from 'yup';\n\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 1300,\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n\n}));\n\n\n\n\nexport default function CareerHistoryTable(props) {\n\n  const classes = useStyles();\n  const [open,setOpen] = useState(false);\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [newPosition, setNewPosition] = useState();\n  const [newDepartment, setNewDepartment] = useState();\n  const [positions, setPositions] = useState();\n  const [departments, setDepartments] = useState();\n  const [rowId, setRowId] = useState();\n  const [eId, setEId] = useState();\n  const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\n\n  let data = props.data;\n  //console.log(data);\n\n  useEffect(() => {    \n    const getPosition = async () => {\n      const info = await Axios.get(\"GetInfo/GetAllPositions\");\n      if(info.data != null){\n        if(info.data.length > 0){\n          setPositions(info.data);\n        }\n      }\n    };\n   \n    const getDepartment = async () => {\n      const info = await Axios.get(\"GetInfo/GetAllDepartments\");\n      if(info.data != null){\n        if(info.data.length > 0){\n          setDepartments(info.data);\n        }\n      }\n    };\n\n    getPosition();\n    getDepartment();\n  }, []);\n\n  const handlePositionChange = (event) => {\n    setNewPosition(event.target.value);\n  }\n \n  const handleDepartmentChange = (event) => {\n    setNewDepartment(event.target.value);\n  }\n\n  const handleStartDateChange = (event) => {\n    setStartDate(event.target.value);\n  }\n\n  const handleEndDateChange = (event) => {\n    setEndDate(event.target.value);\n  }\n\n  const selectRow = (row)=> {\n    let i;\n    setStartDate(row.startDate);\n    setEndDate(row.endDate);\n\n    \n    departments.map((department) => {\n      if( row.department == department.name){\n       // console.log(row.department + ' vs ' + department.name + ' and ' + department.id)\n        setNewDepartment(department.id);\n      }\n      console.log(newDepartment);\n    }\n    )\n\n    positions.map((position) => {\n      if( row.position == position.name){\n       // console.log(row.department + ' vs ' + department.name + ' and ' + department.id)\n        setNewPosition(position.id);\n      }\n     // console.log(newDepartment);\n    }\n    )\n\n    //setNewPosition(row.position);\n    //setNewDepartment(row.department);\n    setRowId(row.id);\n    setEId(row.eId);\n    setOpen(true);\n    console.log(row.position);\n    console.log('newPosition ' + newPosition)\n  }\n  const initialValues = {\n    newPosition: newPosition\n    \n}\n\n\n\n  const handleClickOpen = () => {    \n    setOpen(true);\n    console.log(open);\n  };\n  \n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const getNotification = (option, notificationType) => {\n    if(notificationType === 'success'){\n   // if(option.statusText === 'OK' || 'No Content'){\n      setNotify({\n        isOpen: true,\n        message: 'Career History Information Successfully Updated',\n        type: 'success'\n      })\n  //  }\n  }\n    if(notificationType == 'error'){\n      setNotify({\n        isOpen: true,\n        message: 'An error was detected',\n        type: 'error'\n      })\n    }\n    }\n  \n\n  const handleSave = () => {\n    let careerHistory = {\n      id: rowId,\n      employeeId: parseInt(eId),\n      positionId: newPosition,\n      departmentId: newDepartment,\n      startDate: startDate,\n      endDate: endDate\n    }\n    \n    if(careerHistory){\n      console.log(careerHistory);\n\n      const patchRequest = async() => {\n      Axios.patch('UpdateInfo/update/employeeCH/' + careerHistory.id, careerHistory)\n      .then(response => getNotification(response, 'success'))\n      .then(response => console.log(response))\n      .catch(error => getNotification(error, 'error')) \n    }\n\n    patchRequest();\n  }\n   // setEmpData([careerHistory, ...empData]);\n   \n    setOpen(false);    \n  };\n\n\n\n  const showResults = () => {\n    if(data!= null) {\n      if(data.length > 0) {  \n        return (\n          \n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell align=\"center\">Position</StyledTableCell>\n                  <StyledTableCell align=\"center\">Department</StyledTableCell>\n                  <StyledTableCell align=\"center\">Start Date</StyledTableCell>\n                  <StyledTableCell align=\"center\">End Date</StyledTableCell>\n                  <StyledTableCell align=\"center\">Action</StyledTableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {data.map((row) => {            \n                  return(\n                    <StyledTableRow key={row.id}>\n                      <StyledTableCell align=\"center\">{row.position}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{row.department}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{moment(row.startDate).format('DD-MM-YYYY')}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{moment(row.endDate).format('DD-MM-YYYY')}</StyledTableCell>\n                      <StyledTableCell align=\"center\">\n                            <Edit className={classes.icon} onClick={() => selectRow(row)}/>\n                          </StyledTableCell>   \n                    </StyledTableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n         \n        );\n      }\n    }\n  }\n\n  const showDialog = () => {\n    const validationSchema = Yup.object().shape({\n      newPosition: Yup.string().required(\"Required\")\n    })\n    console.log(\"working\");\n    if(positions != null && departments != null) {\n      if(positions.length > 0 && departments.length > 0){\n        return(\n          <div className={classes.root}>\n          <Grid container spacing={3}>\n            <Grid item>\n              <React.Fragment>\n                 <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Edit Career History Record</DialogTitle>\n\n                    <DialogContent>\n                    <Formik initialValues={initialValues} validationSchema={validationSchema}>\n                        {(props)=>(\n                           <Form>\n                          <FormControl className={classes.formControl}>\n                          <InputLabel shrink=\"true\" id=\"position-label\">Position</InputLabel>\n                          <Select\n                            labelId=\"position-label\"\n                            id=\"position\"\n                            value={newPosition}\n                            onChange={handlePositionChange}\n                            label=\"Position\"\n                            fullwidth\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            error={props.errors.newPosition && props.touched.newPosition}\n                            helperText={<ErrorMessage newPosition='newPosition' />} required\n                          >\n                            <MenuItem  value=\"\"><em>Select</em></MenuItem>\n                            {positions.map((position) =>\n                              <MenuItem key={position.id} value={position.id}>{position.name}</MenuItem>)}  \n                          </Select>\n                        </FormControl>\n                       <br/> \n                     \n                      <FormControl className={classes.formControl}>\n                      <InputLabel shrink=\"true\" id=\"department-label\">Department</InputLabel>\n                      <Select\n                            labelId=\"department-label\"\n                            id=\"department\"\n                            value={newDepartment}\n                            onChange={handleDepartmentChange}\n                            label=\"Department\"\n                            fullwidth\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            \n                          >\n                           <MenuItem value=\"\"><em>Select</em></MenuItem>\n                              {departments.map((department) =>\n                              <MenuItem key={department.id} value={department.id}>{department.name}</MenuItem>  \n                            )}                         \n                          </Select>\n                              </FormControl> \n                         <br/>\n                        <FormControl className={classes.formControl}>\n                          <InputLabel shrink=\"true\" htmlFor=\"component-simple\">Start Date</InputLabel>\n                          <TextField margin=\"normal\" id=\"startDate\"  type=\"date\" fullWidth variant=\"outlined\" value={moment(startDate).format('YYYY-MM-DD')} onChange={handleStartDateChange}/>\n                        </FormControl>\n                       <br/>\n<<<<<<< HEAD\n                      <FormControl className={classes.formControl}>\n                        <InputLabel shrink=\"true\" htmlFor=\"component-simple\">Start Date</InputLabel>\n                        <TextField margin=\"normal\" id=\"startDate\"  type=\"date\" fullWidth variant=\"outlined\" value={moment(startDate).format('YYYY-MM-DD')} onChange={handleStartDateChange}/>\n                      </FormControl>\n                     <br/>\n                      <FormControl className={classes.formControl}>\n                        <InputLabel shrink=\"true\" htmlFor=\"component-simple\">End Date</InputLabel>\n                        <TextField margin=\"normal\" id=\"EndDate\"  type=\"date\"  fullWidth variant=\"outlined\" value={moment(endDate).format('YYYY-MM-DD')} onChange={handleEndDateChange}/>\n                      </FormControl> \n                    \n=======\n                        <FormControl className={classes.formControl}>\n                          <InputLabel shrink=\"true\" htmlFor=\"component-simple\">End Date</InputLabel>\n                          <TextField margin=\"normal\" id=\"EndDate\"  type=\"date\" format=\"dd-MM-yyyy\" fullWidth variant=\"outlined\" value={moment(endDate).format('YYYY-MM-DD')} onChange={handleEndDateChange}/>\n                        </FormControl> \n                        </Form>\n                        )}\n                     \n                    </Formik>\n\n                      \n>>>>>>> 898a3e73851d14ca21921afac8275d4f5ced2b54\n                    </DialogContent>\n                  \n                    <DialogActions>\n                    <div>\n                      <Button onClick={handleCancel} variant=\"contained\" color=\"primary\">Cancel</Button>\n                    </div>\n                    <div>\n                      <Button onClick={handleSave} variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />}>Save Address</Button>\n                    </div>\n                    </DialogActions>\n                  </Dialog>\n                </React.Fragment>\n               </Grid>\n              </Grid>\n             </div>  \n        )\n      }  \n    }\n  }\n  \n  return (\n    <div>\n      {showResults()}\n      {showDialog()}\n      <Notification notify={notify} setNotify={setNotify}/>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeContactForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeOfficialInfoForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeePIForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchResultsTable.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByRegimentNumberForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByOtherCriteriaForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeContactForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm.js",["163"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n\n  paragraphColor: {\n    color: 'red'\n  }  \n}));\n\nexport default function UpdateEmployeeOfficialInfoForm(props) {\n  const classes = useStyles();\n  const { register, errors } = useForm();\n \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n      <h4>Official Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"regimentalNumber\" label=\"RegimentalNumber\" name=\"regimentalNumber\" InputLabelProps={{ shrink: true,}} value={props.regimentNumber} onChange={props.handleRegNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'required' && (<p className={classes.paragraphColor}>Regiment Number is required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid regiment number</p>)}\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"identificationNumber\" name=\"identificationNumber\" label=\"IdentificationNumber\" InputLabelProps={{ shrink: true,}} value={props.nationalIdNumber} onChange={props.handleNationalIdNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 9, maxLength: 9, type: \"number\", pattern: /^[0-9]+$/i})}/>\n                {errors.identificationNumber && errors.identificationNumber.type === 'required' && (<p className={classes.paragraphColor}>National Identification Number is required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 9 numbers required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 9 numbers required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid ID Number</p>)}\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"passportNumber\" name=\"passportNumber\" label=\"PassportNumber\" InputLabelProps={{ shrink: true,}} value={props.passportNumber} onChange={props.handlePassportNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 8, maxLength: 8, type: \"text\"})}/>\n                {errors.passportNumber && errors.passportNumber.type === 'required' && (<p className={classes.paragraphColor}>Passport Number is required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 8 characters required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 8 characters required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Passport Number</p>)}\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"passportExpirationDate\" name=\"passportExpirationDate\" label=\"Passport Expiration Date\" InputLabelProps={{ shrink: true,}} value={props.passportExpirationDate} onChange={props.handlePassportExpDateChange} variant=\"outlined\" size=\"small\" InputLabelProps={{ shrink: true,}} type=\"date\" inputRef={register({ required: true})}/>\n                {errors.passportExpirationDate && errors.passportExpirationDate.type === 'required' && (<p className={classes.paragraphColor}>Passport Expiration Date is required</p>)}\n              </Grid >\n            </div>    \n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"tinNumber\" name=\"tinNumber\" label=\"TIN Number\" InputLabelProps={{ shrink: true,}} value={props.tinNumber} onChange={props.handleTinNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 9, maxLength: 9, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.tinNumber && errors.tinNumber.type === 'required' && (<p className={classes.paragraphColor}>Tin Number is required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 9 numbers required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 9 numbers required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Tin Number</p>)}\n              </Grid>\n            </div>        \n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeePIForm.js",["164","165"],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/axios.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/OfficialInformationForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/AddressForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/PersonalInformationForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/ContactForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/Notification.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/Notification.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/Controls/FormComponent.js",["166","167","168","169","170","171","172"],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/Controls/DialogComponent.js",["173","174","175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":10,"column":8,"nodeType":"182","messageId":"183","endLine":10,"endColumn":18},{"ruleId":"180","severity":1,"message":"184","line":11,"column":8,"nodeType":"182","messageId":"183","endLine":11,"endColumn":13},{"ruleId":"180","severity":1,"message":"185","line":12,"column":8,"nodeType":"182","messageId":"183","endLine":12,"endColumn":19},{"ruleId":"180","severity":1,"message":"186","line":13,"column":8,"nodeType":"182","messageId":"183","endLine":13,"endColumn":14},{"ruleId":"180","severity":1,"message":"187","line":19,"column":10,"nodeType":"182","messageId":"183","endLine":19,"endColumn":20},{"ruleId":"180","severity":1,"message":"188","line":19,"column":22,"nodeType":"182","messageId":"183","endLine":19,"endColumn":37},{"ruleId":"180","severity":1,"message":"189","line":22,"column":10,"nodeType":"182","messageId":"183","endLine":22,"endColumn":19},{"ruleId":"180","severity":1,"message":"190","line":24,"column":9,"nodeType":"182","messageId":"183","endLine":24,"endColumn":14},{"ruleId":"180","severity":1,"message":"191","line":87,"column":9,"nodeType":"182","messageId":"183","endLine":87,"endColumn":29},{"ruleId":"180","severity":1,"message":"192","line":91,"column":9,"nodeType":"182","messageId":"183","endLine":91,"endColumn":31},{"ruleId":"180","severity":1,"message":"193","line":95,"column":9,"nodeType":"182","messageId":"183","endLine":95,"endColumn":30},{"ruleId":"180","severity":1,"message":"194","line":99,"column":9,"nodeType":"182","messageId":"183","endLine":99,"endColumn":28},{"ruleId":"180","severity":1,"message":"195","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"196","line":3,"column":24,"nodeType":"182","messageId":"183","endLine":3,"endColumn":31},{"ruleId":"180","severity":1,"message":"197","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":18},{"ruleId":"180","severity":1,"message":"198","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":211,"column":25,"nodeType":"201","messageId":"202","endLine":211,"endColumn":27},{"ruleId":"180","severity":1,"message":"203","line":3,"column":17,"nodeType":"182","messageId":"183","endLine":3,"endColumn":25},{"ruleId":"180","severity":1,"message":"204","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"205","line":5,"column":10,"nodeType":"182","messageId":"183","endLine":5,"endColumn":19},{"ruleId":"180","severity":1,"message":"206","line":10,"column":8,"nodeType":"182","messageId":"183","endLine":10,"endColumn":13},{"ruleId":"180","severity":1,"message":"207","line":12,"column":7,"nodeType":"182","messageId":"183","endLine":12,"endColumn":20},{"ruleId":"180","severity":1,"message":"184","line":16,"column":8,"nodeType":"182","messageId":"183","endLine":16,"endColumn":13},{"ruleId":"180","severity":1,"message":"208","line":119,"column":9,"nodeType":"182","messageId":"183","endLine":119,"endColumn":10},{"ruleId":"209","severity":1,"message":"210","line":124,"column":34,"nodeType":"211","messageId":"212","endLine":124,"endColumn":36},{"ruleId":"199","severity":1,"message":"200","line":125,"column":26,"nodeType":"201","messageId":"202","endLine":125,"endColumn":28},{"ruleId":"209","severity":1,"message":"210","line":133,"column":30,"nodeType":"211","messageId":"212","endLine":133,"endColumn":32},{"ruleId":"199","severity":1,"message":"200","line":134,"column":24,"nodeType":"201","messageId":"202","endLine":134,"endColumn":26},{"ruleId":"180","severity":1,"message":"213","line":151,"column":9,"nodeType":"182","messageId":"183","endLine":151,"endColumn":24},{"ruleId":"199","severity":1,"message":"200","line":170,"column":25,"nodeType":"201","messageId":"202","endLine":170,"endColumn":27},{"ruleId":"214","severity":1,"message":"215","line":66,"column":277,"nodeType":"216","endLine":66,"endColumn":311},{"ruleId":"180","severity":1,"message":"206","line":10,"column":8,"nodeType":"182","messageId":"183","endLine":10,"endColumn":13},{"ruleId":"214","severity":1,"message":"215","line":122,"column":184,"nodeType":"216","endLine":122,"endColumn":218},{"ruleId":"180","severity":1,"message":"217","line":2,"column":31,"nodeType":"182","messageId":"183","endLine":2,"endColumn":41},{"ruleId":"180","severity":1,"message":"181","line":2,"column":43,"nodeType":"182","messageId":"183","endLine":2,"endColumn":53},{"ruleId":"180","severity":1,"message":"185","line":8,"column":8,"nodeType":"182","messageId":"183","endLine":8,"endColumn":19},{"ruleId":"180","severity":1,"message":"186","line":9,"column":8,"nodeType":"182","messageId":"183","endLine":9,"endColumn":14},{"ruleId":"180","severity":1,"message":"218","line":10,"column":8,"nodeType":"182","messageId":"183","endLine":10,"endColumn":16},{"ruleId":"180","severity":1,"message":"219","line":16,"column":12,"nodeType":"182","messageId":"183","endLine":16,"endColumn":17},{"ruleId":"180","severity":1,"message":"220","line":16,"column":18,"nodeType":"182","messageId":"183","endLine":16,"endColumn":26},{"ruleId":"180","severity":1,"message":"221","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":25},{"ruleId":"180","severity":1,"message":"222","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":19},{"ruleId":"180","severity":1,"message":"223","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":21},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'InputLabel' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'ErrorSharp' is defined but never used.","'TouchAppRounded' is defined but never used.","'useFormik' is defined but never used.","'Paper' is defined but never used.","'handlePositionChange' is assigned a value but never used.","'handleDepartmentChange' is assigned a value but never used.","'handleStartDateChange' is assigned a value but never used.","'handleEndDateChange' is assigned a value but never used.","'Fragment' is defined but never used.","'Divider' is defined but never used.","'Snackbar' is defined but never used.","'MuiAlert' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'withStyles' is defined but never used.","'useParams' is defined but never used.","'axios' is defined but never used.","'defaultValues' is assigned a value but never used.","'i' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleClickOpen' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Typography' is defined but never used.","'MenuItem' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'DialogActions' is defined but never used.","no-global-assign","no-unsafe-negation"]