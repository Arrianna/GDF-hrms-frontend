[{"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/index.js":"1","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/App.js":"2","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Layout.js":"3","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryLayout.js":"4","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileLayout.js":"5","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Api.js":"6","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/searchpage.js":"7","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SimpleSelect.js":"8","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryTable.js":"9","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryForm.js":"10","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/PersonalInformationForm.js":"11","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/AddressForm.js":"12","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/ContactForm.js":"13","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/OfficialInformationForm.js":"14","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByRegimentNumberForm.js":"15","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByOtherCriteriaForm.js":"16","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchResultsTable.js":"17","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeInformation.js":"18","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeAddressForm.js":"19","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeContactForm.js":"20","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeePIForm.js":"21","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeOfficialInfoForm.js":"22","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Home.js":"23","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/ViewCareerHistory.js":"24","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeInformation.js":"25","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm.js":"26","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeContactForm.js":"27","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeePIForm.js":"28","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/axios.js":"29"},{"size":514,"mtime":1617641554814,"results":"30","hashOfConfig":"31"},{"size":1855,"mtime":1617824451292,"results":"32","hashOfConfig":"31"},{"size":5885,"mtime":1617823728609,"results":"33","hashOfConfig":"31"},{"size":1838,"mtime":1617823728607,"results":"34","hashOfConfig":"31"},{"size":3277,"mtime":1617827054359,"results":"35","hashOfConfig":"31"},{"size":848,"mtime":1616456387198,"results":"36","hashOfConfig":"31"},{"size":2681,"mtime":1617641554813,"results":"37","hashOfConfig":"31"},{"size":1394,"mtime":1615754364967,"results":"38","hashOfConfig":"31"},{"size":2405,"mtime":1617823728607,"results":"39","hashOfConfig":"31"},{"size":1914,"mtime":1617823728606,"results":"40","hashOfConfig":"31"},{"size":2785,"mtime":1617823728608,"results":"41","hashOfConfig":"31"},{"size":5338,"mtime":1617823728607,"results":"42","hashOfConfig":"31"},{"size":1869,"mtime":1617641554811,"results":"43","hashOfConfig":"31"},{"size":2071,"mtime":1617823728608,"results":"44","hashOfConfig":"31"},{"size":2135,"mtime":1617641554812,"results":"45","hashOfConfig":"31"},{"size":2698,"mtime":1617641554812,"results":"46","hashOfConfig":"31"},{"size":3846,"mtime":1617641554813,"results":"47","hashOfConfig":"31"},{"size":8827,"mtime":1617641554810,"results":"48","hashOfConfig":"31"},{"size":6097,"mtime":1617641554809,"results":"49","hashOfConfig":"31"},{"size":4246,"mtime":1617823728606,"results":"50","hashOfConfig":"31"},{"size":6941,"mtime":1617641554810,"results":"51","hashOfConfig":"31"},{"size":5782,"mtime":1617641554810,"results":"52","hashOfConfig":"31"},{"size":1133,"mtime":1617823728608,"results":"53","hashOfConfig":"31"},{"size":1910,"mtime":1617823728607,"results":"54","hashOfConfig":"31"},{"size":9626,"mtime":1617827046442,"results":"55","hashOfConfig":"31"},{"size":5782,"mtime":1617659118505,"results":"56","hashOfConfig":"31"},{"size":4250,"mtime":1617659134264,"results":"57","hashOfConfig":"31"},{"size":6941,"mtime":1617659143011,"results":"58","hashOfConfig":"31"},{"size":140,"mtime":1617659046364,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1oo7nnx",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/index.js",[],["131","132"],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/App.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Layout.js",["133"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport gdfLogo from '../assets/gdfLogo.png';\nimport { HourglassEmptyTwoTone, PersonAddRounded, PersonRounded } from '@material-ui/icons';\n\nconst drawerWidth = 240;\n\nconst hrmsHeader = {\n  color: 'black',\n}\n\nconst gdfStyle = {\n  color: 'green'\n}\n\nconst listMargin = {\n  marginTop: '0px',\n  paddingTop: '0px'\n}\n\nconst gdfLogoStyle = {\n  width: drawerWidth,\n  paddingTop: '0px',\n  height: AppBar.height,\n  marginBottom: '0px'\n}\n\nconst iconMargin = {\n  marginRight: '30px'\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <img src={gdfLogo} alt=\"Logo\" style = {gdfLogoStyle} />;\n      <div className={classes.toolbar} />\n      {/*<Divider />*/}\n      <List>        \n        <ListItem button><PersonAddRounded style={iconMargin}/><ListItemText primary='Add Employee'/></ListItem>\n        <ListItem button><HourglassEmptyTwoTone style={iconMargin}/><Link to=\"/employeehistory\" color=\"primary\" variant=\"body2\" underline=\"none\"><ListItemText primary='Employee History'/></Link></ListItem>\n        <ListItem button><SearchIcon style={iconMargin}/><Link to='/search-page' color=\"primary\" variant=\"body2\" underline='none'><ListItemText primary='Employee Search'/></Link></ListItem>\n        <ListItem button><PersonRounded style={iconMargin}/><Link to=\"/\" color=\"primary\" variant=\"body2\" underline='none'><ListItemText primary='Employee Profile'/></Link></ListItem>\n      </List>\n      <Divider />\n      <List>\n        {['Something Else', 'More', 'Something More'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <HourglassEmptyTwoTone /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar} color='white'>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography>\n            <Typography variant=\"h4\" noWrap style={gdfStyle}>GUYANA DEFENCE FORCE</Typography>\n            <Typography variant=\"h5\" style = {hrmsHeader} noWrap>Human Resources Management System</Typography>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}        \n      </main>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryLayout.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileLayout.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Api.js",[],["134","135"],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/searchpage.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SimpleSelect.js",["136"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n\n  formControl: {\n    margin: theme.spacing(1),\n    width: '25ch',\n    //minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\n    \n\nexport default function SimpleSelect(props) {\n  const classes = useStyles();\n  const [selectValue, setSelectValue] = React.useState('');\n\n  const handleChange = (event) => {\n    setSelectValue(event.target.value);\n  };\n\n const selectOption = (option) => {\n     return option.map((options) => <MenuItem>{options}</MenuItem>);\n }\n  \n  return (\n    <div>\n      <FormControl variant = \"outlined\" size=\"small\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\" > {props.selectLabel} </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={selectValue}\n          onChange={handleChange}\n          \n        >\n\n        <selectOption option={props.option}></selectOption>\n          \n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",["137","138"],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryTable.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/PersonalInformationForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/AddressForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/ContactForm.js",["139","140","141"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SimpleSelect from '../SimpleSelect';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function ContactForm({employeePI}) {\n  const classes = useStyles();\n  const SexOption = [\"Male\",\"Female\"];\n  function FormRow() {\n    return (\n      <React.Fragment>\n        <div>\n            <Grid item xs={2}>\n            <TextField id=\"HomeNumber\" label=\"Home Number\" variant=\"outlined\" size=\"small\" value={employeePI.cId} />\n            </Grid>\n        </div>\n        <div>\n            <Grid item xs={2}>\n                <TextField id=\"CellNumber\" label=\"Cell Number\" variant=\"outlined\" size=\"small\" />\n            </Grid>\n        </div>\n        <div>   \n            <Grid item xs={2}>\n            <TextField id=\"WorkNumber\" label=\"Work Number\" variant=\"outlined\" size=\"small\" />\n            </Grid >\n         </div>\n         <div>\n            <Grid item xs={2}>\n            <TextField id=\"Email\" label=\"Email\" variant=\"outlined\" size=\"small\" />\n            </Grid >\n        </div>    \n      </React.Fragment>\n      \n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n      <h4>Contact Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/OfficialInformationForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByRegimentNumberForm.js",["142"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { TextField } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useForm } from 'react-hook-form';\nimport Api from '../Api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: theme.spacing(5),    \n  },\n    \n  cardcontents: {        \n    flex: 1,\n    float: 'left',\n    margin: theme.spacing(5),        \n  },\n\n  paragraphColor: {\n    color: 'red'\n  }\n}));\n\nexport default function SearchByRegimentNumberForm(props) {\n\n  const classes = useStyles();\n\n  const { register, handleSubmit, errors } = useForm();\n  \n    \n  return (    \n    <React.Fragment>\n      <div>\n        <Card>\n          <CardContent className={classes.cardcontents}>          \n            <form className={classes.form} align='center' onSubmit={handleSubmit(props.onSubmit)}>\n              <TextField name='regNum' label='Regiment Number' variant='outlined' margin='normal' defaultValue={''} inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n              {errors.regNum && errors.regNum.type === 'required' && (<p className={classes.paragraphColor}>Regiment Number is required</p>)}\n              {errors.regNum && errors.regNum.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n              {errors.regNum && errors.regNum.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n              {errors.regNum && errors.regNum.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid regiment number</p>)}\n              <br />\n              <Button type='submit' color='primary' variant='contained'>Search<SearchIcon /></Button>               \n            </form>\n          </CardContent>        \n        </Card>\n      </div>\n    </React.Fragment>    \n  );\n}","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByOtherCriteriaForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchResultsTable.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeInformation.js",["143","144","145"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport AddEmployeePIForm from './AddEmployeeComponents/AddEmployeePIForm';\nimport AddEmployeeAddressForm from './AddEmployeeComponents/AddEmployeeAddressForm';\nimport AddEmployeeContactForm from './AddEmployeeComponents/AddEmployeeContactForm';\nimport AddEmployeeOfficialInfoForm from './AddEmployeeComponents/AddEmployeeOfficialInfoForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  \n   careerButton: {\n     marginLeft: '20px,'\n   }\n\n}));\n\nexport default function AddEmployeeInformation() {\n  const classes = useStyles();  \n  const [employeeInfo, setEmployeeInfo] = useState({});\n  \n  // AddEmployeePIForm INFORMATION\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [otherName, setOtherName] = useState('');\n  const [otherNameTwo, setOtherNameTwo] = useState('');\n  const [maritalStatus, setMaritalStatus] = useState('');\n  const [religion, setReligion] = useState('');\n  const [ethnicity, setEthnicity] = useState('');\n  const [sex, setSex] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState('');\n  const [nationality, setNationality] = useState('');\n\n  const handleFirstNameChange = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const handleLastNameChange = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const handleOtherNameChange = (event) => {\n    setOtherName(event.target.value);\n  };\n\n  const handleOtherNameTwoChange = (event) => {\n    setOtherNameTwo(event.target.value);\n  };\n\n  const handleMaritalStatusChange = (event) => {\n    setMaritalStatus(event.target.value);\n  };\n\n  const handleReligionChange = (event) => {\n    setReligion(event.target.value);\n  };\n\n  const handleEthnicityChange = (event) => {\n    setEthnicity(event.target.value);\n  };\n\n  // DON'T LAUGH TOO MUCH, YOU MIGHT POP A VEIN\n  const handleSexChange = (event) => {\n    setSex(event.target.value);\n  }\n\n  const handleDoBChange = (event) => {\n    setDateOfBirth(event.target.value);\n  }\n\n  const handleNationalityChange = (event) => {\n    setNationality(event.target.value);\n  }\n\n  // AddEmployeeAddressForm Information  \n  const [lot, setLot] = useState();\n  const [street, setStreet] = useState();\n  const [area, setArea] = useState();\n  const [village, setVillage] = useState();\n  const [region, setRegion] = useState('');\n  const [country, setCountry] = useState('');\n\n  const handleLotChange = (event) => {\n    setLot(event.target.value);\n  };\n\n  const handleStreetChange = (event) => {\n    setStreet(event.target.value);\n  };\n\n  const handleAreaChange = (event) => {\n    setArea(event.target.value);\n  };\n\n  const handleVillageChange = (event) => {\n    setVillage(event.target.value);\n  };\n\n  const handleRegionChange = (event) => {\n    setRegion(event.target.value);\n  };\n\n  const handleCountryChange = (event) => {    \n    setCountry(event.target.value);\n  };\n\n  // AddEmployeeContactForm Information\n  const [homeNumber, setHomeNumber] = useState();\n  const [cellNumber, setCellNumber] = useState();\n  const [workNumber, setWorkNumber] = useState();\n  const [email, setEmail] = useState();\n\n  const handleHomeNumChange = (event) => {    \n    setHomeNumber(event);\n  }\n\n  const handleCellNumChange = (event) => {    \n    setCellNumber(event);\n  }\n\n  const handleWorkNumChange = (event) => {    \n    setWorkNumber(event); \n  }\n\n  const handleEmailChange = (event) => {\n    setEmail(event);\n  }\n\n  // AddEmployeeOfficialInfoForm Information\n  const [regimentNumber, setRegimentNumber] = useState();\n  const [nationalIdNumber, setNationalIdNumber] = useState();\n  const [passportNumber, setPassportNumber] = useState();\n  const [passportExpirationDate, setPassportExpirationDate] = useState();\n  const [tinNumber, setTinNumber] = useState();\n\n  const handleRegNumChange = (event) => {    \n    setRegimentNumber(event);\n  }\n\n  const handleNationalIdNumChange = (event) => {    \n    setNationalIdNumber(event);\n  }\n\n  const handlePassportNumChange = (event) => {    \n    setPassportNumber(event); \n  }\n\n  const handlePassportExpDateChange = (event) => {\n    setPassportExpirationDate(event);\n  }\n\n  const handleTinNumChange = (event) => {\n    setTinNumber(event);\n  }\n\n /* employeeInfo = {\n      nationalityId: 0,\n      religionId: 0,\n      ethnicityId: 0,\n      maritalStatusId: 0,\n      positionId: 0,\n      countryId: 0,\n      regionId: 0,\n      homeNumber: 0,\n      cellNumber: 0,\n      workNumber: 0,\n      email: '',\n      addressLot: '',\n      addressStreet: '',\n      addressArea: \"\",\n      addressVillage: '',\n      title: '',\n      firstName: '',\n      lastName: '',\n      otherName: '',\n      regimentNumber: 0,\n      dateOfBirth: '',\n      sex: '',\n      nationalIdNumber: 0,\n      passportNumber: '',\n      passportExpirationDate: '',\n      tinNumber: 0\n  }\n  */\n  \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} >\n        <Grid item xs={6}>\n         <h1>Add Employee Profile</h1>\n        </Grid>\n        <Grid item xs={6}>\n          <h1>\n            <Button variant=\"outlined\" color=\"primary\">\n            <Link to={'/employee-history/'}>View Career History</Link>\n            </Button>\n          </h1>\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <div>\n            <Grid container spacing={3}>          \n              <Grid item xs={12}>\n                <AddEmployeePIForm \n                  firstName={firstName}\n                  lastName={lastName}\n                  otherName={otherName}\n                  otherNameTwo={otherNameTwo}\n                  maritalStatus={maritalStatus} \n                  religion={religion}\n                  ethnicity={ethnicity}\n                  sex={sex}\n                  dateOfBirth={dateOfBirth}\n                  nationality={nationality}\n                  handleFirstNameChange={handleFirstNameChange}\n                  handleLastNameChange={handleLastNameChange}\n                  handleOtherNameChange={handleOtherNameChange}\n                  handleOtherNameTwoChange={handleOtherNameTwoChange}\n                  handleMaritalStatusChange={handleMaritalStatusChange}\n                  handleReligionChange={handleReligionChange}\n                  handleEthnicityChange={handleEthnicityChange}\n                  handleSexChange={handleSexChange}\n                  handleDoBChange={handleDoBChange}\n                  handleNationalityChange={handleNationalityChange}></AddEmployeePIForm>\n              </Grid>\n\n              <Grid item xs={12}>\n                <AddEmployeeAddressForm \n                  lot={lot}\n                  street={street}\n                  area={area}\n                  village={village}\n                  region={region}\n                  country={country}\n                  handleLotChange={handleLotChange}\n                  handleStreetChange={handleStreetChange}\n                  handleAreaChange={handleAreaChange}\n                  handleVillageChange={handleVillageChange}\n                  handleRegionChange={handleRegionChange}\n                  handleCountryChange={handleCountryChange}></AddEmployeeAddressForm>\n              </Grid>\n\n              <Grid item xs={12}>\n                <AddEmployeeContactForm \n                  homeNumber={homeNumber}\n                  cellNumber={cellNumber}\n                  workNumber={workNumber}\n                  email={email}\n                  handleHomeNumChange={handleHomeNumChange}\n                  handleCellNumChange={handleCellNumChange}\n                  handleWorkNumChange={handleWorkNumChange}\n                  handleEmailChange={handleEmailChange}></AddEmployeeContactForm>\n              </Grid >\n\n              <Grid item xs={12}>\n                <AddEmployeeOfficialInfoForm \n                  regimentNumber={regimentNumber}\n                  nationalIdNumber={nationalIdNumber}\n                  passportNumber={passportNumber}\n                  passportExpirationDate={passportExpirationDate}\n                  tinNumber={tinNumber}\n                  handleRegNumChange={handleRegNumChange}\n                  handleNationalIdNumChange={handleNationalIdNumChange}\n                  handlePassportNumChange={handlePassportNumChange}\n                  handlePassportExpDateChange={handlePassportExpDateChange}\n                  handleTinNumChange={handleTinNumChange}></AddEmployeeOfficialInfoForm>\n              </Grid >\n\n              <Grid item xs={12}>\n                <Button type=\"submit\" variant=\"outlined\" color=\"primary\"> Add Employee </Button>\n              </Grid >\n            </Grid>           \n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeAddressForm.js",["146"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n//import { CountryDropdown } from 'react-country-region-selector';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n        .toUpperCase()\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function AddEmployeeAddressForm(props) {  \n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <h4>Address </h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField name=\"addressLot\" label=\"Lot\" value={props.lot} onChange={props.handleLotChange} variant=\"outlined\" size=\"small\" />\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField name=\"addressStreet\" label=\"Street\" value={props.street} onChange={props.handleStreetChange} variant=\"outlined\" size=\"small\" />\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField id=\"Area/Section\" label=\"Area/Section\" value={props.area} onChange={props.handleAreaChange} variant=\"outlined\" size=\"small\" />\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField name=\"addressVillage\" label=\"Village\" value={props.village} onChange={props.handleVillageChange} variant=\"outlined\" size=\"small\" />\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"region-label\">Region</InputLabel>\n                  <Select\n                    labelId=\"region-label\"\n                    id=\"region\"\n                    value={props.region}\n                    onChange={props.handleRegionChange}\n                    label=\"Region\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>1 (Barima-Waini)</MenuItem>\n                    <MenuItem value={2}>2 (Pomeroon-Supenaam)</MenuItem>\n                    <MenuItem value={3}>3 (Essequibo Islands-West Demerara)</MenuItem>\n                    <MenuItem value={4}>4 (Demerara-Mahaica)</MenuItem>\n                    <MenuItem value={5}>5 (Mahaica-Berbice)</MenuItem>\n                    <MenuItem value={6}>6 (East Berbice-Corentyne)</MenuItem>\n                    <MenuItem value={7}>7 (Cuyuni-Mazaruni)</MenuItem>\n                    <MenuItem value={8}>8 (Potaro-Siparuni)</MenuItem>\n                    <MenuItem value={9}>9 (Upper Takutu-Upper Essequibo)</MenuItem>\n                    <MenuItem value={10}>10 (Upper Demerara-Upper Berbice)</MenuItem>              \n                  </Select>\n                </FormControl>\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                {/* <TextField id=\"Country\" label=\"Country\" variant=\"outlined\" size=\"small\" /> */}\n                {/*<CountryDropdown value={country} onChange={handleCountryChange} />*/}\n                <Autocomplete\n                  id=\"country-select-demo\"\n                  style={{ width: 300 }}\n                  options={countries}\n                  classes={{\n                    option: classes.option,\n                  }}\n                  autoHighlight\n                  getOptionLabel={(option) => option.label}\n                  renderOption={(option) => (\n                    <React.Fragment>\n                      <span>{countryToFlag(option.code)}</span>\n                      {option.label} {/*({option.code}) +{option.phone}*/}\n                    </React.Fragment>\n                  )}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Country\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={props.handleCountryChange}\n                      value={props.country}\n                      inputProps={{\n                        ...params.inputProps,\n                        autoComplete: 'new-password', // disable autocomplete and autofill\n                      }}\n                    />\n                  )}\n                />\n              </Grid >\n            </div>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst countries = [\n  { code: 'AD', label: 'Andorra', phone: '376' },\n  { code: 'AE', label: 'United Arab Emirates', phone: '971' },\n  { code: 'AF', label: 'Afghanistan', phone: '93' },\n  { code: 'AG', label: 'Antigua and Barbuda', phone: '1-268' },\n  { code: 'AI', label: 'Anguilla', phone: '1-264' },\n  { code: 'AL', label: 'Albania', phone: '355' },\n  { code: 'AM', label: 'Armenia', phone: '374' },\n  { code: 'AO', label: 'Angola', phone: '244' },\n  { code: 'AQ', label: 'Antarctica', phone: '672' },\n  { code: 'AR', label: 'Argentina', phone: '54' },\n  { code: 'AS', label: 'American Samoa', phone: '1-684' },\n  { code: 'AT', label: 'Austria', phone: '43' },\n  { code: 'AU', label: 'Australia', phone: '61', suggested: true },\n  { code: 'AW', label: 'Aruba', phone: '297' },\n  { code: 'AX', label: 'Alland Islands', phone: '358' },\n  { code: 'AZ', label: 'Azerbaijan', phone: '994' },\n  { code: 'BA', label: 'Bosnia and Herzegovina', phone: '387' },\n  { code: 'BB', label: 'Barbados', phone: '1-246' },\n  { code: 'BD', label: 'Bangladesh', phone: '880' },\n  { code: 'BE', label: 'Belgium', phone: '32' },\n  { code: 'BF', label: 'Burkina Faso', phone: '226' },\n  { code: 'BG', label: 'Bulgaria', phone: '359' },\n  { code: 'BH', label: 'Bahrain', phone: '973' },\n  { code: 'BI', label: 'Burundi', phone: '257' },\n  { code: 'BJ', label: 'Benin', phone: '229' },\n  { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\n  { code: 'BM', label: 'Bermuda', phone: '1-441' },\n  { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\n  { code: 'BO', label: 'Bolivia', phone: '591' },\n  { code: 'BR', label: 'Brazil', phone: '55' },\n  { code: 'BS', label: 'Bahamas', phone: '1-242' },\n  { code: 'BT', label: 'Bhutan', phone: '975' },\n  { code: 'BV', label: 'Bouvet Island', phone: '47' },\n  { code: 'BW', label: 'Botswana', phone: '267' },\n  { code: 'BY', label: 'Belarus', phone: '375' },\n  { code: 'BZ', label: 'Belize', phone: '501' },\n  { code: 'CA', label: 'Canada', phone: '1', suggested: true },\n  { code: 'CC', label: 'Cocos (Keeling) Islands', phone: '61' },\n  { code: 'CD', label: 'Congo, Democratic Republic of the', phone: '243' },\n  { code: 'CF', label: 'Central African Republic', phone: '236' },\n  { code: 'CG', label: 'Congo, Republic of the', phone: '242' },\n  { code: 'CH', label: 'Switzerland', phone: '41' },\n  { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\n  { code: 'CK', label: 'Cook Islands', phone: '682' },\n  { code: 'CL', label: 'Chile', phone: '56' },\n  { code: 'CM', label: 'Cameroon', phone: '237' },\n  { code: 'CN', label: 'China', phone: '86' },\n  { code: 'CO', label: 'Colombia', phone: '57' },\n  { code: 'CR', label: 'Costa Rica', phone: '506' },\n  { code: 'CU', label: 'Cuba', phone: '53' },\n  { code: 'CV', label: 'Cape Verde', phone: '238' },\n  { code: 'CW', label: 'Curacao', phone: '599' },\n  { code: 'CX', label: 'Christmas Island', phone: '61' },\n  { code: 'CY', label: 'Cyprus', phone: '357' },\n  { code: 'CZ', label: 'Czech Republic', phone: '420' },\n  { code: 'DE', label: 'Germany', phone: '49', suggested: true },\n  { code: 'DJ', label: 'Djibouti', phone: '253' },\n  { code: 'DK', label: 'Denmark', phone: '45' },\n  { code: 'DM', label: 'Dominica', phone: '1-767' },\n  { code: 'DO', label: 'Dominican Republic', phone: '1-809' },\n  { code: 'DZ', label: 'Algeria', phone: '213' },\n  { code: 'EC', label: 'Ecuador', phone: '593' },\n  { code: 'EE', label: 'Estonia', phone: '372' },\n  { code: 'EG', label: 'Egypt', phone: '20' },\n  { code: 'EH', label: 'Western Sahara', phone: '212' },\n  { code: 'ER', label: 'Eritrea', phone: '291' },\n  { code: 'ES', label: 'Spain', phone: '34' },\n  { code: 'ET', label: 'Ethiopia', phone: '251' },\n  { code: 'FI', label: 'Finland', phone: '358' },\n  { code: 'FJ', label: 'Fiji', phone: '679' },\n  { code: 'FK', label: 'Falkland Islands (Malvinas)', phone: '500' },\n  { code: 'FM', label: 'Micronesia, Federated States of', phone: '691' },\n  { code: 'FO', label: 'Faroe Islands', phone: '298' },\n  { code: 'FR', label: 'France', phone: '33', suggested: true },\n  { code: 'GA', label: 'Gabon', phone: '241' },\n  { code: 'GB', label: 'United Kingdom', phone: '44' },\n  { code: 'GD', label: 'Grenada', phone: '1-473' },\n  { code: 'GE', label: 'Georgia', phone: '995' },\n  { code: 'GF', label: 'French Guiana', phone: '594' },\n  { code: 'GG', label: 'Guernsey', phone: '44' },\n  { code: 'GH', label: 'Ghana', phone: '233' },\n  { code: 'GI', label: 'Gibraltar', phone: '350' },\n  { code: 'GL', label: 'Greenland', phone: '299' },\n  { code: 'GM', label: 'Gambia', phone: '220' },\n  { code: 'GN', label: 'Guinea', phone: '224' },\n  { code: 'GP', label: 'Guadeloupe', phone: '590' },\n  { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\n  { code: 'GR', label: 'Greece', phone: '30' },\n  { code: 'GS', label: 'South Georgia and the South Sandwich Islands', phone: '500' },\n  { code: 'GT', label: 'Guatemala', phone: '502' },\n  { code: 'GU', label: 'Guam', phone: '1-671' },\n  { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\n  { code: 'GY', label: 'Guyana', phone: '592' },\n  { code: 'HK', label: 'Hong Kong', phone: '852' },\n  { code: 'HM', label: 'Heard Island and McDonald Islands', phone: '672' },\n  { code: 'HN', label: 'Honduras', phone: '504' },\n  { code: 'HR', label: 'Croatia', phone: '385' },\n  { code: 'HT', label: 'Haiti', phone: '509' },\n  { code: 'HU', label: 'Hungary', phone: '36' },\n  { code: 'ID', label: 'Indonesia', phone: '62' },\n  { code: 'IE', label: 'Ireland', phone: '353' },\n  { code: 'IL', label: 'Israel', phone: '972' },\n  { code: 'IM', label: 'Isle of Man', phone: '44' },\n  { code: 'IN', label: 'India', phone: '91' },\n  { code: 'IO', label: 'British Indian Ocean Territory', phone: '246' },\n  { code: 'IQ', label: 'Iraq', phone: '964' },\n  { code: 'IR', label: 'Iran, Islamic Republic of', phone: '98' },\n  { code: 'IS', label: 'Iceland', phone: '354' },\n  { code: 'IT', label: 'Italy', phone: '39' },\n  { code: 'JE', label: 'Jersey', phone: '44' },\n  { code: 'JM', label: 'Jamaica', phone: '1-876' },\n  { code: 'JO', label: 'Jordan', phone: '962' },\n  { code: 'JP', label: 'Japan', phone: '81', suggested: true },\n  { code: 'KE', label: 'Kenya', phone: '254' },\n  { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\n  { code: 'KH', label: 'Cambodia', phone: '855' },\n  { code: 'KI', label: 'Kiribati', phone: '686' },\n  { code: 'KM', label: 'Comoros', phone: '269' },\n  { code: 'KN', label: 'Saint Kitts and Nevis', phone: '1-869' },\n  { code: 'KP', label: \"Korea, Democratic People's Republic of\", phone: '850' },\n  { code: 'KR', label: 'Korea, Republic of', phone: '82' },\n  { code: 'KW', label: 'Kuwait', phone: '965' },\n  { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\n  { code: 'KZ', label: 'Kazakhstan', phone: '7' },\n  { code: 'LA', label: \"Lao People's Democratic Republic\", phone: '856' },\n  { code: 'LB', label: 'Lebanon', phone: '961' },\n  { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\n  { code: 'LI', label: 'Liechtenstein', phone: '423' },\n  { code: 'LK', label: 'Sri Lanka', phone: '94' },\n  { code: 'LR', label: 'Liberia', phone: '231' },\n  { code: 'LS', label: 'Lesotho', phone: '266' },\n  { code: 'LT', label: 'Lithuania', phone: '370' },\n  { code: 'LU', label: 'Luxembourg', phone: '352' },\n  { code: 'LV', label: 'Latvia', phone: '371' },\n  { code: 'LY', label: 'Libya', phone: '218' },\n  { code: 'MA', label: 'Morocco', phone: '212' },\n  { code: 'MC', label: 'Monaco', phone: '377' },\n  { code: 'MD', label: 'Moldova, Republic of', phone: '373' },\n  { code: 'ME', label: 'Montenegro', phone: '382' },\n  { code: 'MF', label: 'Saint Martin (French part)', phone: '590' },\n  { code: 'MG', label: 'Madagascar', phone: '261' },\n  { code: 'MH', label: 'Marshall Islands', phone: '692' },\n  { code: 'MK', label: 'Macedonia, the Former Yugoslav Republic of', phone: '389' },\n  { code: 'ML', label: 'Mali', phone: '223' },\n  { code: 'MM', label: 'Myanmar', phone: '95' },\n  { code: 'MN', label: 'Mongolia', phone: '976' },\n  { code: 'MO', label: 'Macao', phone: '853' },\n  { code: 'MP', label: 'Northern Mariana Islands', phone: '1-670' },\n  { code: 'MQ', label: 'Martinique', phone: '596' },\n  { code: 'MR', label: 'Mauritania', phone: '222' },\n  { code: 'MS', label: 'Montserrat', phone: '1-664' },\n  { code: 'MT', label: 'Malta', phone: '356' },\n  { code: 'MU', label: 'Mauritius', phone: '230' },\n  { code: 'MV', label: 'Maldives', phone: '960' },\n  { code: 'MW', label: 'Malawi', phone: '265' },\n  { code: 'MX', label: 'Mexico', phone: '52' },\n  { code: 'MY', label: 'Malaysia', phone: '60' },\n  { code: 'MZ', label: 'Mozambique', phone: '258' },\n  { code: 'NA', label: 'Namibia', phone: '264' },\n  { code: 'NC', label: 'New Caledonia', phone: '687' },\n  { code: 'NE', label: 'Niger', phone: '227' },\n  { code: 'NF', label: 'Norfolk Island', phone: '672' },\n  { code: 'NG', label: 'Nigeria', phone: '234' },\n  { code: 'NI', label: 'Nicaragua', phone: '505' },\n  { code: 'NL', label: 'Netherlands', phone: '31' },\n  { code: 'NO', label: 'Norway', phone: '47' },\n  { code: 'NP', label: 'Nepal', phone: '977' },\n  { code: 'NR', label: 'Nauru', phone: '674' },\n  { code: 'NU', label: 'Niue', phone: '683' },\n  { code: 'NZ', label: 'New Zealand', phone: '64' },\n  { code: 'OM', label: 'Oman', phone: '968' },\n  { code: 'PA', label: 'Panama', phone: '507' },\n  { code: 'PE', label: 'Peru', phone: '51' },\n  { code: 'PF', label: 'French Polynesia', phone: '689' },\n  { code: 'PG', label: 'Papua New Guinea', phone: '675' },\n  { code: 'PH', label: 'Philippines', phone: '63' },\n  { code: 'PK', label: 'Pakistan', phone: '92' },\n  { code: 'PL', label: 'Poland', phone: '48' },\n  { code: 'PM', label: 'Saint Pierre and Miquelon', phone: '508' },\n  { code: 'PN', label: 'Pitcairn', phone: '870' },\n  { code: 'PR', label: 'Puerto Rico', phone: '1' },\n  { code: 'PS', label: 'Palestine, State of', phone: '970' },\n  { code: 'PT', label: 'Portugal', phone: '351' },\n  { code: 'PW', label: 'Palau', phone: '680' },\n  { code: 'PY', label: 'Paraguay', phone: '595' },\n  { code: 'QA', label: 'Qatar', phone: '974' },\n  { code: 'RE', label: 'Reunion', phone: '262' },\n  { code: 'RO', label: 'Romania', phone: '40' },\n  { code: 'RS', label: 'Serbia', phone: '381' },\n  { code: 'RU', label: 'Russian Federation', phone: '7' },\n  { code: 'RW', label: 'Rwanda', phone: '250' },\n  { code: 'SA', label: 'Saudi Arabia', phone: '966' },\n  { code: 'SB', label: 'Solomon Islands', phone: '677' },\n  { code: 'SC', label: 'Seychelles', phone: '248' },\n  { code: 'SD', label: 'Sudan', phone: '249' },\n  { code: 'SE', label: 'Sweden', phone: '46' },\n  { code: 'SG', label: 'Singapore', phone: '65' },\n  { code: 'SH', label: 'Saint Helena', phone: '290' },\n  { code: 'SI', label: 'Slovenia', phone: '386' },\n  { code: 'SJ', label: 'Svalbard and Jan Mayen', phone: '47' },\n  { code: 'SK', label: 'Slovakia', phone: '421' },\n  { code: 'SL', label: 'Sierra Leone', phone: '232' },\n  { code: 'SM', label: 'San Marino', phone: '378' },\n  { code: 'SN', label: 'Senegal', phone: '221' },\n  { code: 'SO', label: 'Somalia', phone: '252' },\n  { code: 'SR', label: 'Suriname', phone: '597' },\n  { code: 'SS', label: 'South Sudan', phone: '211' },\n  { code: 'ST', label: 'Sao Tome and Principe', phone: '239' },\n  { code: 'SV', label: 'El Salvador', phone: '503' },\n  { code: 'SX', label: 'Sint Maarten (Dutch part)', phone: '1-721' },\n  { code: 'SY', label: 'Syrian Arab Republic', phone: '963' },\n  { code: 'SZ', label: 'Swaziland', phone: '268' },\n  { code: 'TC', label: 'Turks and Caicos Islands', phone: '1-649' },\n  { code: 'TD', label: 'Chad', phone: '235' },\n  { code: 'TF', label: 'French Southern Territories', phone: '262' },\n  { code: 'TG', label: 'Togo', phone: '228' },\n  { code: 'TH', label: 'Thailand', phone: '66' },\n  { code: 'TJ', label: 'Tajikistan', phone: '992' },\n  { code: 'TK', label: 'Tokelau', phone: '690' },\n  { code: 'TL', label: 'Timor-Leste', phone: '670' },\n  { code: 'TM', label: 'Turkmenistan', phone: '993' },\n  { code: 'TN', label: 'Tunisia', phone: '216' },\n  { code: 'TO', label: 'Tonga', phone: '676' },\n  { code: 'TR', label: 'Turkey', phone: '90' },\n  { code: 'TT', label: 'Trinidad and Tobago', phone: '1-868' },\n  { code: 'TV', label: 'Tuvalu', phone: '688' },\n  { code: 'TW', label: 'Taiwan, Province of China', phone: '886' },\n  { code: 'TZ', label: 'United Republic of Tanzania', phone: '255' },\n  { code: 'UA', label: 'Ukraine', phone: '380' },\n  { code: 'UG', label: 'Uganda', phone: '256' },\n  { code: 'US', label: 'United States', phone: '1', suggested: true },\n  { code: 'UY', label: 'Uruguay', phone: '598' },\n  { code: 'UZ', label: 'Uzbekistan', phone: '998' },\n  { code: 'VA', label: 'Holy See (Vatican City State)', phone: '379' },\n  { code: 'VC', label: 'Saint Vincent and the Grenadines', phone: '1-784' },\n  { code: 'VE', label: 'Venezuela', phone: '58' },\n  { code: 'VG', label: 'British Virgin Islands', phone: '1-284' },\n  { code: 'VI', label: 'US Virgin Islands', phone: '1-340' },\n  { code: 'VN', label: 'Vietnam', phone: '84' },\n  { code: 'VU', label: 'Vanuatu', phone: '678' },\n  { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\n  { code: 'WS', label: 'Samoa', phone: '685' },\n  { code: 'XK', label: 'Kosovo', phone: '383' },\n  { code: 'YE', label: 'Yemen', phone: '967' },\n  { code: 'YT', label: 'Mayotte', phone: '262' },\n  { code: 'ZA', label: 'South Africa', phone: '27' },\n  { code: 'ZM', label: 'Zambia', phone: '260' },\n  { code: 'ZW', label: 'Zimbabwe', phone: '263' },\n];","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeContactForm.js",["147","148"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MailIcon from '@material-ui/icons/Mail';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\nimport CallIcon from '@material-ui/icons/Call';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n//import PhoneInput from 'mui-phone-input';\n//import ReactPhoneInput from 'react-phone-input-mui';\nimport MuiPhoneNumber from 'material-ui-phone-number';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n\n  field: {\n    margin: '10px 0',\n  },\n\n  countryList: {\n    ...theme.typography.body1,\n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function AddEmployeeContactForm(props) {\n  const classes = useStyles();  \n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n      <h4>Contact Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                {/*<TextField \n                  id=\"HomeNumber\" \n                  label=\"Home Number\" \n                  variant=\"outlined\" \n                  size=\"small\" \n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><CallIcon color=\"primary\"/></InputAdornment>,}}\n                  />*/}\n                {/*<PhoneInput\n                  id=\"HomeNumber\" \n                  label=\"Home Number\" \n                  variant=\"outlined\"              \n                  size=\"small\" \n                  value={phoneNumber}\n                  onChange={handleOnChange}              \n                  //inputClass={classes.field}\n                  //dropdownClass={classes.countryList}  \n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><CallIcon color=\"primary\"/></InputAdornment>,}}            \n                  inputExtraProps={{\n                    margin: 'normal',\n                    autoComplete: 'phone',\n                    required: 'true',\n                    name: 'custom-username'\n                  }}\n                />*/}\n                {/*<MuiPhoneNumber\n                  value={phoneNumber}\n                  defaultCountry='guy'\n                  variant= 'outlined'\n                  regions={['north-america', 'carribean', 'south-america']}\n                  onChange={handleOnChange}\n                  inputClass={classes.field}\n                  dropdownClass={classes.countryList}\n                  component={TextField}\n                  inputExtraProps={{\n                    margin: 'normal', autoComplete: 'phone', name: 'homeNumber', size: 'small', \n                    id:\"HomeNumber\",\n                    label:\"Home Number\",\n                    variant: 'outlined',\n                    endAdornment:<InputAdornment position=\"end\"><CallIcon color=\"primary\"/></InputAdornment>\n                  }}                  \n                />*/}\n                <MuiPhoneNumber \n                  defaultCountry={'gy'} \n                  onChange={props.handleHomeNumChange}\n                  value={props.homeNumber}\n                  variant= 'outlined'\n                  size= 'small'\n                  regions={['north-america', 'carribean', 'south-america']}\n                  label=\"Home Number\"\n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><CallIcon color=\"primary\"/></InputAdornment>,}}\n                />\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <MuiPhoneNumber\n                  id='CellNumber'\n                  defaultCountry={'gy'} \n                  onChange={props.handleCellNumChange}\n                  value={props.cellNumber}\n                  variant= 'outlined'\n                  size= 'small'\n                  regions={['north-america', 'carribean', 'south-america']}\n                  label=\"Cell Number\"\n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><PhoneAndroidIcon color=\"primary\"/></InputAdornment>,}}\n                />\n              </Grid>\n            </div>\n            <div>   \n              <Grid item xs={2}>\n                <MuiPhoneNumber\n                  id=\"WorkNumber\" \n                  label=\"Work Number\" \n                  variant=\"outlined\" \n                  size=\"small\" \n                  onChange={props.handleWorkNumChange}\n                  value={props.workNumber}                  \n                  regions={['north-america', 'carribean', 'south-america']}\n                  label=\"Work Number\"\n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><CallIcon color=\"primary\"/></InputAdornment>,}}\n                />\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField \n                  id=\"Email\" \n                  label=\"Email\" \n                  type=\"email\" \n                  value={props.email}\n                  onChange={props.handleEmailChange}\n                  variant=\"outlined\" \n                  size=\"small\" \n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><MailIcon color=\"primary\"/></InputAdornment>,}}\n                />\n              </Grid >\n            </div>    \n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeePIForm.js",["149","150"],"import React, { useState, useForm } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function AddEmployeePIForm(props) {  \n  const classes = useStyles();  \n  \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <h4>Personal Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField required name=\"FirstName\" label=\"First Name\" value={props.firstName} onChange={props.handleFirstNameChange} variant=\"outlined\" size=\"small\" />                \n                <TextField name=\"otherNameTwo\" label=\"Middle Name\" value={props.otherName} onChange={props.handleOtherNameChange} variant=\"outlined\" size=\"small\"  />\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"LastName\" name=\"lastName\" label=\"Last Name\" value={props.lastName} onChange={props.handleLastNameChange} variant=\"outlined\" size=\"small\" />\n                <TextField id=\"MiddleNameTwo\" label=\"Middle Name\" value={props.otherNameTwo} onChange={props.handleOtherNameTwoChange} variant=\"outlined\" size=\"small\" />\n              </Grid >\n            </div> \n            <div>\n              <Grid item xs={2}>\n                <Grid item xs={2}>\n                  <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                    <InputLabel id=\"sex-label\">Sex</InputLabel>\n                    <Select\n                      labelId=\"sex-label\"\n                      id=\"sex\"\n                      value={props.sex}\n                      onChange={props.handleSexChange}\n                      label=\"Sex\"                  \n                    >\n                      <MenuItem value=\"\"><em>Select</em></MenuItem>\n                      <MenuItem value={1}>Male</MenuItem>\n                      <MenuItem value={2}>Female</MenuItem>\n                      <MenuItem value={3}>Other</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                  <TextField id=\"dateOfBirth\" label=\"Date of Birth\" value={props.dateOfBirth} onChange={props.handleDoBChange} variant=\"outlined\" InputLabelProps={{ shrink: true,}} size=\"small\" type=\"date\" />\n                </Grid>\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"ethnicity-label\">Ethnicity</InputLabel>\n                  <Select\n                    labelId=\"ethnicity-label\"\n                    id=\"ethnicity\"\n                    value={props.ethnicity}\n                    onChange={props.handleEthnicityChange}\n                    label=\"Ethnicity\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>African</MenuItem>\n                    <MenuItem value={2}>Indian</MenuItem>\n                    <MenuItem value={3}>Amerindian</MenuItem>\n                    <MenuItem value={4}>Chinese</MenuItem>\n                    <MenuItem value={5}>Portuguese</MenuItem>\n                    <MenuItem value={6}>Mixed</MenuItem>\n                  </Select>\n                </FormControl>            \n              </Grid >            \n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"religion-label\">Religion</InputLabel>\n                  <Select\n                    labelId=\"religion-label\"\n                    id=\"religion\"\n                    value={props.religion}\n                    onChange={props.handleReligionChange}\n                    label=\"Religion\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>Christian</MenuItem>\n                    <MenuItem value={2}>Muslim</MenuItem>\n                    <MenuItem value={3}>Hindu</MenuItem>\n                    <MenuItem value={4}>Other</MenuItem>                \n                  </Select>\n                </FormControl>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"marital-status-label\">Marital Status</InputLabel>\n                  <Select\n                    labelId=\"marital-status-label\"\n                    id=\"marital-status\"\n                    value={props.maritalStatus}\n                    onChange={props.handleMaritalStatusChange}\n                    label=\"Marital Status\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>Single</MenuItem>\n                    <MenuItem value={2}>Married</MenuItem>\n                    <MenuItem value={3}>Divorced</MenuItem>\n                  </Select>\n                </FormControl>\n                <TextField id=\"Nationality\" label=\"Nationality\" value={props.nationality} onChange={props.handleNationalityChange} variant=\"outlined\" size=\"small\" />            \n              </Grid >\n            </div>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeOfficialInfoForm.js",["151"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n\n  paragraphColor: {\n    color: 'red'\n  }  \n}));\n\nexport default function AddEmployeeOfficialInfoForm(props) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n      <h4>Official Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"regimentalNumber\" label=\"RegimentalNumber\" name=\"regimentalNumber\" value={props.regimentNumber} onChange={props.handleRegNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'required' && (<p className={classes.paragraphColor}>Regiment Number is required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid regiment number</p>)}\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField id=\"identificationNumber\" name=\"identificationNumber\" label=\"IdentificationNumber\" value={props.nationalIdNumber} onChange={props.handleNationalIdNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, pattern: /^[0-9]+$/i})}/>\n                {errors.identificationNumber && errors.identificationNumber.type === 'required' && (<p className={classes.paragraphColor}>National Identification Number is required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid ID Number</p>)}\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField id=\"passportNumber\" name=\"passportNumber\" label=\"PassportNumber\" value={props.passportNumber} onChange={props.handlePassportNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.passportNumber && errors.passportNumber.type === 'required' && (<p className={classes.paragraphColor}>Passport Number is required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Passport Number</p>)}\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField id=\"passportExpirationDate\" name=\"passportExpirationDate\" label=\"Passport Expiration Date\" value={props.passportExpirationDate} onChange={props.handlePassportExpDateChange} variant=\"outlined\" size=\"small\" InputLabelProps={{ shrink: true,}} type=\"date\" inputRef={register({ required: true})}/>\n                {errors.passportExpirationDate && errors.passportExpirationDate.type === 'required' && (<p className={classes.paragraphColor}>Passport Expiration Date is required</p>)}\n              </Grid >\n            </div>    \n            <div>\n              <Grid item xs={2}>\n                <TextField id=\"tinNumber\" name=\"tinNumber\" label=\"TIN Number\" value={props.tinNumber} onChange={props.handleTinNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.tinNumber && errors.tinNumber.type === 'required' && (<p className={classes.paragraphColor}>Tin Number is required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Tin Number</p>)}\n              </Grid>\n            </div>        \n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Home.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/ViewCareerHistory.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeInformation.js",["152","153"],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeContactForm.js",["154","155","156","157"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MailIcon from '@material-ui/icons/Mail';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\nimport CallIcon from '@material-ui/icons/Call';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n\n  field: {\n    margin: '10px 0',\n  },\n\n  countryList: {\n    ...theme.typography.body1,\n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function AddEmployeeContactForm(props) {\n  const classes = useStyles();\n  const { register, errors } = useForm();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n      <h4>Contact Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField \n                  id=\"HomeNumber\" \n                  label=\"Home Number\"  \n                  value={props.homeNumber}\n                  onChange={props.handleHomeNumChange}  \n                  type=\"tel\"                           \n                  variant=\"outlined\" \n                  size=\"small\" \n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><CallIcon color=\"primary\"/></InputAdornment>,}}\n                />                \n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField \n                  id=\"CellNumber\" \n                  label=\"Cell Number\"  \n                  value={props.cellNumber}\n                  onChange={props.handleCellNumChange} \n                  type=\"tel\"                \n                  variant=\"outlined\" \n                  size=\"small\" \n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><PhoneAndroidIcon color=\"primary\"/></InputAdornment>,}}\n                />\n              </Grid>\n            </div>\n            <div>   \n              <Grid item xs={2}>\n                <TextField \n                  id=\"WorkNumber\" \n                  label=\"Work Number\" \n                  value={props.workNumber}\n                  onChange={props.handleWorkNumChange}  \n                  type=\"tel\"                \n                  variant=\"outlined\" \n                  size=\"small\" \n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><CallIcon color=\"primary\"/></InputAdornment>,}}\n                />                \n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField \n                  id=\"Email\"\n                  name=\"Email\"\n                  label=\"Email Address\"\n                  type=\"email\"              \n                  value={props.email}\n                  onChange={props.handleEmailChange}\n                  variant=\"outlined\" \n                  size=\"small\" \n                  inputRef={register({\n                    required: 'You must provide an email address!',\n                    pattern: {\n                      value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                      message: 'You must provide a valid email address!',\n                    },\n                  })}\n                  autoComplete='email'\n                  error={!!errors.email}\n                  autoFocus\n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><MailIcon color=\"primary\"/></InputAdornment>,}}\n                />\n                {errors.email && ( <span className={classes.error}>{errors.email.message}</span> )}\n              </Grid >\n            </div>    \n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeePIForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/axios.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":33,"column":7,"nodeType":"164","messageId":"165","endLine":33,"endColumn":17},{"ruleId":"158","replacedBy":"166"},{"ruleId":"160","replacedBy":"167"},{"ruleId":"162","severity":1,"message":"168","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":22},{"ruleId":"158","replacedBy":"169"},{"ruleId":"160","replacedBy":"170"},{"ruleId":"162","severity":1,"message":"171","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":13},{"ruleId":"162","severity":1,"message":"172","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":20},{"ruleId":"162","severity":1,"message":"173","line":29,"column":9,"nodeType":"164","messageId":"165","endLine":29,"endColumn":18},{"ruleId":"162","severity":1,"message":"174","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":11},{"ruleId":"162","severity":1,"message":"175","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"176","line":35,"column":10,"nodeType":"164","messageId":"165","endLine":35,"endColumn":22},{"ruleId":"162","severity":1,"message":"177","line":35,"column":24,"nodeType":"164","messageId":"165","endLine":35,"endColumn":39},{"ruleId":"162","severity":1,"message":"178","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"178","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":131,"column":19,"nodeType":"181","endLine":131,"endColumn":38},{"ruleId":"162","severity":1,"message":"178","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"182","line":1,"column":27,"nodeType":"164","messageId":"165","endLine":1,"endColumn":34},{"ruleId":"162","severity":1,"message":"183","line":29,"column":21,"nodeType":"164","messageId":"165","endLine":29,"endColumn":33},{"ruleId":"162","severity":1,"message":"184","line":38,"column":10,"nodeType":"164","messageId":"165","endLine":38,"endColumn":20},{"ruleId":"162","severity":1,"message":"185","line":39,"column":10,"nodeType":"164","messageId":"165","endLine":39,"endColumn":25},{"ruleId":"186","severity":1,"message":"187","line":104,"column":52,"nodeType":"188","messageId":"189","endLine":104,"endColumn":53,"suggestions":"190"},{"ruleId":"186","severity":1,"message":"187","line":104,"column":77,"nodeType":"188","messageId":"189","endLine":104,"endColumn":78,"suggestions":"191"},{"ruleId":"186","severity":1,"message":"187","line":104,"column":86,"nodeType":"188","messageId":"189","endLine":104,"endColumn":87,"suggestions":"192"},{"ruleId":"186","severity":1,"message":"187","line":104,"column":90,"nodeType":"188","messageId":"189","endLine":104,"endColumn":91,"suggestions":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'listMargin' is assigned a value but never used.","Identifier","unusedVar",["194"],["195"],"'FormHelperText' is defined but never used.",["194"],["195"],"'Paper' is defined but never used.","'SimpleSelect' is defined but never used.","'SexOption' is assigned a value but never used.","'Api' is defined but never used.","'useEffect' is defined but never used.","'employeeInfo' is assigned a value but never used.","'setEmployeeInfo' is assigned a value but never used.","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useForm' is defined but never used.","'handleSubmit' is assigned a value but never used.","'empInfoGet' is assigned a value but never used.","'employeeAddress' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["196","197"],["198","199"],["200","201"],["202","203"],"no-global-assign","no-unsafe-negation",{"messageId":"204","fix":"205","desc":"206"},{"messageId":"207","fix":"208","desc":"209"},{"messageId":"204","fix":"210","desc":"206"},{"messageId":"207","fix":"211","desc":"209"},{"messageId":"204","fix":"212","desc":"206"},{"messageId":"207","fix":"213","desc":"209"},{"messageId":"204","fix":"214","desc":"206"},{"messageId":"207","fix":"215","desc":"209"},"removeEscape",{"range":"216","text":"217"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"218","text":"219"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"220","text":"217"},{"range":"221","text":"219"},{"range":"222","text":"217"},{"range":"223","text":"219"},{"range":"224","text":"217"},{"range":"225","text":"219"},[3503,3504],"",[3503,3503],"\\",[3528,3529],[3528,3528],[3537,3538],[3537,3537],[3541,3542],[3541,3541]]