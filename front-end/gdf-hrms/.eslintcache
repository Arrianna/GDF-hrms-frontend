[{"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/index.js":"1","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/App.js":"2","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Layout.js":"3","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryLayout.js":"4","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileLayout.js":"5","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Api.js":"6","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/searchpage.js":"7","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SimpleSelect.js":"8","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryTable.js":"9","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryForm.js":"10","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/PersonalInformationForm.js":"11","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/AddressForm.js":"12","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/ContactForm.js":"13","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/OfficialInformationForm.js":"14","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByRegimentNumberForm.js":"15","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByOtherCriteriaForm.js":"16","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchResultsTable.js":"17","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeInformation.js":"18","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeAddressForm.js":"19","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeContactForm.js":"20","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeePIForm.js":"21","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeOfficialInfoForm.js":"22","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Home.js":"23","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/ViewCareerHistory.js":"24","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeInformation.js":"25","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm.js":"26","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeContactForm.js":"27","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeePIForm.js":"28","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/axios.js":"29"},{"size":514,"mtime":1617641554814,"results":"30","hashOfConfig":"31"},{"size":1862,"mtime":1617833634933,"results":"32","hashOfConfig":"31"},{"size":5885,"mtime":1617823728609,"results":"33","hashOfConfig":"31"},{"size":1836,"mtime":1618851746303,"results":"34","hashOfConfig":"31"},{"size":9442,"mtime":1619194019042,"results":"35","hashOfConfig":"31"},{"size":848,"mtime":1616456387198,"results":"36","hashOfConfig":"31"},{"size":2681,"mtime":1617641554813,"results":"37","hashOfConfig":"31"},{"size":1394,"mtime":1615754364967,"results":"38","hashOfConfig":"31"},{"size":2501,"mtime":1619194016897,"results":"39","hashOfConfig":"31"},{"size":1914,"mtime":1617823728606,"results":"40","hashOfConfig":"31"},{"size":3161,"mtime":1618853157141,"results":"41","hashOfConfig":"31"},{"size":5340,"mtime":1619194012245,"results":"42","hashOfConfig":"31"},{"size":1869,"mtime":1617641554811,"results":"43","hashOfConfig":"31"},{"size":2129,"mtime":1618851746304,"results":"44","hashOfConfig":"31"},{"size":2135,"mtime":1617641554812,"results":"45","hashOfConfig":"31"},{"size":4563,"mtime":1618851746306,"results":"46","hashOfConfig":"31"},{"size":3832,"mtime":1618851746307,"results":"47","hashOfConfig":"31"},{"size":9741,"mtime":1618851746302,"results":"48","hashOfConfig":"31"},{"size":5061,"mtime":1618851861902,"results":"49","hashOfConfig":"31"},{"size":4391,"mtime":1618851857919,"results":"50","hashOfConfig":"31"},{"size":9013,"mtime":1618851746301,"results":"51","hashOfConfig":"31"},{"size":5782,"mtime":1617641554810,"results":"52","hashOfConfig":"31"},{"size":1133,"mtime":1617823728608,"results":"53","hashOfConfig":"31"},{"size":9237,"mtime":1619194014977,"results":"54","hashOfConfig":"31"},{"size":12020,"mtime":1618445422120,"results":"55","hashOfConfig":"31"},{"size":5960,"mtime":1618085926040,"results":"56","hashOfConfig":"31"},{"size":4471,"mtime":1618851746312,"results":"57","hashOfConfig":"31"},{"size":7171,"mtime":1618092624366,"results":"58","hashOfConfig":"31"},{"size":149,"mtime":1617827919575,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1oo7nnx",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/index.js",[],["131","132"],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/App.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Layout.js",["133"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport gdfLogo from '../assets/gdfLogo.png';\nimport { HourglassEmptyTwoTone, PersonAddRounded, PersonRounded } from '@material-ui/icons';\n\nconst drawerWidth = 240;\n\nconst hrmsHeader = {\n  color: 'black',\n}\n\nconst gdfStyle = {\n  color: 'green'\n}\n\nconst listMargin = {\n  marginTop: '0px',\n  paddingTop: '0px'\n}\n\nconst gdfLogoStyle = {\n  width: drawerWidth,\n  paddingTop: '0px',\n  height: AppBar.height,\n  marginBottom: '0px'\n}\n\nconst iconMargin = {\n  marginRight: '30px'\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <img src={gdfLogo} alt=\"Logo\" style = {gdfLogoStyle} />;\n      <div className={classes.toolbar} />\n      {/*<Divider />*/}\n      <List>        \n        <ListItem button><PersonAddRounded style={iconMargin}/><ListItemText primary='Add Employee'/></ListItem>\n        <ListItem button><HourglassEmptyTwoTone style={iconMargin}/><Link to=\"/employeehistory\" color=\"primary\" variant=\"body2\" underline=\"none\"><ListItemText primary='Employee History'/></Link></ListItem>\n        <ListItem button><SearchIcon style={iconMargin}/><Link to='/search-page' color=\"primary\" variant=\"body2\" underline='none'><ListItemText primary='Employee Search'/></Link></ListItem>\n        <ListItem button><PersonRounded style={iconMargin}/><Link to=\"/\" color=\"primary\" variant=\"body2\" underline='none'><ListItemText primary='Employee Profile'/></Link></ListItem>\n      </List>\n      <Divider />\n      <List>\n        {['Something Else', 'More', 'Something More'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <HourglassEmptyTwoTone /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar} color='white'>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography>\n            <Typography variant=\"h4\" noWrap style={gdfStyle}>GUYANA DEFENCE FORCE</Typography>\n            <Typography variant=\"h5\" style = {hrmsHeader} noWrap>Human Resources Management System</Typography>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}        \n      </main>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryLayout.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileLayout.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Api.js",[],["134","135"],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/searchpage.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SimpleSelect.js",["136"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n\n  formControl: {\n    margin: theme.spacing(1),\n    width: '25ch',\n    //minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\n    \n\nexport default function SimpleSelect(props) {\n  const classes = useStyles();\n  const [selectValue, setSelectValue] = React.useState('');\n\n  const handleChange = (event) => {\n    setSelectValue(event.target.value);\n  };\n\n const selectOption = (option) => {\n     return option.map((options) => <MenuItem>{options}</MenuItem>);\n }\n  \n  return (\n    <div>\n      <FormControl variant = \"outlined\" size=\"small\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\" > {props.selectLabel} </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={selectValue}\n          onChange={handleChange}\n          \n        >\n\n        <selectOption option={props.option}></selectOption>\n          \n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",["137","138"],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryTable.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/PersonalInformationForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/AddressForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/ContactForm.js",["139","140","141"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SimpleSelect from '../SimpleSelect';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function ContactForm({employeePI}) {\n  const classes = useStyles();\n  const SexOption = [\"Male\",\"Female\"];\n  function FormRow() {\n    return (\n      <React.Fragment>\n        <div>\n            <Grid item xs={2}>\n            <TextField id=\"HomeNumber\" label=\"Home Number\" variant=\"outlined\" size=\"small\" value={employeePI.cId} />\n            </Grid>\n        </div>\n        <div>\n            <Grid item xs={2}>\n                <TextField id=\"CellNumber\" label=\"Cell Number\" variant=\"outlined\" size=\"small\" />\n            </Grid>\n        </div>\n        <div>   \n            <Grid item xs={2}>\n            <TextField id=\"WorkNumber\" label=\"Work Number\" variant=\"outlined\" size=\"small\" />\n            </Grid >\n         </div>\n         <div>\n            <Grid item xs={2}>\n            <TextField id=\"Email\" label=\"Email\" variant=\"outlined\" size=\"small\" />\n            </Grid >\n        </div>    \n      </React.Fragment>\n      \n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n      <h4>Contact Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/OfficialInformationForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByRegimentNumberForm.js",["142"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { TextField } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useForm } from 'react-hook-form';\nimport Api from '../Api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: theme.spacing(5),    \n  },\n    \n  cardcontents: {        \n    flex: 1,\n    float: 'left',\n    margin: theme.spacing(5),        \n  },\n\n  paragraphColor: {\n    color: 'red'\n  }\n}));\n\nexport default function SearchByRegimentNumberForm(props) {\n\n  const classes = useStyles();\n\n  const { register, handleSubmit, errors } = useForm();\n  \n    \n  return (    \n    <React.Fragment>\n      <div>\n        <Card>\n          <CardContent className={classes.cardcontents}>          \n            <form className={classes.form} align='center' onSubmit={handleSubmit(props.onSubmit)}>\n              <TextField name='regNum' label='Regiment Number' variant='outlined' margin='normal' defaultValue={''} inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n              {errors.regNum && errors.regNum.type === 'required' && (<p className={classes.paragraphColor}>Regiment Number is required</p>)}\n              {errors.regNum && errors.regNum.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n              {errors.regNum && errors.regNum.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n              {errors.regNum && errors.regNum.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid regiment number</p>)}\n              <br />\n              <Button type='submit' color='primary' variant='contained'>Search<SearchIcon /></Button>               \n            </form>\n          </CardContent>        \n        </Card>\n      </div>\n    </React.Fragment>    \n  );\n}","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByOtherCriteriaForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchResultsTable.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeInformation.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeAddressForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeContactForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeePIForm.js",["143","144"],"import React, { useState, useForm } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function AddEmployeePIForm(props) {  \n  const classes = useStyles();  \n  \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <h4>Personal Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField required name=\"FirstName\" label=\"First Name\" value={props.firstName} onChange={props.handleFirstNameChange} variant=\"outlined\" size=\"small\" />                \n                <TextField name=\"otherNameTwo\" label=\"Middle Name\" value={props.otherName} onChange={props.handleOtherNameChange} variant=\"outlined\" size=\"small\"  />\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"LastName\" name=\"lastName\" label=\"Last Name\" value={props.lastName} onChange={props.handleLastNameChange} variant=\"outlined\" size=\"small\" />\n                <TextField id=\"MiddleNameTwo\" label=\"Middle Name\" value={props.otherNameTwo} onChange={props.handleOtherNameTwoChange} variant=\"outlined\" size=\"small\" />\n              </Grid >\n            </div> \n            <div>\n              <Grid item xs={2}>\n                <Grid item xs={2}>\n                  <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                    <InputLabel id=\"sex-label\">Sex</InputLabel>\n                    <Select\n                      labelId=\"sex-label\"\n                      id=\"sex\"\n                      value={props.sex}\n                      onChange={props.handleSexChange}\n                      label=\"Sex\"                  \n                    >\n                      <MenuItem value=\"\"><em>Select</em></MenuItem>\n                      <MenuItem value={1}>Male</MenuItem>\n                      <MenuItem value={2}>Female</MenuItem>\n                      <MenuItem value={3}>Other</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                  <TextField id=\"dateOfBirth\" label=\"Date of Birth\" value={props.dateOfBirth} onChange={props.handleDoBChange} variant=\"outlined\" InputLabelProps={{ shrink: true,}} size=\"small\" type=\"date\" />\n                </Grid>\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"ethnicity-label\">Ethnicity</InputLabel>\n                  <Select\n                    labelId=\"ethnicity-label\"\n                    id=\"ethnicity\"\n                    value={props.ethnicity}\n                    onChange={props.handleEthnicityChange}\n                    label=\"Ethnicity\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>African</MenuItem>\n                    <MenuItem value={2}>Indian</MenuItem>\n                    <MenuItem value={3}>Amerindian</MenuItem>\n                    <MenuItem value={4}>Chinese</MenuItem>\n                    <MenuItem value={5}>Portuguese</MenuItem>\n                    <MenuItem value={6}>Mixed</MenuItem>\n                  </Select>\n                </FormControl>            \n              </Grid >            \n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"religion-label\">Religion</InputLabel>\n                  <Select\n                    labelId=\"religion-label\"\n                    id=\"religion\"\n                    value={props.religion}\n                    onChange={props.handleReligionChange}\n                    label=\"Religion\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>Christian</MenuItem>\n                    <MenuItem value={2}>Muslim</MenuItem>\n                    <MenuItem value={3}>Hindu</MenuItem>\n                    <MenuItem value={4}>Other</MenuItem>                \n                  </Select>\n                </FormControl>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"marital-status-label\">Marital Status</InputLabel>\n                  <Select\n                    labelId=\"marital-status-label\"\n                    id=\"marital-status\"\n                    value={props.maritalStatus}\n                    onChange={props.handleMaritalStatusChange}\n                    label=\"Marital Status\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>Single</MenuItem>\n                    <MenuItem value={2}>Married</MenuItem>\n                    <MenuItem value={3}>Divorced</MenuItem>\n                  </Select>\n                </FormControl>\n                <TextField id=\"Nationality\" label=\"Nationality\" value={props.nationality} onChange={props.handleNationalityChange} variant=\"outlined\" size=\"small\" />            \n              </Grid >\n            </div>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeOfficialInfoForm.js",["145"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n\n  paragraphColor: {\n    color: 'red'\n  }  \n}));\n\nexport default function AddEmployeeOfficialInfoForm(props) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n      <h4>Official Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"regimentalNumber\" label=\"RegimentalNumber\" name=\"regimentalNumber\" value={props.regimentNumber} onChange={props.handleRegNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'required' && (<p className={classes.paragraphColor}>Regiment Number is required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid regiment number</p>)}\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField id=\"identificationNumber\" name=\"identificationNumber\" label=\"IdentificationNumber\" value={props.nationalIdNumber} onChange={props.handleNationalIdNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, pattern: /^[0-9]+$/i})}/>\n                {errors.identificationNumber && errors.identificationNumber.type === 'required' && (<p className={classes.paragraphColor}>National Identification Number is required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid ID Number</p>)}\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField id=\"passportNumber\" name=\"passportNumber\" label=\"PassportNumber\" value={props.passportNumber} onChange={props.handlePassportNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.passportNumber && errors.passportNumber.type === 'required' && (<p className={classes.paragraphColor}>Passport Number is required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Passport Number</p>)}\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField id=\"passportExpirationDate\" name=\"passportExpirationDate\" label=\"Passport Expiration Date\" value={props.passportExpirationDate} onChange={props.handlePassportExpDateChange} variant=\"outlined\" size=\"small\" InputLabelProps={{ shrink: true,}} type=\"date\" inputRef={register({ required: true})}/>\n                {errors.passportExpirationDate && errors.passportExpirationDate.type === 'required' && (<p className={classes.paragraphColor}>Passport Expiration Date is required</p>)}\n              </Grid >\n            </div>    \n            <div>\n              <Grid item xs={2}>\n                <TextField id=\"tinNumber\" name=\"tinNumber\" label=\"TIN Number\" value={props.tinNumber} onChange={props.handleTinNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.tinNumber && errors.tinNumber.type === 'required' && (<p className={classes.paragraphColor}>Tin Number is required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Tin Number</p>)}\n              </Grid>\n            </div>        \n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/Home.js",[],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/ViewCareerHistory.js",["146"],"/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeInformation.js",["147","148","149","150"],"import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Axios from 'axios';\nimport axios from './UpdateEmployeeComponents/axios';\n\n\nimport UpdateEmployeePIForm from './UpdateEmployeeComponents/UpdateEmployeePIForm';\n//import UpdateEmployeeAddressForm from './UpdateEmployeeComponents/UpdateEmployeeAddressForm';\nimport UpdateEmployeeContactForm from './UpdateEmployeeComponents/UpdateEmployeeContactForm';\nimport UpdateEmployeeOfficialInfoForm from './UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  \n   careerButton: {\n     marginLeft: '20px,'\n   }\n\n}));\n\nexport default function UpdateEmployeeInformation() {\n  const classes = useStyles();  \n  const [empInfoGet, setEmpInfoGet] = useState({});\n  const [error, setError] = useState();\n // const [employeeAddress, setEmployeeAddress] = useState({});\n\n  const params = useParams();\n  const eId = params.empId;\n\n  // AddEmployeePIForm INFORMATION\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [otherName, setOtherName] = useState(null);\n  const [otherNameTwo, setOtherNameTwo] = useState(null);\n  const [maritalStatus, setMaritalStatus] = useState(\"\");\n  const [religion, setReligion] = useState(\"\");\n  const [ethnicity, setEthnicity] = useState(\"\");\n  const [sex, setSex] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(null);\n  const [nationality, setNationality] = useState(\"\");\n\n  // AddEmployeeContactForm Information\n  const [homeNumber, setHomeNumber] = useState(null);\n  const [cellNumber, setCellNumber] = useState(null);\n  const [workNumber, setWorkNumber] = useState(null);\n  const [email, setEmail] = useState(null);\n\n    // AddEmployeeOfficialInfoForm Information\n  const [regimentNumber, setRegimentNumber] = useState(null);\n  const [nationalIdNumber, setNationalIdNumber] = useState(null);\n  const [passportNumber, setPassportNumber] = useState(null);\n  const [passportExpirationDate, setPassportExpirationDate] = useState(null);\n  const [tinNumber, setTinNumber] = useState(null);\n\n\n  useEffect(() => {   \n   const getEmpInfo = async () => {\n        if(eId){\n          const info = await Axios.get(\"EmployeeInfo/Id/\" + eId);\n          setEmpInfoGet(info.data);\n        }\n   /* const getEmpAddress = async () => {\n      if(regNumber){\n        const addressInfo = await Axios.get(\"EmployeeInfo/GetEmployeeAddressByTheirId?employeeId=1\");\n        setEmployeeAddress(addressInfo.data);\n      } */\n    };\n    getEmpInfo();\n\n    setFirstName(empInfoGet.firstName);\n    setLastName(empInfoGet.lastName);\n    setOtherName(empInfoGet.otherName);\n    setOtherNameTwo(empInfoGet.otherNameTwo);\n    setMaritalStatus(empInfoGet.maritalStatus);\n    setEthnicity(empInfoGet.ethnicity);\n    setReligion(empInfoGet.religion);\n    setSex(empInfoGet.sex);\n    setDateOfBirth(empInfoGet.dateOfBirth);\n    setNationality(empInfoGet.nationality);\n    setHomeNumber(empInfoGet.homeNumber);\n    setCellNumber(empInfoGet.cellNumber);\n    setWorkNumber(empInfoGet.workNumber);\n    setEmail(empInfoGet.email);\n    setRegimentNumber(empInfoGet.regimentNumber);\n    setNationalIdNumber(empInfoGet.nationalIdNumber);\n    setPassportNumber(empInfoGet.passportNumber);\n    setPassportExpirationDate(empInfoGet.passportExpirationDate);\n    setTinNumber(empInfoGet.tinNumber);\n\n    //getEmpAddress();\n  }, [eId, empInfoGet.firstName, empInfoGet.lastName, empInfoGet.otherName, empInfoGet.otherNameTwo, \n      empInfoGet.maritalStatus, empInfoGet.ethnicity, empInfoGet.religion, empInfoGet.sex, empInfoGet.dateOfBirth,\n      empInfoGet.nationality, empInfoGet.homeNumber, empInfoGet.cellNumber, empInfoGet.workNumber, empInfoGet.email,\n      empInfoGet.regimentNumber, empInfoGet.nationalIdNumber, empInfoGet.passportNumber, empInfoGet.passportExpirationDate,\n      empInfoGet.tinNumber]);\n\n  //console.log(empInfoGet.firstName);\n  //console.log(empInfoGet);\n  //console.log(empInfoGet.firstName);\n  \n  // AddEmployeePIForm INFORMATION\n\n  const handleFirstNameChange = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const handleLastNameChange = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const handleOtherNameChange = (event) => {\n    setOtherName(event.target.value);\n  };\n\n  const handleOtherNameTwoChange = (event) => {\n    setOtherNameTwo(event.target.value);\n  };\n\n  const handleMaritalStatusChange = (event) => {\n    setMaritalStatus(event.target.value);\n  };\n\n  const handleReligionChange = (event) => {\n    setReligion(event.target.value);\n  };\n\n  const handleEthnicityChange = (event) => {\n    setEthnicity(event.target.value);\n  };\n\n  // DON'T LAUGH TOO MUCH, YOU MIGHT POP A VEIN\n  const handleSexChange = (event) => {\n    setSex(event.target.value);\n  }\n\n  const handleDoBChange = (event) => {\n    setDateOfBirth(event.target.value);\n  }\n\n  const handleNationalityChange = (event) => {\n    setNationality(event.target.value);\n  }\n\n  // AddEmployeeContactForm Information\n  const handleHomeNumChange = (event) => {      \n    setHomeNumber(event.target.value);\n  }\n\n  const handleCellNumChange = (event) => {    \n    setCellNumber(event.target.value);\n  }\n\n  const handleWorkNumChange = (event) => {       \n    setWorkNumber(event.target.value); \n  }\n\n  const handleEmailChange = (event) => {    \n    setEmail(event.target.value);\n  }\n\n  // AddEmployeeOfficialInfoForm Information\n  const handleRegNumChange = (event) => {    \n    setRegimentNumber(event.target.value);\n  }\n\n  const handleNationalIdNumChange = (event) => {    \n    setNationalIdNumber(event.target.value);\n  }\n\n  const handlePassportNumChange = (event) => {    \n    setPassportNumber(event.target.value); \n  }\n\n  const handlePassportExpDateChange = (event) => {\n    setPassportExpirationDate(event.target.value);\n  }\n\n  const handleTinNumChange = (event) => {\n    setTinNumber(event.target.value);\n  }\n  console.log(maritalStatus);\n  console.log(religion);\n  console.log(nationality);\n  console.log(ethnicity);\n  console.log(firstName);\n\n\n  const postDataHandler = () => {    \n  let employeeInfo = {\n      id: parseInt(eId),\n      nationalityId: nationality,\n      religionId: religion,\n      ethnicityId: ethnicity,\n      maritalStatusId: maritalStatus,\n      homeNumber: parseInt(homeNumber, 10),\n      cellNumber: parseInt(cellNumber, 10),\n      workNumber: parseInt(workNumber, 10),\n      email: email,\n      title: '',\n      firstName: firstName,\n      lastName: lastName,\n      otherName: otherName,\n      regimentNumber: parseInt(regimentNumber, 10),\n      dateOfBirth: dateOfBirth,\n      sex: sex,\n      nationalIdNumber: parseInt(nationalIdNumber, 10),\n      passportNumber: passportNumber,\n      passportExpirationDate: passportExpirationDate,\n      tinNumber: parseInt(tinNumber, 10),\n    };\n    //console.log(employeeInfo);\n    axios.patch('/employeePI/' + eId, employeeInfo)\n      .then(response => console.log(response))\n      .catch(error => console.log(error))\n  }\n\n  const confirmationHandler = (error) =>{\n   <div>\n     {console.log(error)}\n    <Dialog\n    open = \"true\"\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\">\n    <DialogContent>\n      <DialogContentText id=\"alert-dialog-description\">{error}</DialogContentText>\n    </DialogContent>\n  </Dialog>\n  </div>\n  }\n  \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} >\n        <Grid item xs={6}>\n         <h1>Update Employee Profile</h1>\n        </Grid>\n        <Grid item xs={6}>\n          <h1>\n            <Button variant=\"outlined\" color=\"primary\">\n            <Link to={'/employee-history/'}>Update Career History</Link>\n            </Button>\n          </h1>\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <div>\n            <Grid container spacing={3}>          \n              <Grid item xs={12}>\n\n                <UpdateEmployeePIForm \n                  firstName={firstName}\n                  lastName={lastName}\n                  otherName={otherName}\n                  otherNameTwo={otherNameTwo}\n                  maritalStatus={maritalStatus} \n                  religion={religion}\n                  ethnicity={ethnicity}\n                  sex={sex}\n                  dateOfBirth={dateOfBirth}\n                  nationality={nationality}\n                  handleFirstNameChange={handleFirstNameChange}\n                  handleLastNameChange={handleLastNameChange}\n                  handleOtherNameChange={handleOtherNameChange}\n                  handleOtherNameTwoChange={handleOtherNameTwoChange}\n                  handleMaritalStatusChange={handleMaritalStatusChange}\n                  handleReligionChange={handleReligionChange}\n                  handleEthnicityChange={handleEthnicityChange}\n                  handleSexChange={handleSexChange}\n                  handleDoBChange={handleDoBChange}\n                  handleNationalityChange={handleNationalityChange}>                    \n                </UpdateEmployeePIForm>\n              </Grid>\n\n              {/*<Grid item xs={12}>\n                <AddEmployeeAddressForm \n                  lot={lot}\n                  street={street}\n                  area={area}\n                  village={village}\n                  region={region}\n                  country={country}\n                  handleLotChange={handleLotChange}\n                  handleStreetChange={handleStreetChange}\n                  handleAreaChange={handleAreaChange}\n                  handleVillageChange={handleVillageChange}\n                  handleRegionChange={handleRegionChange}\n                  handleCountryChange={handleCountryChange}></AddEmployeeAddressForm>\n              </Grid>*/}\n\n              <Grid item xs={12}>\n                <UpdateEmployeeContactForm \n                  homeNumber={homeNumber}\n                  cellNumber={cellNumber}\n                  workNumber={workNumber}\n                  email={email}\n                  handleHomeNumChange={handleHomeNumChange}\n                  handleCellNumChange={handleCellNumChange}\n                  handleWorkNumChange={handleWorkNumChange}\n                  handleEmailChange={handleEmailChange}>\n                </UpdateEmployeeContactForm>\n              </Grid >\n\n              <Grid item xs={12}>\n                <UpdateEmployeeOfficialInfoForm \n                  regimentNumber={regimentNumber}\n                  nationalIdNumber={nationalIdNumber}\n                  passportNumber={passportNumber}\n                  passportExpirationDate={passportExpirationDate}\n                  tinNumber={tinNumber}\n                  handleRegNumChange={handleRegNumChange}\n                  handleNationalIdNumChange={handleNationalIdNumChange}\n                  handlePassportNumChange={handlePassportNumChange}\n                  handlePassportExpDateChange={handlePassportExpDateChange}\n                  handleTinNumChange={handleTinNumChange}>\n                </UpdateEmployeeOfficialInfoForm>\n              </Grid >\n\n              <Grid item xs={12}>\n                <Button type=\"submit\" onClick={postDataHandler} variant=\"outlined\" color=\"primary\"> Update Employee </Button>\n                <p> {error} </p>\n              </Grid >\n            </Grid>           \n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm.js",["151"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n\n  paragraphColor: {\n    color: 'red'\n  }  \n}));\n\nexport default function UpdateEmployeeOfficialInfoForm(props) {\n  const classes = useStyles();\n  const { register, errors } = useForm();\n \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n      <h4>Official Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"regimentalNumber\" label=\"RegimentalNumber\" name=\"regimentalNumber\" InputLabelProps={{ shrink: true,}} value={props.regimentNumber} onChange={props.handleRegNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'required' && (<p className={classes.paragraphColor}>Regiment Number is required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid regiment number</p>)}\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"identificationNumber\" name=\"identificationNumber\" label=\"IdentificationNumber\" InputLabelProps={{ shrink: true,}} value={props.nationalIdNumber} onChange={props.handleNationalIdNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 9, maxLength: 9, type: \"number\", pattern: /^[0-9]+$/i})}/>\n                {errors.identificationNumber && errors.identificationNumber.type === 'required' && (<p className={classes.paragraphColor}>National Identification Number is required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 9 numbers required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 9 numbers required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid ID Number</p>)}\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"passportNumber\" name=\"passportNumber\" label=\"PassportNumber\" InputLabelProps={{ shrink: true,}} value={props.passportNumber} onChange={props.handlePassportNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 8, maxLength: 8, type: \"text\"})}/>\n                {errors.passportNumber && errors.passportNumber.type === 'required' && (<p className={classes.paragraphColor}>Passport Number is required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 8 characters required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 8 characters required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Passport Number</p>)}\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"passportExpirationDate\" name=\"passportExpirationDate\" label=\"Passport Expiration Date\" InputLabelProps={{ shrink: true,}} value={props.passportExpirationDate} onChange={props.handlePassportExpDateChange} variant=\"outlined\" size=\"small\" InputLabelProps={{ shrink: true,}} type=\"date\" inputRef={register({ required: true})}/>\n                {errors.passportExpirationDate && errors.passportExpirationDate.type === 'required' && (<p className={classes.paragraphColor}>Passport Expiration Date is required</p>)}\n              </Grid >\n            </div>    \n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"tinNumber\" name=\"tinNumber\" label=\"TIN Number\" InputLabelProps={{ shrink: true,}} value={props.tinNumber} onChange={props.handleTinNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 9, maxLength: 9, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.tinNumber && errors.tinNumber.type === 'required' && (<p className={classes.paragraphColor}>Tin Number is required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 9 numbers required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 9 numbers required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Tin Number</p>)}\n              </Grid>\n            </div>        \n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeContactForm.js",["152","153","154","155"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MailIcon from '@material-ui/icons/Mail';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\nimport CallIcon from '@material-ui/icons/Call';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n\n  field: {\n    margin: '10px 0',\n  },\n\n  countryList: {\n    ...theme.typography.body1,\n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function UpdateEmployeeContactForm(props) {\n  const classes = useStyles();\n  const { register, errors } = useForm();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n      <h4>Contact Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField \n                  id=\"HomeNumber\" \n                  label=\"Home Number\"  \n                  value={props.homeNumber}\n                  onChange={props.handleHomeNumChange}  \n                  InputLabelProps={{ shrink: true,}}\n                  type=\"tel\"                           \n                  variant=\"outlined\" \n                  size=\"small\" \n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><CallIcon color=\"primary\"/></InputAdornment>,}}\n                />                \n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField \n                  id=\"CellNumber\" \n                  label=\"Cell Number\"  \n                  value={props.cellNumber}\n                  onChange={props.handleCellNumChange} \n                  InputLabelProps={{ shrink: true,}}\n                  type=\"tel\"                \n                  variant=\"outlined\" \n                  size=\"small\" \n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><PhoneAndroidIcon color=\"primary\"/></InputAdornment>,}}\n                />\n              </Grid>\n            </div>\n            <div>   \n              <Grid item xs={2}>\n                <TextField \n                  id=\"WorkNumber\" \n                  label=\"Work Number\" \n                  value={props.workNumber}\n                  onChange={props.handleWorkNumChange}  \n                  InputLabelProps={{ shrink: true,}}\n                  type=\"tel\"                \n                  variant=\"outlined\" \n                  size=\"small\" \n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><CallIcon color=\"primary\"/></InputAdornment>,}}\n                />                \n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField \n                  id=\"Email\"\n                  name=\"Email\"\n                  label=\"Email Address\"\n                  type=\"email\"              \n                  value={props.email}\n                  onChange={props.handleEmailChange}\n                  InputLabelProps={{ shrink: true,}}\n                  variant=\"outlined\" \n                  size=\"small\" \n                  inputRef={register({\n                    required: 'You must provide an email address!',\n                    pattern: {\n                      value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                      message: 'You must provide a valid email address!',\n                    },\n                  })}\n                  autoComplete='email'\n                  error={!!errors.email}\n                  autoFocus\n                  InputProps={{\n                    endAdornment:<InputAdornment position=\"end\"><MailIcon color=\"primary\"/></InputAdornment>,}}\n                />\n                {errors.email && ( <span className={classes.error}>{errors.email.message}</span> )}\n              </Grid >\n            </div>    \n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeePIForm.js",["156"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function UpdateEmployeePIForm(props) {  \n  const classes = useStyles();  \n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <h4>Personal Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField required name=\"FirstName\" label=\"First Name\" InputLabelProps={{ shrink: true,}} value={props.firstName} onChange={props.handleFirstNameChange} variant=\"outlined\" size=\"small\" />                \n                <TextField name=\"otherNameTwo\" label=\"Middle Name\" InputLabelProps={{ shrink: true,}} value={props.otherName} onChange={props.handleOtherNameChange} variant=\"outlined\" size=\"small\"  />\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"LastName\" name=\"lastName\" label=\"Last Name\" InputLabelProps={{ shrink: true,}} value={props.lastName} onChange={props.handleLastNameChange} variant=\"outlined\" size=\"small\" />\n                <TextField id=\"MiddleNameTwo\" label=\"Middle Name\" InputLabelProps={{ shrink: true,}} value={props.otherNameTwo} onChange={props.handleOtherNameTwoChange} variant=\"outlined\" size=\"small\" />\n              </Grid >\n            </div> \n            <div>\n              <Grid item xs={2}>\n                <Grid item xs={2}>\n                  <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                    <InputLabel id=\"sex-label\">Sex</InputLabel>\n                    <Select\n                      labelId=\"sex-label\"\n                      id=\"sex\"\n                      value={props.sex}\n                      onChange={props.handleSexChange}\n                      label=\"Sex\"                  \n                    >\n                      <MenuItem value=\"\"><em>Select</em></MenuItem>\n                      <MenuItem value={\"Male\"}>Male</MenuItem>\n                      <MenuItem value={\"Female\"}>Female</MenuItem>\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                  <TextField id=\"dateOfBirth\" label=\"Date of Birth\" InputLabelProps={{ shrink: true,}} value={props.dateOfBirth} onChange={props.handleDoBChange} variant=\"outlined\" InputLabelProps={{ shrink: true,}} size=\"small\" type=\"date\" />\n                </Grid>\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"ethnicity-label\">Ethnicity</InputLabel>\n                  <Select\n                    labelId=\"ethnicity-label\"\n                    id=\"ethnicity\"\n                    value={props.ethnicity}\n                    onChange={props.handleEthnicityChange}\n                    label=\"Ethnicity\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>African</MenuItem>\n                    <MenuItem value={2}>Indian</MenuItem>\n                    <MenuItem value={3}>Amerindian</MenuItem>\n                    <MenuItem value={4}>Chinese</MenuItem>\n                    <MenuItem value={5}>Portuguese</MenuItem>\n                    <MenuItem value={6}>Mixed</MenuItem>\n                  </Select>\n                </FormControl>         \n              </Grid >            \n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"religion-label\">Religion</InputLabel>\n                  <Select\n                    labelId=\"religion-label\"\n                    id=\"religion\"\n                    value={props.religion}\n                    onChange={props.handleReligionChange}\n                    label=\"Religion\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>Christian</MenuItem>\n                    <MenuItem value={2}>Muslim</MenuItem>\n                    <MenuItem value={3}>Hindu</MenuItem>\n                    <MenuItem value={4}>Other</MenuItem>                \n                  </Select>\n                </FormControl>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"marital-status-label\">Marital Status</InputLabel>\n                  <Select\n                    labelId=\"marital-status-label\"\n                    id=\"marital-status\"\n                    value={props.maritalStatus}\n                    onChange={props.handleMaritalStatusChange}\n                    label=\"Marital Status\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>Single</MenuItem>\n                    <MenuItem value={2}>Married</MenuItem>\n                    <MenuItem value={3}>Divorced</MenuItem>\n                  </Select>\n                </FormControl>\n                {/*<TextField id=\"Nationality\" label=\"Nationality\" value={props.nationality} onChange={props.handleNationalityChange} variant=\"outlined\" size=\"small\" />*/}\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"nationality-label\">Nationality</InputLabel>\n                  <Select\n                    labelId=\"nationality-label\"\n                    id=\"Nationality\"\n                    InputLabelProps={{ shrink: true,}}\n                    value={props.nationality}\n                    onChange={props.handleNationalityChange}\n                    label=\"Nationality\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>Guyanese</MenuItem>\n                    <MenuItem value={2}>Surinamese</MenuItem>\n                    <MenuItem value={3}>Brazillian</MenuItem>\n                    <MenuItem value={4}>Venezuelan</MenuItem>\n                    <MenuItem value={5}>Trinidadian</MenuItem>\n                    <MenuItem value={6}>Barbadian</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid >\n            </div>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDFhrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/axios.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":33,"column":7,"nodeType":"163","messageId":"164","endLine":33,"endColumn":17},{"ruleId":"157","replacedBy":"165"},{"ruleId":"159","replacedBy":"166"},{"ruleId":"161","severity":1,"message":"167","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":22},{"ruleId":"157","replacedBy":"168"},{"ruleId":"159","replacedBy":"169"},{"ruleId":"161","severity":1,"message":"170","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":13},{"ruleId":"161","severity":1,"message":"171","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":20},{"ruleId":"161","severity":1,"message":"172","line":29,"column":9,"nodeType":"163","messageId":"164","endLine":29,"endColumn":18},{"ruleId":"161","severity":1,"message":"173","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":11},{"ruleId":"161","severity":1,"message":"174","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"175","line":1,"column":27,"nodeType":"163","messageId":"164","endLine":1,"endColumn":34},{"ruleId":"161","severity":1,"message":"176","line":29,"column":21,"nodeType":"163","messageId":"164","endLine":29,"endColumn":33},{"ruleId":"161","severity":1,"message":"177","line":11,"column":8,"nodeType":"163","messageId":"164","endLine":11,"endColumn":13},{"ruleId":"161","severity":1,"message":"178","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":21},{"ruleId":"161","severity":1,"message":"179","line":10,"column":8,"nodeType":"163","messageId":"164","endLine":10,"endColumn":19},{"ruleId":"161","severity":1,"message":"180","line":44,"column":17,"nodeType":"163","messageId":"164","endLine":44,"endColumn":25},{"ruleId":"161","severity":1,"message":"181","line":237,"column":9,"nodeType":"163","messageId":"164","endLine":237,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":66,"column":277,"nodeType":"184","endLine":66,"endColumn":311},{"ruleId":"185","severity":1,"message":"186","line":108,"column":52,"nodeType":"187","messageId":"188","endLine":108,"endColumn":53,"suggestions":"189"},{"ruleId":"185","severity":1,"message":"186","line":108,"column":77,"nodeType":"187","messageId":"188","endLine":108,"endColumn":78,"suggestions":"190"},{"ruleId":"185","severity":1,"message":"186","line":108,"column":86,"nodeType":"187","messageId":"188","endLine":108,"endColumn":87,"suggestions":"191"},{"ruleId":"185","severity":1,"message":"186","line":108,"column":90,"nodeType":"187","messageId":"188","endLine":108,"endColumn":91,"suggestions":"192"},{"ruleId":"182","severity":1,"message":"183","line":71,"column":182,"nodeType":"184","endLine":71,"endColumn":216},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'listMargin' is assigned a value but never used.","Identifier","unusedVar",["193"],["194"],"'FormHelperText' is defined but never used.",["193"],["194"],"'Paper' is defined but never used.","'SimpleSelect' is defined but never used.","'SexOption' is assigned a value but never used.","'Api' is defined but never used.","'useState' is defined but never used.","'useForm' is defined but never used.","'handleSubmit' is assigned a value but never used.","'Input' is defined but never used.","'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","'setError' is assigned a value but never used.","'confirmationHandler' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["195","196"],["197","198"],["199","200"],["201","202"],"no-global-assign","no-unsafe-negation",{"messageId":"203","fix":"204","desc":"205"},{"messageId":"206","fix":"207","desc":"208"},{"messageId":"203","fix":"209","desc":"205"},{"messageId":"206","fix":"210","desc":"208"},{"messageId":"203","fix":"211","desc":"205"},{"messageId":"206","fix":"212","desc":"208"},{"messageId":"203","fix":"213","desc":"205"},{"messageId":"206","fix":"214","desc":"208"},"removeEscape",{"range":"215","text":"216"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"217","text":"218"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"219","text":"216"},{"range":"220","text":"218"},{"range":"221","text":"216"},{"range":"222","text":"218"},{"range":"223","text":"216"},{"range":"224","text":"218"},[3718,3719],"",[3718,3718],"\\",[3743,3744],[3743,3743],[3752,3753],[3752,3752],[3756,3757],[3756,3756]]