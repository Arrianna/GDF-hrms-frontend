[{"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/index.js":"1","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/App.js":"2","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/Layout.js":"3","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryLayout.js":"4","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/searchpage.js":"5","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/ViewCareerHistory.js":"6","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeAddressForm.js":"7","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/Home.js":"8","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileLayout.js":"9","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeInformation.js":"10","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeInformation.js":"11","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryForm.js":"12","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryTable.js":"13","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeContactForm.js":"14","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeOfficialInfoForm.js":"15","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeePIForm.js":"16","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchResultsTable.js":"17","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByRegimentNumberForm.js":"18","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByOtherCriteriaForm.js":"19","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeContactForm.js":"20","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm.js":"21","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeePIForm.js":"22","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/axios.js":"23","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/OfficialInformationForm.js":"24","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/AddressForm.js":"25","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/PersonalInformationForm.js":"26","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/ContactForm.js":"27"},{"size":514,"mtime":1619544659256,"results":"28","hashOfConfig":"29"},{"size":1862,"mtime":1619544659248,"results":"30","hashOfConfig":"29"},{"size":5885,"mtime":1619544659253,"results":"31","hashOfConfig":"29"},{"size":1871,"mtime":1619544659252,"results":"32","hashOfConfig":"29"},{"size":2951,"mtime":1619544659255,"results":"33","hashOfConfig":"29"},{"size":9237,"mtime":1619544659252,"results":"34","hashOfConfig":"29"},{"size":5108,"mtime":1619544659250,"results":"35","hashOfConfig":"29"},{"size":1133,"mtime":1619544659253,"results":"36","hashOfConfig":"29"},{"size":14362,"mtime":1619544659253,"results":"37","hashOfConfig":"29"},{"size":10504,"mtime":1619544659251,"results":"38","hashOfConfig":"29"},{"size":12020,"mtime":1619544659255,"results":"39","hashOfConfig":"29"},{"size":1986,"mtime":1619544659252,"results":"40","hashOfConfig":"29"},{"size":10646,"mtime":1619801071717,"results":"41","hashOfConfig":"29"},{"size":4391,"mtime":1619544659250,"results":"42","hashOfConfig":"29"},{"size":5782,"mtime":1619544659251,"results":"43","hashOfConfig":"29"},{"size":9338,"mtime":1619799616627,"results":"44","hashOfConfig":"29"},{"size":3834,"mtime":1619544659254,"results":"45","hashOfConfig":"29"},{"size":2135,"mtime":1619544659254,"results":"46","hashOfConfig":"29"},{"size":4563,"mtime":1619544659254,"results":"47","hashOfConfig":"29"},{"size":4471,"mtime":1619544659254,"results":"48","hashOfConfig":"29"},{"size":5960,"mtime":1619544659255,"results":"49","hashOfConfig":"29"},{"size":7171,"mtime":1619544659255,"results":"50","hashOfConfig":"29"},{"size":149,"mtime":1619544659255,"results":"51","hashOfConfig":"29"},{"size":2129,"mtime":1619544659253,"results":"52","hashOfConfig":"29"},{"size":3823,"mtime":1619544659252,"results":"53","hashOfConfig":"29"},{"size":3161,"mtime":1619544659253,"results":"54","hashOfConfig":"29"},{"size":1869,"mtime":1619544659252,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1rfj6va",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/index.js",[],["116","117"],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/App.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/Layout.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryLayout.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/searchpage.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/ViewCareerHistory.js",["118","119","120"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useParams } from 'react-router-dom';\nimport CareerHistoryTable from './CareerHistoryTable';\nimport Axios from 'axios'; \nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function ViewCareerHistory(props) {\n  const classes = useStyles();\n  const params = useParams();  \n  const [empData, setEmpData] = useState();\n  const [employeeInfo, setEmployeeInfo] = useState();\n  const [newPosition, setNewPosition] = useState();\n  const [newDepartment, setNewDepartment] = useState();\n  //const [position, setPosition] = useState();\n  //const [department, setDepartment] = useState();\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [open, setOpen] = useState(false);\n  const [positions, setPositions] = useState();\n  const [departments, setDepartments] = useState();\n\n  let eId = params.empId;\n  console.log(eId);\n\n  const handleClickOpen = () => {    \n    setOpen(true);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handlePositionChange = (event) => {\n    setNewPosition(event.target.value);\n  }\n \n  const handleDepartmentChange = (event) => {\n    setNewDepartment(event.target.value);\n  }\n\n  const handleStartDateChange = (event) => {\n    setStartDate(event.target.value);\n  }\n\n  const handleEndDateChange = (event) => {\n    setEndDate(event.target.value);\n  }\n\n  const handleSave = () => {\n    let careerHistory = {\n      eId: parseInt(eId),\n      posId: newPosition,\n      deptId: newDepartment,\n      startDate: startDate,\n      endDate: endDate\n    }\n    if(careerHistory){\n\n      const postRequest = async() => {\n      Axios.post('PostInfo/AddAnEmployeeCareerHistory', careerHistory)\n      .then(response => setEmpData(empData.concat(response.data)))\n      .catch(error => console.log(error)) \n    }\n\n    postRequest();\n  }\n   // setEmpData([careerHistory, ...empData]);\n   \n    setOpen(false);    \n  };\n\n  useEffect(() => {    \n    const getEmpCH = async () => {\n      if(eId){\n        const info = await Axios.get(\"EmployeeInfo/GetEmployeeCareerHistoryByTheirId?employeeId=\" + eId);\n        setEmpData(info.data);\n      }\n    };\n    const getEmpInfo = async () => {\n      if(eId){\n        const info = await Axios.get(\"EmployeeInfo/Id/\" + eId);\n        setEmployeeInfo(info.data);\n      }\n    };  \n\n    const getPosition = async () => {\n      const info = await Axios.get(\"GetInfo/GetAllPositions\");\n      if(info.data != null){\n        if(info.data.length > 0){\n          setPositions(info.data);\n        }\n      }\n    };\n   \n    const getDepartment = async () => {\n      const info = await Axios.get(\"GetInfo/GetAllDepartments\");\n      if(info.data != null){\n        if(info.data.length > 0){\n          setDepartments(info.data);\n        }\n      }\n    };\n\n    getEmpCH();\n    getEmpInfo();\n    getPosition();\n    getDepartment();\n  }, [eId]);\n  console.log(positions);\n  console.log(departments);\n\n  const showInfo = () => {\n    if(employeeInfo != null) {\n      return(\n        <div>\n         <h2>Career History for {employeeInfo.firstName} {employeeInfo.lastName} ({employeeInfo.regimentNumber})</h2>  \n        </div>\n      );\n    }\n  } \n\n  const showDialog = () => {\n    console.log(\"working\");\n    if(positions != null && departments != null) {\n      if(positions.length > 0 && departments.length > 0){\n        return(\n          <div className={classes.root}>\n          <Grid container spacing={3}>\n            <Grid container item xs={12} spacing={3}>\n              <React.Fragment>\n                 <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Add Career History Record</DialogTitle>\n\n                    <DialogContent>\n                      <FormControl className={classes.formControl}>\n                        <InputLabel shrink=\"true\" id=\"position-label\">Position</InputLabel>\n                        <Select\n                          labelId=\"position-label\"\n                          id=\"position\"\n                          value={newPosition}\n                          onChange={handlePositionChange}\n                          label=\"Position\"\n                          fullwidth\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                        >\n                          <MenuItem  value=\"\"><em>Select</em></MenuItem>\n                          {positions.map((position) =>\n                            <MenuItem key={position.id} value={position.id}>{position.name}</MenuItem>)}  \n                        </Select>\n                      </FormControl>\n                     <br/>\n                      {/* <TextField margin=\"dense\" id=\"country\" label=\"Country\" type=\"text\" fullWidth/> */}\n                      <FormControl className={classes.formControl}>\n                        <InputLabel shrink=\"true\" id=\"department-label\">Department</InputLabel>\n                        <Select\n                          labelId=\"department-label\"\n                          id=\"department\"\n                          value={newDepartment}\n                          onChange={handleDepartmentChange}\n                          label=\"Department\"\n                          fullwidth\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                        >\n                         <MenuItem value=\"\"><em>Select</em></MenuItem>\n                            {departments.map((department) =>\n                            <MenuItem key={department.id} value={department.id}>{department.name}</MenuItem>  \n                          )}                         \n                        </Select>\n                      </FormControl>\n                      <br/>\n                      <FormControl className={classes.formControl}>\n                        <InputLabel shrink=\"true\" htmlFor=\"component-simple\">Start Date</InputLabel>\n                        <TextField margin=\"normal\" id=\"startDate\"  type=\"date\" fullWidth variant=\"outlined\" value={startDate} onChange={handleStartDateChange}/>\n                      </FormControl>\n                     <br/>\n                      <FormControl className={classes.formControl}>\n                        <InputLabel shrink=\"true\" htmlFor=\"component-simple\">End Date</InputLabel>\n                        <TextField margin=\"normal\" id=\"EndDate\"  type=\"date\" fullWidth variant=\"outlined\" value={endDate} onChange={handleEndDateChange}/>\n                      </FormControl>\n                    \n                    </DialogContent>\n\n                    <DialogActions>\n                    <div>\n                      <Button onClick={handleCancel} variant=\"contained\" color=\"primary\">Cancel</Button>\n                    </div>\n                    <div>\n                      <Button onClick={handleSave} variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />}>Save Address</Button>\n                    </div>\n                    </DialogActions>\n                  </Dialog>\n                </React.Fragment>\n               </Grid>\n              </Grid>\n             </div>  \n        )}  \n    }\n  }\n\n  \n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>  \n          {showInfo()}\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid container spacing={3}>    \n                <Grid item xs={12}>\n\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                    Add Career History Record\n                    {/* <Link to={'/add-address/' + empId}>Add Employee Address</Link> */}\n                  </Button>\n                </Grid>\n\n              <Grid item xs={12}>\n                <div>\n                {showDialog()}\n                </div>\n              </Grid>\n\n                </Grid>            \n                <Grid item xs={12}>\n                   <CareerHistoryTable data={empData}></CareerHistoryTable>  \n                </Grid>\n           \n            </div>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeAddressForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/Home.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileLayout.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeInformation.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeInformation.js",["121","122","123","124"],"import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Axios from 'axios';\nimport axios from './UpdateEmployeeComponents/axios';\n\n\nimport UpdateEmployeePIForm from './UpdateEmployeeComponents/UpdateEmployeePIForm';\n//import UpdateEmployeeAddressForm from './UpdateEmployeeComponents/UpdateEmployeeAddressForm';\nimport UpdateEmployeeContactForm from './UpdateEmployeeComponents/UpdateEmployeeContactForm';\nimport UpdateEmployeeOfficialInfoForm from './UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  \n   careerButton: {\n     marginLeft: '20px,'\n   }\n\n}));\n\nexport default function UpdateEmployeeInformation() {\n  const classes = useStyles();  \n  const [empInfoGet, setEmpInfoGet] = useState({});\n  const [error, setError] = useState();\n // const [employeeAddress, setEmployeeAddress] = useState({});\n\n  const params = useParams();\n  const eId = params.empId;\n\n  // AddEmployeePIForm INFORMATION\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [otherName, setOtherName] = useState(null);\n  const [otherNameTwo, setOtherNameTwo] = useState(null);\n  const [maritalStatus, setMaritalStatus] = useState(\"\");\n  const [religion, setReligion] = useState(\"\");\n  const [ethnicity, setEthnicity] = useState(\"\");\n  const [sex, setSex] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(null);\n  const [nationality, setNationality] = useState(\"\");\n\n  // AddEmployeeContactForm Information\n  const [homeNumber, setHomeNumber] = useState(null);\n  const [cellNumber, setCellNumber] = useState(null);\n  const [workNumber, setWorkNumber] = useState(null);\n  const [email, setEmail] = useState(null);\n\n    // AddEmployeeOfficialInfoForm Information\n  const [regimentNumber, setRegimentNumber] = useState(null);\n  const [nationalIdNumber, setNationalIdNumber] = useState(null);\n  const [passportNumber, setPassportNumber] = useState(null);\n  const [passportExpirationDate, setPassportExpirationDate] = useState(null);\n  const [tinNumber, setTinNumber] = useState(null);\n\n\n  useEffect(() => {   \n   const getEmpInfo = async () => {\n        if(eId){\n          const info = await Axios.get(\"EmployeeInfo/Id/\" + eId);\n          setEmpInfoGet(info.data);\n        }\n   /* const getEmpAddress = async () => {\n      if(regNumber){\n        const addressInfo = await Axios.get(\"EmployeeInfo/GetEmployeeAddressByTheirId?employeeId=1\");\n        setEmployeeAddress(addressInfo.data);\n      } */\n    };\n    getEmpInfo();\n\n    setFirstName(empInfoGet.firstName);\n    setLastName(empInfoGet.lastName);\n    setOtherName(empInfoGet.otherName);\n    setOtherNameTwo(empInfoGet.otherNameTwo);\n    setMaritalStatus(empInfoGet.maritalStatus);\n    setEthnicity(empInfoGet.ethnicity);\n    setReligion(empInfoGet.religion);\n    setSex(empInfoGet.sex);\n    setDateOfBirth(empInfoGet.dateOfBirth);\n    setNationality(empInfoGet.nationality);\n    setHomeNumber(empInfoGet.homeNumber);\n    setCellNumber(empInfoGet.cellNumber);\n    setWorkNumber(empInfoGet.workNumber);\n    setEmail(empInfoGet.email);\n    setRegimentNumber(empInfoGet.regimentNumber);\n    setNationalIdNumber(empInfoGet.nationalIdNumber);\n    setPassportNumber(empInfoGet.passportNumber);\n    setPassportExpirationDate(empInfoGet.passportExpirationDate);\n    setTinNumber(empInfoGet.tinNumber);\n\n    //getEmpAddress();\n  }, [eId, empInfoGet.firstName, empInfoGet.lastName, empInfoGet.otherName, empInfoGet.otherNameTwo, \n      empInfoGet.maritalStatus, empInfoGet.ethnicity, empInfoGet.religion, empInfoGet.sex, empInfoGet.dateOfBirth,\n      empInfoGet.nationality, empInfoGet.homeNumber, empInfoGet.cellNumber, empInfoGet.workNumber, empInfoGet.email,\n      empInfoGet.regimentNumber, empInfoGet.nationalIdNumber, empInfoGet.passportNumber, empInfoGet.passportExpirationDate,\n      empInfoGet.tinNumber]);\n\n  //console.log(empInfoGet.firstName);\n  //console.log(empInfoGet);\n  //console.log(empInfoGet.firstName);\n  \n  // AddEmployeePIForm INFORMATION\n\n  const handleFirstNameChange = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const handleLastNameChange = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const handleOtherNameChange = (event) => {\n    setOtherName(event.target.value);\n  };\n\n  const handleOtherNameTwoChange = (event) => {\n    setOtherNameTwo(event.target.value);\n  };\n\n  const handleMaritalStatusChange = (event) => {\n    setMaritalStatus(event.target.value);\n  };\n\n  const handleReligionChange = (event) => {\n    setReligion(event.target.value);\n  };\n\n  const handleEthnicityChange = (event) => {\n    setEthnicity(event.target.value);\n  };\n\n  // DON'T LAUGH TOO MUCH, YOU MIGHT POP A VEIN\n  const handleSexChange = (event) => {\n    setSex(event.target.value);\n  }\n\n  const handleDoBChange = (event) => {\n    setDateOfBirth(event.target.value);\n  }\n\n  const handleNationalityChange = (event) => {\n    setNationality(event.target.value);\n  }\n\n  // AddEmployeeContactForm Information\n  const handleHomeNumChange = (event) => {      \n    setHomeNumber(event.target.value);\n  }\n\n  const handleCellNumChange = (event) => {    \n    setCellNumber(event.target.value);\n  }\n\n  const handleWorkNumChange = (event) => {       \n    setWorkNumber(event.target.value); \n  }\n\n  const handleEmailChange = (event) => {    \n    setEmail(event.target.value);\n  }\n\n  // AddEmployeeOfficialInfoForm Information\n  const handleRegNumChange = (event) => {    \n    setRegimentNumber(event.target.value);\n  }\n\n  const handleNationalIdNumChange = (event) => {    \n    setNationalIdNumber(event.target.value);\n  }\n\n  const handlePassportNumChange = (event) => {    \n    setPassportNumber(event.target.value); \n  }\n\n  const handlePassportExpDateChange = (event) => {\n    setPassportExpirationDate(event.target.value);\n  }\n\n  const handleTinNumChange = (event) => {\n    setTinNumber(event.target.value);\n  }\n  console.log(maritalStatus);\n  console.log(religion);\n  console.log(nationality);\n  console.log(ethnicity);\n  console.log(firstName);\n\n\n  const postDataHandler = () => {    \n  let employeeInfo = {\n      id: parseInt(eId),\n      nationalityId: nationality,\n      religionId: religion,\n      ethnicityId: ethnicity,\n      maritalStatusId: maritalStatus,\n      homeNumber: parseInt(homeNumber, 10),\n      cellNumber: parseInt(cellNumber, 10),\n      workNumber: parseInt(workNumber, 10),\n      email: email,\n      title: '',\n      firstName: firstName,\n      lastName: lastName,\n      otherName: otherName,\n      regimentNumber: parseInt(regimentNumber, 10),\n      dateOfBirth: dateOfBirth,\n      sex: sex,\n      nationalIdNumber: parseInt(nationalIdNumber, 10),\n      passportNumber: passportNumber,\n      passportExpirationDate: passportExpirationDate,\n      tinNumber: parseInt(tinNumber, 10),\n    };\n    //console.log(employeeInfo);\n    axios.patch('/employeePI/' + eId, employeeInfo)\n      .then(response => console.log(response))\n      .catch(error => console.log(error))\n  }\n\n  const confirmationHandler = (error) =>{\n   <div>\n     {console.log(error)}\n    <Dialog\n    open = \"true\"\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\">\n    <DialogContent>\n      <DialogContentText id=\"alert-dialog-description\">{error}</DialogContentText>\n    </DialogContent>\n  </Dialog>\n  </div>\n  }\n  \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} >\n        <Grid item xs={6}>\n         <h1>Update Employee Profile</h1>\n        </Grid>\n        <Grid item xs={6}>\n          <h1>\n            <Button variant=\"outlined\" color=\"primary\">\n            <Link to={'/employee-history/'}>Update Career History</Link>\n            </Button>\n          </h1>\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <div>\n            <Grid container spacing={3}>          \n              <Grid item xs={12}>\n\n                <UpdateEmployeePIForm \n                  firstName={firstName}\n                  lastName={lastName}\n                  otherName={otherName}\n                  otherNameTwo={otherNameTwo}\n                  maritalStatus={maritalStatus} \n                  religion={religion}\n                  ethnicity={ethnicity}\n                  sex={sex}\n                  dateOfBirth={dateOfBirth}\n                  nationality={nationality}\n                  handleFirstNameChange={handleFirstNameChange}\n                  handleLastNameChange={handleLastNameChange}\n                  handleOtherNameChange={handleOtherNameChange}\n                  handleOtherNameTwoChange={handleOtherNameTwoChange}\n                  handleMaritalStatusChange={handleMaritalStatusChange}\n                  handleReligionChange={handleReligionChange}\n                  handleEthnicityChange={handleEthnicityChange}\n                  handleSexChange={handleSexChange}\n                  handleDoBChange={handleDoBChange}\n                  handleNationalityChange={handleNationalityChange}>                    \n                </UpdateEmployeePIForm>\n              </Grid>\n\n              {/*<Grid item xs={12}>\n                <AddEmployeeAddressForm \n                  lot={lot}\n                  street={street}\n                  area={area}\n                  village={village}\n                  region={region}\n                  country={country}\n                  handleLotChange={handleLotChange}\n                  handleStreetChange={handleStreetChange}\n                  handleAreaChange={handleAreaChange}\n                  handleVillageChange={handleVillageChange}\n                  handleRegionChange={handleRegionChange}\n                  handleCountryChange={handleCountryChange}></AddEmployeeAddressForm>\n              </Grid>*/}\n\n              <Grid item xs={12}>\n                <UpdateEmployeeContactForm \n                  homeNumber={homeNumber}\n                  cellNumber={cellNumber}\n                  workNumber={workNumber}\n                  email={email}\n                  handleHomeNumChange={handleHomeNumChange}\n                  handleCellNumChange={handleCellNumChange}\n                  handleWorkNumChange={handleWorkNumChange}\n                  handleEmailChange={handleEmailChange}>\n                </UpdateEmployeeContactForm>\n              </Grid >\n\n              <Grid item xs={12}>\n                <UpdateEmployeeOfficialInfoForm \n                  regimentNumber={regimentNumber}\n                  nationalIdNumber={nationalIdNumber}\n                  passportNumber={passportNumber}\n                  passportExpirationDate={passportExpirationDate}\n                  tinNumber={tinNumber}\n                  handleRegNumChange={handleRegNumChange}\n                  handleNationalIdNumChange={handleNationalIdNumChange}\n                  handlePassportNumChange={handlePassportNumChange}\n                  handlePassportExpDateChange={handlePassportExpDateChange}\n                  handleTinNumChange={handleTinNumChange}>\n                </UpdateEmployeeOfficialInfoForm>\n              </Grid >\n\n              <Grid item xs={12}>\n                <Button type=\"submit\" onClick={postDataHandler} variant=\"outlined\" color=\"primary\"> Update Employee </Button>\n                <p> {error} </p>\n              </Grid >\n            </Grid>           \n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryForm.js",["125","126","127","128","129"],"\n//FIRST SET OF CODE HERE!!\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { useParams } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'axios';\n\nconst defaultValues = {\n  rank: \"\",\n  department:\"\",\n  \n};\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n    \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function CareerHistoryForm(props) {  \n  const classes = useStyles();\n  \n  function FormRow() {\n    return (\n      <React.Fragment>\n        <div>\n            <Grid item xs={2}>\n            <Grid item xs={2}>\n              <TextField id=\"Rank\" label=\"Rank\" variant=\"outlined\" size=\"small\" />\n              <TextField id=\"Department\" label=\"Department\" variant=\"outlined\" size=\"small\" />\n            </Grid >\n          </Grid> \n        </div>    \n\n        <div>\n           <Grid>\n            <Grid item xs={2} >\n              <TextField id=\"StartDate\" label=\"StartDate\" variant=\"outlined\" InputLabelProps={{ shrink: true,}} size=\"small\" type=\"date\" />\n              <TextField id=\"EndDate\" label=\"EndDate\" variant=\"outlined\" InputLabelProps={{ shrink: true,}} size=\"small\" type=\"date\" />\n            </Grid >\n            <Button type='submit' color='primary'  variant='contained'>Add<SearchIcon /></Button>\n          </Grid> \n        </div>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <h4>Add Career Options </h4>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/CareerHistoryComponents/CareerHistoryTable.js",["130","131","132","133","134","135","136"],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeContactForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeeOfficialInfoForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/AddEmployeeComponents/AddEmployeePIForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchResultsTable.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByRegimentNumberForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/SearchPageComponents/SearchByOtherCriteriaForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeContactForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeeOfficialInfoForm.js",["137"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n\n  paragraphColor: {\n    color: 'red'\n  }  \n}));\n\nexport default function UpdateEmployeeOfficialInfoForm(props) {\n  const classes = useStyles();\n  const { register, errors } = useForm();\n \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n      <h4>Official Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"regimentalNumber\" label=\"RegimentalNumber\" name=\"regimentalNumber\" InputLabelProps={{ shrink: true,}} value={props.regimentNumber} onChange={props.handleRegNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 6, maxLength: 6, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'required' && (<p className={classes.paragraphColor}>Regiment Number is required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 6 numbers required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 6 numbers required</p>)}\n                {errors.regimentalNumber && errors.regimentalNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid regiment number</p>)}\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"identificationNumber\" name=\"identificationNumber\" label=\"IdentificationNumber\" InputLabelProps={{ shrink: true,}} value={props.nationalIdNumber} onChange={props.handleNationalIdNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 9, maxLength: 9, type: \"number\", pattern: /^[0-9]+$/i})}/>\n                {errors.identificationNumber && errors.identificationNumber.type === 'required' && (<p className={classes.paragraphColor}>National Identification Number is required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 9 numbers required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 9 numbers required</p>)}\n                {errors.identificationNumber && errors.identificationNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid ID Number</p>)}\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"passportNumber\" name=\"passportNumber\" label=\"PassportNumber\" InputLabelProps={{ shrink: true,}} value={props.passportNumber} onChange={props.handlePassportNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 8, maxLength: 8, type: \"text\"})}/>\n                {errors.passportNumber && errors.passportNumber.type === 'required' && (<p className={classes.paragraphColor}>Passport Number is required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 8 characters required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 8 characters required</p>)}\n                {errors.passportNumber && errors.passportNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Passport Number</p>)}\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"passportExpirationDate\" name=\"passportExpirationDate\" label=\"Passport Expiration Date\" InputLabelProps={{ shrink: true,}} value={props.passportExpirationDate} onChange={props.handlePassportExpDateChange} variant=\"outlined\" size=\"small\" InputLabelProps={{ shrink: true,}} type=\"date\" inputRef={register({ required: true})}/>\n                {errors.passportExpirationDate && errors.passportExpirationDate.type === 'required' && (<p className={classes.paragraphColor}>Passport Expiration Date is required</p>)}\n              </Grid >\n            </div>    \n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"tinNumber\" name=\"tinNumber\" label=\"TIN Number\" InputLabelProps={{ shrink: true,}} value={props.tinNumber} onChange={props.handleTinNumChange} variant=\"outlined\" size=\"small\" inputRef={register({ required: true, minLength: 9, maxLength: 9, type: \"number\", pattern: /^[0-9]+$/i })}/>\n                {errors.tinNumber && errors.tinNumber.type === 'required' && (<p className={classes.paragraphColor}>Tin Number is required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'minLength' && (<p className={classes.paragraphColor}>A minimum of 9 numbers required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'maxLength' && (<p className={classes.paragraphColor}>A maximum of 9 numbers required</p>)}\n                {errors.tinNumber && errors.tinNumber.type === 'pattern' && (<p className={classes.paragraphColor}>Invalid Tin Number</p>)}\n              </Grid>\n            </div>        \n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/UpdateEmployeePIForm.js",["138"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n    }, \n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  \n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function UpdateEmployeePIForm(props) {  \n  const classes = useStyles();  \n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <h4>Personal Information</h4>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <div>\n              <Grid item xs={2}>\n                <TextField required name=\"FirstName\" label=\"First Name\" InputLabelProps={{ shrink: true,}} value={props.firstName} onChange={props.handleFirstNameChange} variant=\"outlined\" size=\"small\" />                \n                <TextField name=\"otherNameTwo\" label=\"Middle Name\" InputLabelProps={{ shrink: true,}} value={props.otherName} onChange={props.handleOtherNameChange} variant=\"outlined\" size=\"small\"  />\n              </Grid>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <TextField required id=\"LastName\" name=\"lastName\" label=\"Last Name\" InputLabelProps={{ shrink: true,}} value={props.lastName} onChange={props.handleLastNameChange} variant=\"outlined\" size=\"small\" />\n                <TextField id=\"MiddleNameTwo\" label=\"Middle Name\" InputLabelProps={{ shrink: true,}} value={props.otherNameTwo} onChange={props.handleOtherNameTwoChange} variant=\"outlined\" size=\"small\" />\n              </Grid >\n            </div> \n            <div>\n              <Grid item xs={2}>\n                <Grid item xs={2}>\n                  <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                    <InputLabel id=\"sex-label\">Sex</InputLabel>\n                    <Select\n                      labelId=\"sex-label\"\n                      id=\"sex\"\n                      value={props.sex}\n                      onChange={props.handleSexChange}\n                      label=\"Sex\"                  \n                    >\n                      <MenuItem value=\"\"><em>Select</em></MenuItem>\n                      <MenuItem value={\"Male\"}>Male</MenuItem>\n                      <MenuItem value={\"Female\"}>Female</MenuItem>\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                  <TextField id=\"dateOfBirth\" label=\"Date of Birth\" InputLabelProps={{ shrink: true,}} value={props.dateOfBirth} onChange={props.handleDoBChange} variant=\"outlined\" InputLabelProps={{ shrink: true,}} size=\"small\" type=\"date\" />\n                </Grid>\n              </Grid >\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"ethnicity-label\">Ethnicity</InputLabel>\n                  <Select\n                    labelId=\"ethnicity-label\"\n                    id=\"ethnicity\"\n                    value={props.ethnicity}\n                    onChange={props.handleEthnicityChange}\n                    label=\"Ethnicity\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>African</MenuItem>\n                    <MenuItem value={2}>Indian</MenuItem>\n                    <MenuItem value={3}>Amerindian</MenuItem>\n                    <MenuItem value={4}>Chinese</MenuItem>\n                    <MenuItem value={5}>Portuguese</MenuItem>\n                    <MenuItem value={6}>Mixed</MenuItem>\n                  </Select>\n                </FormControl>         \n              </Grid >            \n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"religion-label\">Religion</InputLabel>\n                  <Select\n                    labelId=\"religion-label\"\n                    id=\"religion\"\n                    value={props.religion}\n                    onChange={props.handleReligionChange}\n                    label=\"Religion\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>Christian</MenuItem>\n                    <MenuItem value={2}>Muslim</MenuItem>\n                    <MenuItem value={3}>Hindu</MenuItem>\n                    <MenuItem value={4}>Other</MenuItem>                \n                  </Select>\n                </FormControl>\n            </div>\n            <div>\n              <Grid item xs={2}>\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"marital-status-label\">Marital Status</InputLabel>\n                  <Select\n                    labelId=\"marital-status-label\"\n                    id=\"marital-status\"\n                    value={props.maritalStatus}\n                    onChange={props.handleMaritalStatusChange}\n                    label=\"Marital Status\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>Single</MenuItem>\n                    <MenuItem value={2}>Married</MenuItem>\n                    <MenuItem value={3}>Divorced</MenuItem>\n                  </Select>\n                </FormControl>\n                {/*<TextField id=\"Nationality\" label=\"Nationality\" value={props.nationality} onChange={props.handleNationalityChange} variant=\"outlined\" size=\"small\" />*/}\n                <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                  <InputLabel id=\"nationality-label\">Nationality</InputLabel>\n                  <Select\n                    labelId=\"nationality-label\"\n                    id=\"Nationality\"\n                    InputLabelProps={{ shrink: true,}}\n                    value={props.nationality}\n                    onChange={props.handleNationalityChange}\n                    label=\"Nationality\"\n                  >\n                    <MenuItem value=\"\"><em>Select</em></MenuItem>\n                    <MenuItem value={1}>Guyanese</MenuItem>\n                    <MenuItem value={2}>Surinamese</MenuItem>\n                    <MenuItem value={3}>Brazillian</MenuItem>\n                    <MenuItem value={4}>Venezuelan</MenuItem>\n                    <MenuItem value={5}>Trinidadian</MenuItem>\n                    <MenuItem value={6}>Barbadian</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid >\n            </div>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/UpdateEmployeeComponents/axios.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/OfficialInformationForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/AddressForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/PersonalInformationForm.js",[],"/Users/arriannamahase/Documents/GitHub/GDF-hrms-frontend/front-end/gdf-hrms/src/components/EmployeeProfileComponents/ContactForm.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":11,"column":8,"nodeType":"145","messageId":"146","endLine":11,"endColumn":13},{"ruleId":"143","severity":1,"message":"147","line":149,"column":9,"nodeType":"145","messageId":"146","endLine":149,"endColumn":17},{"ruleId":"143","severity":1,"message":"148","line":159,"column":9,"nodeType":"145","messageId":"146","endLine":159,"endColumn":19},{"ruleId":"143","severity":1,"message":"149","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":21},{"ruleId":"143","severity":1,"message":"150","line":10,"column":8,"nodeType":"145","messageId":"146","endLine":10,"endColumn":19},{"ruleId":"143","severity":1,"message":"151","line":44,"column":17,"nodeType":"145","messageId":"146","endLine":44,"endColumn":25},{"ruleId":"143","severity":1,"message":"152","line":237,"column":9,"nodeType":"145","messageId":"146","endLine":237,"endColumn":28},{"ruleId":"143","severity":1,"message":"153","line":3,"column":17,"nodeType":"145","messageId":"146","endLine":3,"endColumn":25},{"ruleId":"143","severity":1,"message":"154","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":20},{"ruleId":"143","severity":1,"message":"155","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":19},{"ruleId":"143","severity":1,"message":"156","line":10,"column":8,"nodeType":"145","messageId":"146","endLine":10,"endColumn":13},{"ruleId":"143","severity":1,"message":"157","line":12,"column":7,"nodeType":"145","messageId":"146","endLine":12,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":16,"column":8,"nodeType":"145","messageId":"146","endLine":16,"endColumn":13},{"ruleId":"143","severity":1,"message":"158","line":119,"column":9,"nodeType":"145","messageId":"146","endLine":119,"endColumn":10},{"ruleId":"159","severity":1,"message":"160","line":124,"column":34,"nodeType":"161","messageId":"162","endLine":124,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":125,"column":26,"nodeType":"165","messageId":"166","endLine":125,"endColumn":28},{"ruleId":"159","severity":1,"message":"160","line":133,"column":30,"nodeType":"161","messageId":"162","endLine":133,"endColumn":32},{"ruleId":"163","severity":1,"message":"164","line":134,"column":24,"nodeType":"165","messageId":"166","endLine":134,"endColumn":26},{"ruleId":"143","severity":1,"message":"167","line":151,"column":9,"nodeType":"145","messageId":"146","endLine":151,"endColumn":24},{"ruleId":"168","severity":1,"message":"169","line":66,"column":277,"nodeType":"170","endLine":66,"endColumn":311},{"ruleId":"168","severity":1,"message":"169","line":71,"column":182,"nodeType":"170","endLine":71,"endColumn":216},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'showInfo' is assigned a value but never used.","'showDialog' is assigned a value but never used.","'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","'setError' is assigned a value but never used.","'confirmationHandler' is assigned a value but never used.","'useState' is defined but never used.","'withStyles' is defined but never used.","'useParams' is defined but never used.","'axios' is defined but never used.","'defaultValues' is assigned a value but never used.","'i' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleClickOpen' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]